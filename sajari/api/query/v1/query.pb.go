// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/api/query/v1/query.proto

package querypb

import (
	engine "code.sajari.com/protogen-go/sajari/engine"
	v1 "code.sajari.com/protogen-go/sajari/engine/query/v1"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SearchRequest_Tracking_Type int32

const (
	// No tracking will occur.
	SearchRequest_Tracking_NONE SearchRequest_Tracking_Type = 0
	// Click tracking will be used.
	//
	// A click token will be generated for each result.  To register a click see <the other
	// API calls>.  Results which are returned and not clicked on will fall down rankings, and
	// similarly low-ranked records which receive clicks will be moved up the rankings.
	SearchRequest_Tracking_CLICK SearchRequest_Tracking_Type = 1
	// Pos/neg tokens will be generated for each result.  Each record in the result set can be
	// marked with pos/neg value for the search.  This is then fed back into the ranking algorithm
	// to improve future results.  Unlike CLICK, if no tokens are reported for records then
	// no action is taken.
	SearchRequest_Tracking_POS_NEG SearchRequest_Tracking_Type = 2
)

var SearchRequest_Tracking_Type_name = map[int32]string{
	0: "NONE",
	1: "CLICK",
	2: "POS_NEG",
}

var SearchRequest_Tracking_Type_value = map[string]int32{
	"NONE":    0,
	"CLICK":   1,
	"POS_NEG": 2,
}

func (x SearchRequest_Tracking_Type) String() string {
	return proto.EnumName(SearchRequest_Tracking_Type_name, int32(x))
}

func (SearchRequest_Tracking_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{0, 0, 0}
}

type Transform_RunType int32

const (
	// Run the transform before the query.
	Transform_PRE_QUERY Transform_RunType = 0
	// Run the transform on the request.
	Transform_POST_NON_EMPTY Transform_RunType = 1
	// After an empty query this will apply the transform to the query and the re-run the query.
	Transform_POST_EMPTY_PRE_RETRY Transform_RunType = 2
)

var Transform_RunType_name = map[int32]string{
	0: "PRE_QUERY",
	1: "POST_NON_EMPTY",
	2: "POST_EMPTY_PRE_RETRY",
}

var Transform_RunType_value = map[string]int32{
	"PRE_QUERY":            0,
	"POST_NON_EMPTY":       1,
	"POST_EMPTY_PRE_RETRY": 2,
}

func (x Transform_RunType) String() string {
	return proto.EnumName(Transform_RunType_name, int32(x))
}

func (Transform_RunType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{5, 0}
}

// SearchRequest
type SearchRequest struct {
	// Underlying search request to be passed to the engine
	SearchRequest *v1.SearchRequest `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	// Tracking configuration for the query.
	Tracking *SearchRequest_Tracking `protobuf:"bytes,4,opt,name=tracking,proto3" json:"tracking,omitempty"`
	// Transforms to be applied to the query (can be before, after or even on failure).
	Transforms           []*Transform `protobuf:"bytes,5,rep,name=transforms,proto3" json:"transforms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{0}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetSearchRequest() *v1.SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *SearchRequest) GetTracking() *SearchRequest_Tracking {
	if m != nil {
		return m.Tracking
	}
	return nil
}

func (m *SearchRequest) GetTransforms() []*Transform {
	if m != nil {
		return m.Transforms
	}
	return nil
}

type SearchRequest_Tracking struct {
	// Tracking mode for query.
	//
	// Tracking is done using tokens which are added to result sets and identify individual results.
	// Tokens are used to improve the ranking of records by reporting clicks (i.e. positive action)
	// or pos/neg (i.e positive or negative reporting) on the position of a record in results.
	Type SearchRequest_Tracking_Type `protobuf:"varint,1,opt,name=type,proto3,enum=sajari.api.query.v1.SearchRequest_Tracking_Type" json:"type,omitempty"`
	// Query ID of the query.  If this is empty, then one is generated.
	QueryId string `protobuf:"bytes,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Sequence number of query.
	Sequence int32 `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// Tracking field (must be unique in the collection) used to identify records in the collection.
	Field string `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	// Custom values to be included in tracking data.
	Data                 map[string]string `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SearchRequest_Tracking) Reset()         { *m = SearchRequest_Tracking{} }
func (m *SearchRequest_Tracking) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_Tracking) ProtoMessage()    {}
func (*SearchRequest_Tracking) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{0, 0}
}

func (m *SearchRequest_Tracking) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_Tracking.Unmarshal(m, b)
}
func (m *SearchRequest_Tracking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_Tracking.Marshal(b, m, deterministic)
}
func (m *SearchRequest_Tracking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_Tracking.Merge(m, src)
}
func (m *SearchRequest_Tracking) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_Tracking.Size(m)
}
func (m *SearchRequest_Tracking) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_Tracking.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_Tracking proto.InternalMessageInfo

func (m *SearchRequest_Tracking) GetType() SearchRequest_Tracking_Type {
	if m != nil {
		return m.Type
	}
	return SearchRequest_Tracking_NONE
}

func (m *SearchRequest_Tracking) GetQueryId() string {
	if m != nil {
		return m.QueryId
	}
	return ""
}

func (m *SearchRequest_Tracking) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *SearchRequest_Tracking) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *SearchRequest_Tracking) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

// SearchResponse is a wrapped response from the engine with interaction tokens
// and other information which was used to construct the query from the SearchRequest.
type SearchResponse struct {
	// SearchResponse from the engine request.
	SearchResponse *v1.SearchResponse `protobuf:"bytes,1,opt,name=search_response,json=searchResponse,proto3" json:"search_response,omitempty"`
	// SearchRequest used in the query (if this has been changed).
	SearchRequest *v1.SearchRequest `protobuf:"bytes,2,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	// Tokens which correspond to the result records.
	Tokens               []*Token `protobuf:"bytes,3,rep,name=tokens,proto3" json:"tokens,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{1}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetSearchResponse() *v1.SearchResponse {
	if m != nil {
		return m.SearchResponse
	}
	return nil
}

func (m *SearchResponse) GetSearchRequest() *v1.SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *SearchResponse) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type EvaluateRequest struct {
	// Underlying search request to be passed to the engine
	SearchRequest        *v1.SearchRequest `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	Key                  *engine.Key       `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EvaluateRequest) Reset()         { *m = EvaluateRequest{} }
func (m *EvaluateRequest) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequest) ProtoMessage()    {}
func (*EvaluateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{2}
}

func (m *EvaluateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequest.Unmarshal(m, b)
}
func (m *EvaluateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequest.Marshal(b, m, deterministic)
}
func (m *EvaluateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequest.Merge(m, src)
}
func (m *EvaluateRequest) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequest.Size(m)
}
func (m *EvaluateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequest proto.InternalMessageInfo

func (m *EvaluateRequest) GetSearchRequest() *v1.SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *EvaluateRequest) GetKey() *engine.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type EvaluateResponse struct {
	// SearchResponse from the engine request.
	SearchResponse       *v1.SearchResponse `protobuf:"bytes,1,opt,name=search_response,json=searchResponse,proto3" json:"search_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EvaluateResponse) Reset()         { *m = EvaluateResponse{} }
func (m *EvaluateResponse) String() string { return proto.CompactTextString(m) }
func (*EvaluateResponse) ProtoMessage()    {}
func (*EvaluateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{3}
}

func (m *EvaluateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateResponse.Unmarshal(m, b)
}
func (m *EvaluateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateResponse.Marshal(b, m, deterministic)
}
func (m *EvaluateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateResponse.Merge(m, src)
}
func (m *EvaluateResponse) XXX_Size() int {
	return xxx_messageInfo_EvaluateResponse.Size(m)
}
func (m *EvaluateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateResponse proto.InternalMessageInfo

func (m *EvaluateResponse) GetSearchResponse() *v1.SearchResponse {
	if m != nil {
		return m.SearchResponse
	}
	return nil
}

// Tokens are used to mark result records as well/poorly ranked for a query.
// TODO(dhowden): fix this comment!
type Token struct {
	// Types that are valid to be assigned to Token:
	//	*Token_Click_
	//	*Token_PosNeg_
	Token                isToken_Token `protobuf_oneof:"token"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{4}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

type isToken_Token interface {
	isToken_Token()
}

type Token_Click_ struct {
	Click *Token_Click `protobuf:"bytes,1,opt,name=click,proto3,oneof"`
}

type Token_PosNeg_ struct {
	PosNeg *Token_PosNeg `protobuf:"bytes,2,opt,name=pos_neg,json=posNeg,proto3,oneof"`
}

func (*Token_Click_) isToken_Token() {}

func (*Token_PosNeg_) isToken_Token() {}

func (m *Token) GetToken() isToken_Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Token) GetClick() *Token_Click {
	if x, ok := m.GetToken().(*Token_Click_); ok {
		return x.Click
	}
	return nil
}

func (m *Token) GetPosNeg() *Token_PosNeg {
	if x, ok := m.GetToken().(*Token_PosNeg_); ok {
		return x.PosNeg
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Token) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Token_Click_)(nil),
		(*Token_PosNeg_)(nil),
	}
}

// Click is a token that corresponds to selecting a record from a result set.
// It is taken as an indication that this record is a good match for the
// corresponding SearchRequest.
type Token_Click struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token_Click) Reset()         { *m = Token_Click{} }
func (m *Token_Click) String() string { return proto.CompactTextString(m) }
func (*Token_Click) ProtoMessage()    {}
func (*Token_Click) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{4, 0}
}

func (m *Token_Click) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token_Click.Unmarshal(m, b)
}
func (m *Token_Click) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token_Click.Marshal(b, m, deterministic)
}
func (m *Token_Click) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token_Click.Merge(m, src)
}
func (m *Token_Click) XXX_Size() int {
	return xxx_messageInfo_Token_Click.Size(m)
}
func (m *Token_Click) XXX_DiscardUnknown() {
	xxx_messageInfo_Token_Click.DiscardUnknown(m)
}

var xxx_messageInfo_Token_Click proto.InternalMessageInfo

func (m *Token_Click) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// PosNeg is a pair of tokens which are used to mark a record as a good/bad
// result for a SearchRequest.
type Token_PosNeg struct {
	Pos                  string   `protobuf:"bytes,1,opt,name=pos,proto3" json:"pos,omitempty"`
	Neg                  string   `protobuf:"bytes,2,opt,name=neg,proto3" json:"neg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token_PosNeg) Reset()         { *m = Token_PosNeg{} }
func (m *Token_PosNeg) String() string { return proto.CompactTextString(m) }
func (*Token_PosNeg) ProtoMessage()    {}
func (*Token_PosNeg) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{4, 1}
}

func (m *Token_PosNeg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token_PosNeg.Unmarshal(m, b)
}
func (m *Token_PosNeg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token_PosNeg.Marshal(b, m, deterministic)
}
func (m *Token_PosNeg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token_PosNeg.Merge(m, src)
}
func (m *Token_PosNeg) XXX_Size() int {
	return xxx_messageInfo_Token_PosNeg.Size(m)
}
func (m *Token_PosNeg) XXX_DiscardUnknown() {
	xxx_messageInfo_Token_PosNeg.DiscardUnknown(m)
}

var xxx_messageInfo_Token_PosNeg proto.InternalMessageInfo

func (m *Token_PosNeg) GetPos() string {
	if m != nil {
		return m.Pos
	}
	return ""
}

func (m *Token_PosNeg) GetNeg() string {
	if m != nil {
		return m.Neg
	}
	return ""
}

type Transform struct {
	// When to run the transform.
	RunType Transform_RunType `protobuf:"varint,1,opt,name=run_type,json=runType,proto3,enum=sajari.api.query.v1.Transform_RunType" json:"run_type,omitempty"`
	// Identifier for the transform.
	Identifier           string   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transform) Reset()         { *m = Transform{} }
func (m *Transform) String() string { return proto.CompactTextString(m) }
func (*Transform) ProtoMessage()    {}
func (*Transform) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{5}
}

func (m *Transform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transform.Unmarshal(m, b)
}
func (m *Transform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transform.Marshal(b, m, deterministic)
}
func (m *Transform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transform.Merge(m, src)
}
func (m *Transform) XXX_Size() int {
	return xxx_messageInfo_Transform.Size(m)
}
func (m *Transform) XXX_DiscardUnknown() {
	xxx_messageInfo_Transform.DiscardUnknown(m)
}

var xxx_messageInfo_Transform proto.InternalMessageInfo

func (m *Transform) GetRunType() Transform_RunType {
	if m != nil {
		return m.RunType
	}
	return Transform_PRE_QUERY
}

func (m *Transform) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// AnalyseRequest is a wrapper for the engine AnalyseRequest message.
type AnalyseRequest struct {
	AnalyseRequest       *v1.AnalyseRequest `protobuf:"bytes,1,opt,name=analyse_request,json=analyseRequest,proto3" json:"analyse_request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AnalyseRequest) Reset()         { *m = AnalyseRequest{} }
func (m *AnalyseRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyseRequest) ProtoMessage()    {}
func (*AnalyseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{6}
}

func (m *AnalyseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyseRequest.Unmarshal(m, b)
}
func (m *AnalyseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyseRequest.Marshal(b, m, deterministic)
}
func (m *AnalyseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyseRequest.Merge(m, src)
}
func (m *AnalyseRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyseRequest.Size(m)
}
func (m *AnalyseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyseRequest proto.InternalMessageInfo

func (m *AnalyseRequest) GetAnalyseRequest() *v1.AnalyseRequest {
	if m != nil {
		return m.AnalyseRequest
	}
	return nil
}

// AnaylseResponse is a wrapper for the engine AnalyseResponse message.
type AnalyseResponse struct {
	AnalyseResponse      *v1.AnalyseResponse `protobuf:"bytes,1,opt,name=analyse_response,json=analyseResponse,proto3" json:"analyse_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AnalyseResponse) Reset()         { *m = AnalyseResponse{} }
func (m *AnalyseResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyseResponse) ProtoMessage()    {}
func (*AnalyseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01bcd83042d8f968, []int{7}
}

func (m *AnalyseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyseResponse.Unmarshal(m, b)
}
func (m *AnalyseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyseResponse.Marshal(b, m, deterministic)
}
func (m *AnalyseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyseResponse.Merge(m, src)
}
func (m *AnalyseResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyseResponse.Size(m)
}
func (m *AnalyseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyseResponse proto.InternalMessageInfo

func (m *AnalyseResponse) GetAnalyseResponse() *v1.AnalyseResponse {
	if m != nil {
		return m.AnalyseResponse
	}
	return nil
}

func init() {
	proto.RegisterEnum("sajari.api.query.v1.SearchRequest_Tracking_Type", SearchRequest_Tracking_Type_name, SearchRequest_Tracking_Type_value)
	proto.RegisterEnum("sajari.api.query.v1.Transform_RunType", Transform_RunType_name, Transform_RunType_value)
	proto.RegisterType((*SearchRequest)(nil), "sajari.api.query.v1.SearchRequest")
	proto.RegisterType((*SearchRequest_Tracking)(nil), "sajari.api.query.v1.SearchRequest.Tracking")
	proto.RegisterMapType((map[string]string)(nil), "sajari.api.query.v1.SearchRequest.Tracking.DataEntry")
	proto.RegisterType((*SearchResponse)(nil), "sajari.api.query.v1.SearchResponse")
	proto.RegisterType((*EvaluateRequest)(nil), "sajari.api.query.v1.EvaluateRequest")
	proto.RegisterType((*EvaluateResponse)(nil), "sajari.api.query.v1.EvaluateResponse")
	proto.RegisterType((*Token)(nil), "sajari.api.query.v1.Token")
	proto.RegisterType((*Token_Click)(nil), "sajari.api.query.v1.Token.Click")
	proto.RegisterType((*Token_PosNeg)(nil), "sajari.api.query.v1.Token.PosNeg")
	proto.RegisterType((*Transform)(nil), "sajari.api.query.v1.Transform")
	proto.RegisterType((*AnalyseRequest)(nil), "sajari.api.query.v1.AnalyseRequest")
	proto.RegisterType((*AnalyseResponse)(nil), "sajari.api.query.v1.AnalyseResponse")
}

func init() { proto.RegisterFile("sajari/api/query/v1/query.proto", fileDescriptor_01bcd83042d8f968) }

var fileDescriptor_01bcd83042d8f968 = []byte{
	// 788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0x8e, 0x93, 0x38, 0x89, 0x0f, 0x22, 0xb1, 0xa6, 0x48, 0x4d, 0x2d, 0x95, 0xa6, 0x2e, 0xd0,
	0x48, 0x6d, 0x9d, 0x92, 0xaa, 0x82, 0xfe, 0xa8, 0x12, 0x3f, 0x2e, 0x20, 0x68, 0x12, 0x86, 0x54,
	0x15, 0xbd, 0xb1, 0x06, 0x67, 0x48, 0xdd, 0x04, 0xdb, 0x78, 0x1c, 0xa4, 0x3c, 0x40, 0x2f, 0xfa,
	0x3e, 0xab, 0x7d, 0x89, 0xbd, 0xde, 0x27, 0xd8, 0x17, 0x59, 0x79, 0x66, 0x62, 0x30, 0x1b, 0x12,
	0xa1, 0x15, 0x77, 0x73, 0x0e, 0xdf, 0xf7, 0x9d, 0x9f, 0xf9, 0xc6, 0x04, 0xbe, 0x60, 0xe4, 0x5f,
	0x12, 0x79, 0x2d, 0x12, 0x7a, 0xad, 0xdb, 0x09, 0x8d, 0xa6, 0xad, 0xbb, 0x6d, 0x71, 0xb0, 0xc2,
	0x28, 0x88, 0x03, 0xf4, 0x89, 0x00, 0x58, 0x24, 0xf4, 0x2c, 0x91, 0xbf, 0xdb, 0x36, 0x4c, 0xc9,
	0xa2, 0xfe, 0xd0, 0xf3, 0xe9, 0x5c, 0xa2, 0xf1, 0x69, 0x16, 0x33, 0xa2, 0xf2, 0x0f, 0xe6, 0xab,
	0x22, 0xac, 0x5e, 0x50, 0x12, 0xb9, 0xff, 0x60, 0x7a, 0x3b, 0xa1, 0x2c, 0x46, 0x67, 0x50, 0x65,
	0x3c, 0xe1, 0x44, 0x22, 0x53, 0x57, 0x1a, 0x4a, 0x73, 0xa5, 0xbd, 0x69, 0xc9, 0xe2, 0x42, 0x23,
	0xad, 0x6f, 0x65, 0xe8, 0x78, 0x95, 0x65, 0xd4, 0x8e, 0xa0, 0x12, 0x47, 0xc4, 0x1d, 0x79, 0xfe,
	0xb0, 0x5e, 0xe4, 0x3a, 0xdf, 0x58, 0x73, 0x86, 0xc8, 0x8a, 0x58, 0x7d, 0x49, 0xc1, 0x29, 0x19,
	0xfd, 0x06, 0x10, 0x47, 0xc4, 0x67, 0xd7, 0x41, 0x74, 0xc3, 0xea, 0x6a, 0xa3, 0xd0, 0x5c, 0x69,
	0xaf, 0xcf, 0x95, 0xea, 0xcf, 0x60, 0xf8, 0x01, 0xc3, 0x78, 0x93, 0x87, 0xca, 0x4c, 0x16, 0x1d,
	0x42, 0x31, 0x9e, 0x86, 0x94, 0x4f, 0x56, 0x6d, 0x7f, 0xff, 0x8c, 0x8e, 0xac, 0xfe, 0x34, 0xa4,
	0x98, 0xb3, 0xd1, 0x67, 0x50, 0xe1, 0x68, 0xc7, 0x1b, 0xd4, 0xf3, 0x0d, 0xa5, 0xa9, 0xe1, 0x32,
	0x8f, 0x4f, 0x06, 0xc8, 0x80, 0x0a, 0x4b, 0x98, 0xbe, 0x4b, 0xeb, 0x85, 0x86, 0xd2, 0x54, 0x71,
	0x1a, 0xa3, 0x35, 0x50, 0xaf, 0x3d, 0x3a, 0x1e, 0xf0, 0x7d, 0x68, 0x58, 0x04, 0xe8, 0x04, 0x8a,
	0x03, 0x12, 0x13, 0x39, 0xd9, 0x8f, 0xcf, 0x69, 0xe9, 0x90, 0xc4, 0xc4, 0xf6, 0xe3, 0x68, 0x8a,
	0xb9, 0x84, 0xb1, 0x03, 0x5a, 0x9a, 0x42, 0x3a, 0x14, 0x46, 0x74, 0xca, 0x27, 0xd5, 0x70, 0x72,
	0x4c, 0xea, 0xdf, 0x91, 0xf1, 0x84, 0xca, 0x9e, 0x45, 0xf0, 0x73, 0x7e, 0x57, 0x31, 0x9b, 0x50,
	0x4c, 0xc6, 0x43, 0x15, 0x28, 0x76, 0xba, 0x1d, 0x5b, 0xcf, 0x21, 0x0d, 0xd4, 0x83, 0xb3, 0x93,
	0x83, 0x53, 0x5d, 0x41, 0x2b, 0x50, 0xee, 0x75, 0x2f, 0x9c, 0x8e, 0x7d, 0xa4, 0xe7, 0xcd, 0x77,
	0x0a, 0x54, 0x67, 0xdd, 0xb0, 0x30, 0xf0, 0x19, 0x45, 0x5d, 0xa8, 0xa5, 0xbe, 0x11, 0x29, 0x69,
	0x9c, 0xad, 0x65, 0xc6, 0x11, 0x68, 0x5c, 0x65, 0x59, 0xc1, 0x0f, 0x8d, 0x98, 0xff, 0x08, 0x23,
	0xb6, 0xa1, 0x14, 0x07, 0x23, 0xea, 0xb3, 0x7a, 0x81, 0x6f, 0xd8, 0x98, 0xef, 0x9d, 0x04, 0x82,
	0x25, 0xd2, 0xfc, 0x4f, 0x81, 0x9a, 0x9d, 0xac, 0x87, 0xc4, 0xf4, 0x65, 0x9e, 0xc7, 0x86, 0xb8,
	0x1d, 0x31, 0x18, 0x7a, 0x24, 0x71, 0x4a, 0xa7, 0xfc, 0xc6, 0x4c, 0x17, 0xf4, 0xfb, 0x36, 0x5e,
	0x68, 0xdd, 0xe6, 0x5b, 0x05, 0x54, 0x3e, 0x3e, 0xda, 0x05, 0xd5, 0x1d, 0x7b, 0xee, 0x48, 0x0a,
	0x36, 0x9e, 0xde, 0x94, 0x75, 0x90, 0xe0, 0x8e, 0x73, 0x58, 0x10, 0xd0, 0xaf, 0x50, 0x0e, 0x03,
	0xe6, 0xf8, 0x74, 0x28, 0x47, 0xfa, 0x72, 0x01, 0xb7, 0x17, 0xb0, 0x0e, 0x1d, 0x1e, 0xe7, 0x70,
	0x29, 0xe4, 0x27, 0xe3, 0x73, 0x50, 0xb9, 0x5e, 0xe2, 0x50, 0x7e, 0x03, 0xd2, 0xb5, 0x22, 0x30,
	0xbe, 0x85, 0x92, 0xa0, 0x24, 0x9e, 0x0e, 0x03, 0x36, 0xf3, 0x74, 0x18, 0xb0, 0x24, 0x33, 0x2b,
	0xaa, 0xe1, 0xe4, 0xb8, 0x5f, 0x96, 0x1a, 0xe6, 0x6b, 0x05, 0xb4, 0xf4, 0x93, 0x80, 0xf6, 0xa0,
	0x12, 0x4d, 0x7c, 0xe7, 0xc1, 0xeb, 0xdf, 0x5a, 0xfc, 0x11, 0xb1, 0xf0, 0xc4, 0xe7, 0x6f, 0xbe,
	0x1c, 0x89, 0x03, 0x5a, 0x07, 0xf0, 0x06, 0xd4, 0x8f, 0xbd, 0x6b, 0x8f, 0x46, 0xb2, 0xe4, 0x83,
	0x8c, 0xf9, 0x3b, 0x94, 0x25, 0x07, 0xad, 0x82, 0xd6, 0xc3, 0xb6, 0x73, 0xfe, 0xa7, 0x8d, 0x2f,
	0xf5, 0x1c, 0x42, 0x50, 0xed, 0x75, 0x2f, 0xfa, 0x4e, 0xa7, 0xdb, 0x71, 0xec, 0x3f, 0x7a, 0xfd,
	0x4b, 0x5d, 0x41, 0x75, 0x58, 0xe3, 0x39, 0x1e, 0x3b, 0x09, 0x1a, 0xdb, 0x7d, 0x7c, 0xa9, 0xe7,
	0x4d, 0x02, 0xd5, 0x3d, 0x9f, 0x8c, 0xa7, 0x2c, 0xf5, 0x5e, 0x17, 0x6a, 0x44, 0x64, 0x1e, 0x99,
	0xef, 0xc9, 0x3b, 0xcf, 0x0a, 0xe0, 0x2a, 0xc9, 0xc4, 0x26, 0x85, 0x5a, 0x8a, 0x90, 0xbe, 0xc2,
	0xa0, 0xdf, 0xd7, 0xc8, 0x18, 0xeb, 0xeb, 0xa5, 0x45, 0xa4, 0xb3, 0x6a, 0x24, 0x9b, 0x68, 0xff,
	0x9f, 0x07, 0xf5, 0x3c, 0x41, 0xa3, 0x73, 0x28, 0x09, 0x1b, 0x22, 0x73, 0xf9, 0x17, 0xce, 0xf8,
	0x6a, 0x21, 0x46, 0x36, 0xfc, 0x17, 0x54, 0x66, 0x8f, 0x03, 0x6d, 0xcc, 0x25, 0x3c, 0x7a, 0xc2,
	0xc6, 0xe6, 0x12, 0x94, 0x14, 0xee, 0x43, 0x59, 0x4e, 0x86, 0xe6, 0x37, 0x92, 0x5d, 0xae, 0xb1,
	0xb1, 0x18, 0x24, 0x54, 0xf7, 0x7f, 0xfa, 0x7b, 0xc7, 0x0d, 0x06, 0x74, 0x86, 0x75, 0x83, 0x9b,
	0x16, 0xff, 0x4f, 0x3c, 0xa4, 0xfe, 0x77, 0xc3, 0xa0, 0x35, 0xe7, 0x17, 0xc0, 0x2f, 0xfc, 0x10,
	0x5e, 0x5d, 0x95, 0x38, 0xf0, 0x87, 0xf7, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x95, 0xff, 0xf4,
	0x27, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Search performs a search.
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*EvaluateResponse, error)
	// Analyse performs analysis on a search and a set of records.
	Analyse(ctx context.Context, in *AnalyseRequest, opts ...grpc.CallOption) (*AnalyseResponse, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/sajari.api.query.v1.Query/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*EvaluateResponse, error) {
	out := new(EvaluateResponse)
	err := c.cc.Invoke(ctx, "/sajari.api.query.v1.Query/Evaluate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Analyse(ctx context.Context, in *AnalyseRequest, opts ...grpc.CallOption) (*AnalyseResponse, error) {
	out := new(AnalyseResponse)
	err := c.cc.Invoke(ctx, "/sajari.api.query.v1.Query/Analyse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Search performs a search.
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Evaluate(context.Context, *EvaluateRequest) (*EvaluateResponse, error)
	// Analyse performs analysis on a search and a set of records.
	Analyse(context.Context, *AnalyseRequest) (*AnalyseResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedQueryServer) Evaluate(ctx context.Context, req *EvaluateRequest) (*EvaluateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Evaluate not implemented")
}
func (*UnimplementedQueryServer) Analyse(ctx context.Context, req *AnalyseRequest) (*AnalyseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Analyse not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.query.v1.Query/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaluateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.query.v1.Query/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Evaluate(ctx, req.(*EvaluateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Analyse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Analyse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.query.v1.Query/Analyse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Analyse(ctx, req.(*AnalyseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.api.query.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Query_Search_Handler,
		},
		{
			MethodName: "Evaluate",
			Handler:    _Query_Evaluate_Handler,
		},
		{
			MethodName: "Analyse",
			Handler:    _Query_Analyse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/api/query/v1/query.proto",
}
