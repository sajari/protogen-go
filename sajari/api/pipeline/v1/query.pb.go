// Code generated by protoc-gen-go.
// source: sajari/api/pipeline/v1/query.proto
// DO NOT EDIT!

package sajari_api_pipeline_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sajari_api_query_v1 "github.com/sajari/protogen-go/sajari/api/query/v1"
import sajari_engine_query_v1 "github.com/sajari/protogen-go/sajari/engine/query/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SearchRequest is a request to perform a search using a pipeline.
type SearchRequest struct {
	// Pipeline to run.
	Pipeline *Pipeline `protobuf:"bytes,1,opt,name=pipeline" json:"pipeline,omitempty"`
	// Values is a mapping of key -> value which should be substituted
	// into the algorithm inputs.
	Values map[string]string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tracking is the tracking configuration.
	Tracking *sajari_api_query_v1.SearchRequest_Tracking `protobuf:"bytes,3,opt,name=tracking" json:"tracking,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SearchRequest) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

func (m *SearchRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SearchRequest) GetTracking() *sajari_api_query_v1.SearchRequest_Tracking {
	if m != nil {
		return m.Tracking
	}
	return nil
}

// SearchResponse is a response to a Search call.
type SearchResponse struct {
	// Input values with updates/modifications by querying system.
	Values map[string]string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// SearchResponse from the engine request.
	SearchResponse *sajari_engine_query_v1.SearchResponse `protobuf:"bytes,2,opt,name=search_response,json=searchResponse" json:"search_response,omitempty"`
	// Tokens which correspond to the result records.
	Tokens []*sajari_api_query_v1.Token `protobuf:"bytes,3,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SearchResponse) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SearchResponse) GetSearchResponse() *sajari_engine_query_v1.SearchResponse {
	if m != nil {
		return m.SearchResponse
	}
	return nil
}

func (m *SearchResponse) GetTokens() []*sajari_api_query_v1.Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "sajari.api.pipeline.v1.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "sajari.api.pipeline.v1.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Query service

type QueryClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/sajari.api.pipeline.v1.Query/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Query service

type QueryServer interface {
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.pipeline.v1.Query/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.api.pipeline.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Query_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/api/pipeline/v1/query.proto",
}

func init() { proto.RegisterFile("sajari/api/pipeline/v1/query.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x92, 0x51, 0x4b, 0xfb, 0x30,
	0x14, 0xc5, 0x69, 0xcb, 0xca, 0xfe, 0xb7, 0xfc, 0xa7, 0x04, 0x91, 0xd2, 0x17, 0xc7, 0x60, 0x63,
	0x20, 0xa4, 0xac, 0xbe, 0xa8, 0xf8, 0x2a, 0xa2, 0x2f, 0x6a, 0x1c, 0xfa, 0xa8, 0x71, 0x84, 0x59,
	0x37, 0xda, 0x2c, 0xe9, 0x06, 0xfb, 0x2e, 0x7e, 0x58, 0xe9, 0x4d, 0x5b, 0x3a, 0xd7, 0xe1, 0xc0,
	0xb7, 0xb4, 0xfc, 0xce, 0xb9, 0xe7, 0xdc, 0x04, 0x7a, 0x9a, 0x7f, 0x72, 0x15, 0x87, 0x5c, 0xc6,
	0xa1, 0x8c, 0xa5, 0x98, 0xc7, 0x89, 0x08, 0x57, 0xa3, 0x70, 0xb1, 0x14, 0x6a, 0x4d, 0xa5, 0x4a,
	0xb3, 0x94, 0x1c, 0x1b, 0x86, 0x72, 0x19, 0xd3, 0x92, 0xa1, 0xab, 0x51, 0x70, 0x52, 0xd3, 0x22,
	0xff, 0x43, 0x18, 0x94, 0xe6, 0x22, 0x99, 0xe6, 0xb6, 0x8d, 0x4c, 0x7f, 0x47, 0x80, 0x6a, 0x10,
	0x62, 0xbd, 0x2f, 0x1b, 0xfe, 0x3f, 0x09, 0xae, 0x26, 0x1f, 0x4c, 0x2c, 0x96, 0x42, 0x67, 0xe4,
	0x0a, 0xda, 0x25, 0xe3, 0x5b, 0x5d, 0x6b, 0xe8, 0x45, 0x5d, 0xda, 0x1c, 0x94, 0x3e, 0x14, 0x67,
	0x56, 0x29, 0xc8, 0x2d, 0xb8, 0x2b, 0x3e, 0x5f, 0x0a, 0xed, 0xdb, 0x5d, 0x67, 0xe8, 0x45, 0xa3,
	0x5d, 0xda, 0x8d, 0xa1, 0xf4, 0x19, 0x35, 0xd7, 0x49, 0xa6, 0xd6, 0xac, 0x30, 0x20, 0x37, 0xd0,
	0xce, 0x14, 0x9f, 0xcc, 0xe2, 0x64, 0xea, 0x3b, 0x18, 0xe4, 0xb4, 0x6e, 0x66, 0xca, 0x6e, 0x39,
	0x8d, 0x0b, 0x09, 0xab, 0xc4, 0xc1, 0x05, 0x78, 0x35, 0x7f, 0x72, 0x08, 0xce, 0x4c, 0xac, 0xb1,
	0xdb, 0x3f, 0x96, 0x1f, 0xc9, 0x11, 0xb4, 0x70, 0xa6, 0x6f, 0xe3, 0x3f, 0xf3, 0x71, 0x69, 0x9f,
	0x5b, 0xf9, 0x7a, 0x3a, 0xa5, 0xbf, 0x96, 0x69, 0xa2, 0x05, 0xb9, 0xab, 0x1a, 0x5a, 0xd8, 0x30,
	0xfa, 0xad, 0xa1, 0xd1, 0x35, 0x56, 0xbc, 0x87, 0x03, 0x8d, 0xd4, 0xab, 0x2a, 0x30, 0x8c, 0xe0,
	0x45, 0x83, 0xd2, 0xd4, 0x5c, 0xf1, 0x76, 0x59, 0x43, 0xb3, 0x8e, 0xde, 0x0c, 0x17, 0x81, 0x9b,
	0xa5, 0x33, 0x91, 0x68, 0xdf, 0xc1, 0x70, 0x41, 0xe3, 0xc6, 0xc6, 0x39, 0xc2, 0x0a, 0xf2, 0x0f,
	0xeb, 0x89, 0xde, 0xa0, 0xf5, 0x98, 0x9b, 0x92, 0x17, 0x70, 0x4d, 0x32, 0xd2, 0xdf, 0xeb, 0xc2,
	0x83, 0xc1, 0x7e, 0x5b, 0x7b, 0x77, 0xf1, 0x99, 0x9e, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0x98,
	0x2d, 0x0c, 0xd7, 0x50, 0x03, 0x00, 0x00,
}
