// Code generated by protoc-gen-go.
// source: sajari/api/pipeline/v1/record.proto
// DO NOT EDIT!

package sajari_api_pipeline_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sajari_engine_store_record "github.com/sajari/protogen-go/sajari/engine/store/record"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SearchRequest is a request to perform a search using a pipeline.
type AddRequest struct {
	// Pipeline to run.
	Pipeline *Pipeline `protobuf:"bytes,1,opt,name=pipeline" json:"pipeline,omitempty"`
	// Values is a mapping of key -> value which should be substituted
	// into the pipeline inputs.
	Values map[string]string `protobuf:"bytes,2,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// List of records to add.
	Records []*sajari_engine_store_record.Record `protobuf:"bytes,3,rep,name=records" json:"records,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AddRequest) GetPipeline() *Pipeline {
	if m != nil {
		return m.Pipeline
	}
	return nil
}

func (m *AddRequest) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *AddRequest) GetRecords() []*sajari_engine_store_record.Record {
	if m != nil {
		return m.Records
	}
	return nil
}

// SearchResponse is a response to an Add call.
type AddResponse struct {
	Response *sajari_engine_store_record.AddResponse `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (m *AddResponse) String() string            { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *AddResponse) GetResponse() *sajari_engine_store_record.AddResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*AddRequest)(nil), "sajari.api.pipeline.v1.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "sajari.api.pipeline.v1.AddResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Store service

type StoreClient interface {
	// Add adds a list of records to a collection using a store pipeline.
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/sajari.api.pipeline.v1.Store/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Store service

type StoreServer interface {
	// Add adds a list of records to a collection using a store pipeline.
	Add(context.Context, *AddRequest) (*AddResponse, error)
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.pipeline.v1.Store/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.api.pipeline.v1.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Store_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/api/pipeline/v1/record.proto",
}

func init() { proto.RegisterFile("sajari/api/pipeline/v1/record.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x42, 0x6b, 0x9d, 0x5c, 0x64, 0x11, 0x09, 0x39, 0x85, 0x14, 0x69, 0x4f, 0x13,
	0x1a, 0x2f, 0x2a, 0xbd, 0x14, 0xd1, 0xa3, 0xc8, 0x0a, 0x7a, 0x8e, 0x66, 0x90, 0x68, 0x49, 0xd6,
	0xdd, 0x34, 0xd0, 0xdf, 0xe0, 0x9f, 0x96, 0x4c, 0x36, 0xb1, 0x82, 0xad, 0xa7, 0x4c, 0xc2, 0xfb,
	0xde, 0xbc, 0x37, 0x81, 0xa9, 0xc9, 0xde, 0x33, 0x5d, 0x24, 0x99, 0x2a, 0x12, 0x55, 0x28, 0x5a,
	0x17, 0x25, 0x25, 0xcd, 0x22, 0xd1, 0xf4, 0x5a, 0xe9, 0x1c, 0x95, 0xae, 0xea, 0x4a, 0x9c, 0x75,
	0x22, 0xcc, 0x54, 0x81, 0xbd, 0x08, 0x9b, 0x45, 0x78, 0xbe, 0x07, 0x1e, 0x34, 0x8c, 0x87, 0x33,
	0x2b, 0xa3, 0xf2, 0xad, 0x15, 0x98, 0xba, 0xd2, 0x64, 0x17, 0xfc, 0xda, 0x13, 0x7f, 0xb9, 0x00,
	0xab, 0x3c, 0x97, 0xf4, 0xb9, 0x21, 0x53, 0x8b, 0x25, 0x4c, 0x7a, 0xa7, 0xc0, 0x89, 0x9c, 0xb9,
	0x9f, 0x46, 0xf8, 0x77, 0x12, 0x7c, 0xb0, 0xb3, 0x1c, 0x08, 0x71, 0x07, 0xe3, 0x26, 0x5b, 0x6f,
	0xc8, 0x04, 0x6e, 0xe4, 0xcd, 0xfd, 0x14, 0xf7, 0xb1, 0x3f, 0x1b, 0xf1, 0x89, 0x81, 0xdb, 0xb2,
	0xd6, 0x5b, 0x69, 0x69, 0xb1, 0x84, 0xa3, 0x2e, 0xa4, 0x09, 0x3c, 0x36, 0x8a, 0x7b, 0xa3, 0xae,
	0x0f, 0x72, 0x1f, 0xb4, 0x45, 0x24, 0x3f, 0x64, 0x8f, 0x84, 0x57, 0xe0, 0xef, 0x98, 0x8a, 0x13,
	0xf0, 0x3e, 0x68, 0xcb, 0x6d, 0x8e, 0x65, 0x3b, 0x8a, 0x53, 0x18, 0xf1, 0xa2, 0xc0, 0xe5, 0x6f,
	0xdd, 0xcb, 0xb5, 0x7b, 0xe9, 0xc4, 0x12, 0x7c, 0x8e, 0x66, 0x54, 0x55, 0x1a, 0x12, 0x37, 0x30,
	0xd1, 0x76, 0xb6, 0xd7, 0x98, 0x1d, 0x0a, 0xb2, 0x83, 0xca, 0x01, 0x4c, 0x9f, 0x61, 0xf4, 0xd8,
	0xaa, 0xc4, 0x3d, 0x78, 0xab, 0x3c, 0x17, 0xf1, 0xff, 0x47, 0x09, 0xa7, 0x07, 0x35, 0x9d, 0xf1,
	0xcb, 0x98, 0xff, 0xe0, 0xc5, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0x6f, 0x8c, 0x11, 0x50,
	0x02, 0x00, 0x00,
}
