// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/api/interaction/interaction.proto

package interactionpb

import (
	rpc "code.sajari.com/protogen-go/sajari/rpc"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ConsumeRequest is used in Consume calls.
type ConsumeRequest struct {
	// Token to consume.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Identifier to distinguish different use of tokens.
	Identifier string `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Weight assigned to the interaction.
	Weight int32 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	// Data to be recorded with the interaction.
	Data                 map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConsumeRequest) Reset()         { *m = ConsumeRequest{} }
func (m *ConsumeRequest) String() string { return proto.CompactTextString(m) }
func (*ConsumeRequest) ProtoMessage()    {}
func (*ConsumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4372fc9c9e21b019, []int{0}
}

func (m *ConsumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumeRequest.Unmarshal(m, b)
}
func (m *ConsumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumeRequest.Marshal(b, m, deterministic)
}
func (m *ConsumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumeRequest.Merge(m, src)
}
func (m *ConsumeRequest) XXX_Size() int {
	return xxx_messageInfo_ConsumeRequest.Size(m)
}
func (m *ConsumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumeRequest proto.InternalMessageInfo

func (m *ConsumeRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ConsumeRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ConsumeRequest) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ConsumeRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ConsumeRequest)(nil), "sajari.api.interaction.ConsumeRequest")
	proto.RegisterMapType((map[string]string)(nil), "sajari.api.interaction.ConsumeRequest.DataEntry")
}

func init() {
	proto.RegisterFile("sajari/api/interaction/interaction.proto", fileDescriptor_4372fc9c9e21b019)
}

var fileDescriptor_4372fc9c9e21b019 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x3d, 0x4f, 0xf3, 0x30,
	0x10, 0xc7, 0x95, 0xbe, 0x3d, 0xea, 0x55, 0x7a, 0x04, 0x16, 0xaa, 0xa2, 0x0e, 0x28, 0x62, 0x40,
	0x59, 0xb0, 0x51, 0x19, 0x40, 0xb0, 0xa0, 0x92, 0x0e, 0xac, 0x61, 0x63, 0x73, 0x93, 0x23, 0x98,
	0x12, 0xdb, 0x38, 0x17, 0x50, 0x3e, 0x2c, 0xdf, 0x05, 0xe5, 0xa5, 0x10, 0xa4, 0x0e, 0x6c, 0xf7,
	0x7f, 0xb1, 0xee, 0xa7, 0x33, 0x84, 0x85, 0x7c, 0x91, 0x4e, 0x09, 0x69, 0x95, 0x50, 0x9a, 0xd0,
	0xc9, 0x84, 0x94, 0xd1, 0xfd, 0x99, 0x5b, 0x67, 0xc8, 0xb0, 0x79, 0xdb, 0xe4, 0xd2, 0x2a, 0xde,
	0x4b, 0x17, 0x9d, 0x2f, 0x9c, 0x4d, 0x04, 0xe6, 0x96, 0xaa, 0xb6, 0x7f, 0xf2, 0xe9, 0xc1, 0xff,
	0x3b, 0xa3, 0x8b, 0x32, 0xc7, 0x18, 0xdf, 0x4a, 0x2c, 0x88, 0x1d, 0xc1, 0x98, 0xcc, 0x16, 0xb5,
	0xef, 0x05, 0x5e, 0x38, 0x8d, 0x5b, 0xc1, 0x8e, 0x01, 0x54, 0x8a, 0x9a, 0xd4, 0x93, 0x42, 0xe7,
	0x0f, 0x9a, 0xa8, 0xe7, 0xb0, 0x39, 0x4c, 0x3e, 0x50, 0x65, 0xcf, 0xe4, 0x0f, 0x03, 0x2f, 0x1c,
	0xc7, 0x9d, 0x62, 0x11, 0x8c, 0x52, 0x49, 0xd2, 0x1f, 0x05, 0xc3, 0x70, 0xb6, 0x3c, 0xe7, 0xfb,
	0xf9, 0xf8, 0x6f, 0x06, 0x1e, 0x49, 0x92, 0x6b, 0x4d, 0xae, 0x8a, 0x9b, 0xd7, 0x8b, 0x4b, 0x98,
	0x7e, 0x5b, 0xec, 0x00, 0x86, 0x5b, 0xac, 0x3a, 0xbc, 0x7a, 0xac, 0x91, 0xdf, 0xe5, 0x6b, 0x89,
	0x1d, 0x57, 0x2b, 0xae, 0x07, 0x57, 0xde, 0xf2, 0x01, 0x66, 0xf7, 0x3f, 0x6b, 0x58, 0x04, 0xff,
	0xba, 0x4d, 0xec, 0xf4, 0x6f, 0x28, 0x8b, 0xc3, 0x5d, 0xcf, 0xd9, 0x84, 0xaf, 0xeb, 0xd3, 0xad,
	0x56, 0x8f, 0xb7, 0x89, 0x49, 0x71, 0x17, 0x24, 0x26, 0x17, 0xcd, 0x35, 0x33, 0xd4, 0x67, 0x99,
	0x11, 0xfb, 0x3f, 0xeb, 0xa6, 0x37, 0xdb, 0xcd, 0x66, 0xd2, 0xbc, 0xb8, 0xf8, 0x0a, 0x00, 0x00,
	0xff, 0xff, 0xc7, 0xc7, 0x70, 0xa0, 0xdb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InteractionClient is the client API for Interaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InteractionClient interface {
	// Consume accepts and records interactions.
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*rpc.Empty, error)
}

type interactionClient struct {
	cc *grpc.ClientConn
}

func NewInteractionClient(cc *grpc.ClientConn) InteractionClient {
	return &interactionClient{cc}
}

func (c *interactionClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*rpc.Empty, error) {
	out := new(rpc.Empty)
	err := c.cc.Invoke(ctx, "/sajari.api.interaction.Interaction/Consume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InteractionServer is the server API for Interaction service.
type InteractionServer interface {
	// Consume accepts and records interactions.
	Consume(context.Context, *ConsumeRequest) (*rpc.Empty, error)
}

// UnimplementedInteractionServer can be embedded to have forward compatible implementations.
type UnimplementedInteractionServer struct {
}

func (*UnimplementedInteractionServer) Consume(ctx context.Context, req *ConsumeRequest) (*rpc.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Consume not implemented")
}

func RegisterInteractionServer(s *grpc.Server, srv InteractionServer) {
	s.RegisterService(&_Interaction_serviceDesc, srv)
}

func _Interaction_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteractionServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.interaction.Interaction/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteractionServer).Consume(ctx, req.(*ConsumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Interaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.api.interaction.Interaction",
	HandlerType: (*InteractionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Consume",
			Handler:    _Interaction_Consume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/api/interaction/interaction.proto",
}
