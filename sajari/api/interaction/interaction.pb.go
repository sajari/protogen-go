// Code generated by protoc-gen-go.
// source: sajari/api/interaction/interaction.proto
// DO NOT EDIT!

/*
Package sajari_api_interaction is a generated protocol buffer package.

It is generated from these files:
	sajari/api/interaction/interaction.proto

It has these top-level messages:
	ConsumeRequest
*/
package sajari_api_interaction

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sajari_rpc "code.sajari.com/protogen-go/sajari/rpc"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ConsumeRequest is used in Consume calls.
type ConsumeRequest struct {
	// Token to consume.
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	// Identifier to distinguish different use of tokens.
	Identifier string `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	// Weight assigned to the interaction.
	Weight int32 `protobuf:"varint,3,opt,name=weight" json:"weight,omitempty"`
	// Data to be recorded with the interaction.
	Data map[string]string `protobuf:"bytes,4,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConsumeRequest) Reset()                    { *m = ConsumeRequest{} }
func (m *ConsumeRequest) String() string            { return proto.CompactTextString(m) }
func (*ConsumeRequest) ProtoMessage()               {}
func (*ConsumeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConsumeRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ConsumeRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *ConsumeRequest) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ConsumeRequest) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*ConsumeRequest)(nil), "sajari.api.interaction.ConsumeRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Interaction service

type InteractionClient interface {
	// Consume accepts and records interactions.
	Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*sajari_rpc.Empty, error)
}

type interactionClient struct {
	cc *grpc.ClientConn
}

func NewInteractionClient(cc *grpc.ClientConn) InteractionClient {
	return &interactionClient{cc}
}

func (c *interactionClient) Consume(ctx context.Context, in *ConsumeRequest, opts ...grpc.CallOption) (*sajari_rpc.Empty, error) {
	out := new(sajari_rpc.Empty)
	err := grpc.Invoke(ctx, "/sajari.api.interaction.Interaction/Consume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Interaction service

type InteractionServer interface {
	// Consume accepts and records interactions.
	Consume(context.Context, *ConsumeRequest) (*sajari_rpc.Empty, error)
}

func RegisterInteractionServer(s *grpc.Server, srv InteractionServer) {
	s.RegisterService(&_Interaction_serviceDesc, srv)
}

func _Interaction_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteractionServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.api.interaction.Interaction/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteractionServer).Consume(ctx, req.(*ConsumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Interaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.api.interaction.Interaction",
	HandlerType: (*InteractionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Consume",
			Handler:    _Interaction_Consume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/api/interaction/interaction.proto",
}

func init() { proto.RegisterFile("sajari/api/interaction/interaction.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 255 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0xd9, 0xa6, 0xed, 0x9f, 0x4e, 0xe1, 0x8f, 0x2e, 0x52, 0x42, 0x0e, 0x12, 0x3c, 0x48,
	0x4e, 0x1b, 0xa9, 0x07, 0xc5, 0xab, 0xe9, 0xc1, 0x6b, 0xfc, 0x04, 0x63, 0x3a, 0xea, 0x5a, 0xbb,
	0xbb, 0x6e, 0x26, 0x4a, 0x3e, 0xac, 0xdf, 0x45, 0x92, 0xac, 0x1a, 0xc1, 0x83, 0xb7, 0x79, 0x6f,
	0xde, 0x30, 0x3f, 0x1e, 0x64, 0x35, 0x3e, 0xa1, 0xd7, 0x39, 0x3a, 0x9d, 0x6b, 0xc3, 0xe4, 0xb1,
	0x62, 0x6d, 0xcd, 0x78, 0x56, 0xce, 0x5b, 0xb6, 0x72, 0x35, 0x24, 0x15, 0x3a, 0xad, 0x46, 0xdb,
	0x24, 0xf8, 0xb9, 0x77, 0x55, 0x4e, 0x7b, 0xc7, 0xed, 0x90, 0x3f, 0x79, 0x17, 0xf0, 0xff, 0xda,
	0x9a, 0xba, 0xd9, 0x53, 0x49, 0x2f, 0x0d, 0xd5, 0x2c, 0x8f, 0x60, 0xc6, 0x76, 0x47, 0x26, 0x16,
	0xa9, 0xc8, 0x16, 0xe5, 0x20, 0xe4, 0x31, 0x80, 0xde, 0x92, 0x61, 0x7d, 0xaf, 0xc9, 0xc7, 0x93,
	0x7e, 0x35, 0x72, 0xe4, 0x0a, 0xe6, 0x6f, 0xa4, 0x1f, 0x1e, 0x39, 0x8e, 0x52, 0x91, 0xcd, 0xca,
	0xa0, 0x64, 0x01, 0xd3, 0x2d, 0x32, 0xc6, 0xd3, 0x34, 0xca, 0x96, 0xeb, 0x33, 0xf5, 0x3b, 0x9f,
	0xfa, 0xc9, 0xa0, 0x0a, 0x64, 0xdc, 0x18, 0xf6, 0x6d, 0xd9, 0x5f, 0x27, 0x17, 0xb0, 0xf8, 0xb2,
	0xe4, 0x01, 0x44, 0x3b, 0x6a, 0x03, 0x5e, 0x37, 0x76, 0xc8, 0xaf, 0xf8, 0xdc, 0x50, 0xe0, 0x1a,
	0xc4, 0xd5, 0xe4, 0x52, 0xac, 0x6f, 0x61, 0x79, 0xf3, 0xfd, 0x46, 0x16, 0xf0, 0x2f, 0x7c, 0x92,
	0xa7, 0x7f, 0x43, 0x49, 0x0e, 0x3f, 0x73, 0xde, 0x55, 0x6a, 0xd3, 0x55, 0x77, 0x37, 0xef, 0xbb,
	0x3b, 0xff, 0x08, 0x00, 0x00, 0xff, 0xff, 0xf4, 0x06, 0x23, 0x2b, 0x97, 0x01, 0x00, 0x00,
}
