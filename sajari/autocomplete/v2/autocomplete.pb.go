// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/autocomplete/v2/autocomplete.proto

package autocompletepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Model is an autocomplete model.
type Model struct {
	// Name of the model.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Model) Reset()         { *m = Model{} }
func (m *Model) String() string { return proto.CompactTextString(m) }
func (*Model) ProtoMessage()    {}
func (*Model) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{0}
}

func (m *Model) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Model.Unmarshal(m, b)
}
func (m *Model) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Model.Marshal(b, m, deterministic)
}
func (m *Model) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Model.Merge(m, src)
}
func (m *Model) XXX_Size() int {
	return xxx_messageInfo_Model.Size(m)
}
func (m *Model) XXX_DiscardUnknown() {
	xxx_messageInfo_Model.DiscardUnknown(m)
}

var xxx_messageInfo_Model proto.InternalMessageInfo

func (m *Model) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Frequency for a word, n-gram or query.
type Frequency struct {
	// The source
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// Number of times counted for a label.
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Frequency) Reset()         { *m = Frequency{} }
func (m *Frequency) String() string { return proto.CompactTextString(m) }
func (*Frequency) ProtoMessage()    {}
func (*Frequency) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{1}
}

func (m *Frequency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Frequency.Unmarshal(m, b)
}
func (m *Frequency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Frequency.Marshal(b, m, deterministic)
}
func (m *Frequency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Frequency.Merge(m, src)
}
func (m *Frequency) XXX_Size() int {
	return xxx_messageInfo_Frequency.Size(m)
}
func (m *Frequency) XXX_DiscardUnknown() {
	xxx_messageInfo_Frequency.DiscardUnknown(m)
}

var xxx_messageInfo_Frequency proto.InternalMessageInfo

func (m *Frequency) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Frequency) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// CreateModelRequest contains details of the model to create.
type CreateModelRequest struct {
	// Model to create.
	Model                *Model   `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateModelRequest) Reset()         { *m = CreateModelRequest{} }
func (m *CreateModelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateModelRequest) ProtoMessage()    {}
func (*CreateModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{2}
}

func (m *CreateModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateModelRequest.Unmarshal(m, b)
}
func (m *CreateModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateModelRequest.Marshal(b, m, deterministic)
}
func (m *CreateModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateModelRequest.Merge(m, src)
}
func (m *CreateModelRequest) XXX_Size() int {
	return xxx_messageInfo_CreateModelRequest.Size(m)
}
func (m *CreateModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateModelRequest proto.InternalMessageInfo

func (m *CreateModelRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

// CreateModelResponse contains model that was created.
type CreateModelResponse struct {
	// Model that was created.
	Model                *Model   `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateModelResponse) Reset()         { *m = CreateModelResponse{} }
func (m *CreateModelResponse) String() string { return proto.CompactTextString(m) }
func (*CreateModelResponse) ProtoMessage()    {}
func (*CreateModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{3}
}

func (m *CreateModelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateModelResponse.Unmarshal(m, b)
}
func (m *CreateModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateModelResponse.Marshal(b, m, deterministic)
}
func (m *CreateModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateModelResponse.Merge(m, src)
}
func (m *CreateModelResponse) XXX_Size() int {
	return xxx_messageInfo_CreateModelResponse.Size(m)
}
func (m *CreateModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateModelResponse proto.InternalMessageInfo

func (m *CreateModelResponse) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

type DeleteModelRequest struct {
	// Model to delete.
	Model                *Model   `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteModelRequest) Reset()         { *m = DeleteModelRequest{} }
func (m *DeleteModelRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteModelRequest) ProtoMessage()    {}
func (*DeleteModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{4}
}

func (m *DeleteModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteModelRequest.Unmarshal(m, b)
}
func (m *DeleteModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteModelRequest.Marshal(b, m, deterministic)
}
func (m *DeleteModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteModelRequest.Merge(m, src)
}
func (m *DeleteModelRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteModelRequest.Size(m)
}
func (m *DeleteModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteModelRequest proto.InternalMessageInfo

func (m *DeleteModelRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

// AddCorpusRequest contains words to add to the model to assist with
// detecting detecting spelling mistakes.
type AddCorpusRequest struct {
	// Model to train.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Source of the terms.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// The words to train the corpus with. These should be correctly
	// spelt to avoid autocorrecting to misspellings.
	Words []string `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	// The training options.
	Options              []*AddCorpusRequest_AddCorpusOption `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *AddCorpusRequest) Reset()         { *m = AddCorpusRequest{} }
func (m *AddCorpusRequest) String() string { return proto.CompactTextString(m) }
func (*AddCorpusRequest) ProtoMessage()    {}
func (*AddCorpusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{5}
}

func (m *AddCorpusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCorpusRequest.Unmarshal(m, b)
}
func (m *AddCorpusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCorpusRequest.Marshal(b, m, deterministic)
}
func (m *AddCorpusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCorpusRequest.Merge(m, src)
}
func (m *AddCorpusRequest) XXX_Size() int {
	return xxx_messageInfo_AddCorpusRequest.Size(m)
}
func (m *AddCorpusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCorpusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCorpusRequest proto.InternalMessageInfo

func (m *AddCorpusRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *AddCorpusRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *AddCorpusRequest) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *AddCorpusRequest) GetOptions() []*AddCorpusRequest_AddCorpusOption {
	if m != nil {
		return m.Options
	}
	return nil
}

// The options used for add corpus.
type AddCorpusRequest_AddCorpusOption struct {
	// Types that are valid to be assigned to Opt:
	//	*AddCorpusRequest_AddCorpusOption_OnlyUnigrams
	Opt                  isAddCorpusRequest_AddCorpusOption_Opt `protobuf_oneof:"opt"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *AddCorpusRequest_AddCorpusOption) Reset()         { *m = AddCorpusRequest_AddCorpusOption{} }
func (m *AddCorpusRequest_AddCorpusOption) String() string { return proto.CompactTextString(m) }
func (*AddCorpusRequest_AddCorpusOption) ProtoMessage()    {}
func (*AddCorpusRequest_AddCorpusOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{5, 0}
}

func (m *AddCorpusRequest_AddCorpusOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCorpusRequest_AddCorpusOption.Unmarshal(m, b)
}
func (m *AddCorpusRequest_AddCorpusOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCorpusRequest_AddCorpusOption.Marshal(b, m, deterministic)
}
func (m *AddCorpusRequest_AddCorpusOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCorpusRequest_AddCorpusOption.Merge(m, src)
}
func (m *AddCorpusRequest_AddCorpusOption) XXX_Size() int {
	return xxx_messageInfo_AddCorpusRequest_AddCorpusOption.Size(m)
}
func (m *AddCorpusRequest_AddCorpusOption) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCorpusRequest_AddCorpusOption.DiscardUnknown(m)
}

var xxx_messageInfo_AddCorpusRequest_AddCorpusOption proto.InternalMessageInfo

type isAddCorpusRequest_AddCorpusOption_Opt interface {
	isAddCorpusRequest_AddCorpusOption_Opt()
}

type AddCorpusRequest_AddCorpusOption_OnlyUnigrams struct {
	OnlyUnigrams bool `protobuf:"varint,1,opt,name=only_unigrams,json=onlyUnigrams,proto3,oneof"`
}

func (*AddCorpusRequest_AddCorpusOption_OnlyUnigrams) isAddCorpusRequest_AddCorpusOption_Opt() {}

func (m *AddCorpusRequest_AddCorpusOption) GetOpt() isAddCorpusRequest_AddCorpusOption_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *AddCorpusRequest_AddCorpusOption) GetOnlyUnigrams() bool {
	if x, ok := m.GetOpt().(*AddCorpusRequest_AddCorpusOption_OnlyUnigrams); ok {
		return x.OnlyUnigrams
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddCorpusRequest_AddCorpusOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddCorpusRequest_AddCorpusOption_OnlyUnigrams)(nil),
	}
}

// SetCorpusRequest contains words to set in the model.
type SetCorpusRequest struct {
	// Model to train.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Source of the terms.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// The words to train the corpus with.
	Words []string `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	// If true, the words will be as is and not expanded into unigrams,bigrams and trigrams.
	Flat                 bool     `protobuf:"varint,4,opt,name=flat,proto3" json:"flat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetCorpusRequest) Reset()         { *m = SetCorpusRequest{} }
func (m *SetCorpusRequest) String() string { return proto.CompactTextString(m) }
func (*SetCorpusRequest) ProtoMessage()    {}
func (*SetCorpusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{6}
}

func (m *SetCorpusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetCorpusRequest.Unmarshal(m, b)
}
func (m *SetCorpusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetCorpusRequest.Marshal(b, m, deterministic)
}
func (m *SetCorpusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetCorpusRequest.Merge(m, src)
}
func (m *SetCorpusRequest) XXX_Size() int {
	return xxx_messageInfo_SetCorpusRequest.Size(m)
}
func (m *SetCorpusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetCorpusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetCorpusRequest proto.InternalMessageInfo

func (m *SetCorpusRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *SetCorpusRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SetCorpusRequest) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *SetCorpusRequest) GetFlat() bool {
	if m != nil {
		return m.Flat
	}
	return false
}

// AddQueryRequest to assist with query popularity prediction.
type AddQueryFrequencyRequest struct {
	// Model to add query to.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// the source of the query.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// The query is broken into terms. Typically this would use spaces
	// as delimiters, but it is not restricted to spaces for language flexibility.
	Query []string `protobuf:"bytes,3,rep,name=query,proto3" json:"query,omitempty"`
	// Number of times to add to the query count for the given label.
	Count int64 `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	// The training options.
	Options              []*AddQueryFrequencyRequest_AddQueryOption `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *AddQueryFrequencyRequest) Reset()         { *m = AddQueryFrequencyRequest{} }
func (m *AddQueryFrequencyRequest) String() string { return proto.CompactTextString(m) }
func (*AddQueryFrequencyRequest) ProtoMessage()    {}
func (*AddQueryFrequencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{7}
}

func (m *AddQueryFrequencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddQueryFrequencyRequest.Unmarshal(m, b)
}
func (m *AddQueryFrequencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddQueryFrequencyRequest.Marshal(b, m, deterministic)
}
func (m *AddQueryFrequencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddQueryFrequencyRequest.Merge(m, src)
}
func (m *AddQueryFrequencyRequest) XXX_Size() int {
	return xxx_messageInfo_AddQueryFrequencyRequest.Size(m)
}
func (m *AddQueryFrequencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddQueryFrequencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddQueryFrequencyRequest proto.InternalMessageInfo

func (m *AddQueryFrequencyRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *AddQueryFrequencyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *AddQueryFrequencyRequest) GetQuery() []string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *AddQueryFrequencyRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *AddQueryFrequencyRequest) GetOptions() []*AddQueryFrequencyRequest_AddQueryOption {
	if m != nil {
		return m.Options
	}
	return nil
}

// The options used for adding queries.
type AddQueryFrequencyRequest_AddQueryOption struct {
	// Types that are valid to be assigned to Opt:
	//	*AddQueryFrequencyRequest_AddQueryOption_WordsMustExist
	Opt                  isAddQueryFrequencyRequest_AddQueryOption_Opt `protobuf_oneof:"opt"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *AddQueryFrequencyRequest_AddQueryOption) Reset() {
	*m = AddQueryFrequencyRequest_AddQueryOption{}
}
func (m *AddQueryFrequencyRequest_AddQueryOption) String() string { return proto.CompactTextString(m) }
func (*AddQueryFrequencyRequest_AddQueryOption) ProtoMessage()    {}
func (*AddQueryFrequencyRequest_AddQueryOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{7, 0}
}

func (m *AddQueryFrequencyRequest_AddQueryOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption.Unmarshal(m, b)
}
func (m *AddQueryFrequencyRequest_AddQueryOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption.Marshal(b, m, deterministic)
}
func (m *AddQueryFrequencyRequest_AddQueryOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption.Merge(m, src)
}
func (m *AddQueryFrequencyRequest_AddQueryOption) XXX_Size() int {
	return xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption.Size(m)
}
func (m *AddQueryFrequencyRequest_AddQueryOption) XXX_DiscardUnknown() {
	xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption.DiscardUnknown(m)
}

var xxx_messageInfo_AddQueryFrequencyRequest_AddQueryOption proto.InternalMessageInfo

type isAddQueryFrequencyRequest_AddQueryOption_Opt interface {
	isAddQueryFrequencyRequest_AddQueryOption_Opt()
}

type AddQueryFrequencyRequest_AddQueryOption_WordsMustExist struct {
	WordsMustExist bool `protobuf:"varint,1,opt,name=words_must_exist,json=wordsMustExist,proto3,oneof"`
}

func (*AddQueryFrequencyRequest_AddQueryOption_WordsMustExist) isAddQueryFrequencyRequest_AddQueryOption_Opt() {
}

func (m *AddQueryFrequencyRequest_AddQueryOption) GetOpt() isAddQueryFrequencyRequest_AddQueryOption_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *AddQueryFrequencyRequest_AddQueryOption) GetWordsMustExist() bool {
	if x, ok := m.GetOpt().(*AddQueryFrequencyRequest_AddQueryOption_WordsMustExist); ok {
		return x.WordsMustExist
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AddQueryFrequencyRequest_AddQueryOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AddQueryFrequencyRequest_AddQueryOption_WordsMustExist)(nil),
	}
}

// SetQueryFrequencyResponse sets the frequency for a query.
type SetQueryFrequencyRequest struct {
	// Model to use.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Source of the query.
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Query to set.
	Query []string `protobuf:"bytes,3,rep,name=query,proto3" json:"query,omitempty"`
	// Number of times the query is counted for a given label.
	Count                int64    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetQueryFrequencyRequest) Reset()         { *m = SetQueryFrequencyRequest{} }
func (m *SetQueryFrequencyRequest) String() string { return proto.CompactTextString(m) }
func (*SetQueryFrequencyRequest) ProtoMessage()    {}
func (*SetQueryFrequencyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{8}
}

func (m *SetQueryFrequencyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetQueryFrequencyRequest.Unmarshal(m, b)
}
func (m *SetQueryFrequencyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetQueryFrequencyRequest.Marshal(b, m, deterministic)
}
func (m *SetQueryFrequencyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetQueryFrequencyRequest.Merge(m, src)
}
func (m *SetQueryFrequencyRequest) XXX_Size() int {
	return xxx_messageInfo_SetQueryFrequencyRequest.Size(m)
}
func (m *SetQueryFrequencyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetQueryFrequencyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetQueryFrequencyRequest proto.InternalMessageInfo

func (m *SetQueryFrequencyRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *SetQueryFrequencyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *SetQueryFrequencyRequest) GetQuery() []string {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *SetQueryFrequencyRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

// AutoCompleteRequest is a query to be autocompleted.
type AutoCompleteRequest struct {
	// Model to train.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// Words representing the input to complete.
	Words []string `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	// The configuration options for spelling suggestions.
	Options              []*AutoCompleteRequest_AutoCompleteOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *AutoCompleteRequest) Reset()         { *m = AutoCompleteRequest{} }
func (m *AutoCompleteRequest) String() string { return proto.CompactTextString(m) }
func (*AutoCompleteRequest) ProtoMessage()    {}
func (*AutoCompleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{9}
}

func (m *AutoCompleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoCompleteRequest.Unmarshal(m, b)
}
func (m *AutoCompleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoCompleteRequest.Marshal(b, m, deterministic)
}
func (m *AutoCompleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoCompleteRequest.Merge(m, src)
}
func (m *AutoCompleteRequest) XXX_Size() int {
	return xxx_messageInfo_AutoCompleteRequest.Size(m)
}
func (m *AutoCompleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoCompleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AutoCompleteRequest proto.InternalMessageInfo

func (m *AutoCompleteRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *AutoCompleteRequest) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *AutoCompleteRequest) GetOptions() []*AutoCompleteRequest_AutoCompleteOption {
	if m != nil {
		return m.Options
	}
	return nil
}

// The options used for autocomplete
type AutoCompleteRequest_AutoCompleteOption struct {
	// Types that are valid to be assigned to Opt:
	//	*AutoCompleteRequest_AutoCompleteOption_SkipOption
	//	*AutoCompleteRequest_AutoCompleteOption_Scorer
	Opt                  isAutoCompleteRequest_AutoCompleteOption_Opt `protobuf_oneof:"opt"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *AutoCompleteRequest_AutoCompleteOption) Reset() {
	*m = AutoCompleteRequest_AutoCompleteOption{}
}
func (m *AutoCompleteRequest_AutoCompleteOption) String() string { return proto.CompactTextString(m) }
func (*AutoCompleteRequest_AutoCompleteOption) ProtoMessage()    {}
func (*AutoCompleteRequest_AutoCompleteOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{9, 0}
}

func (m *AutoCompleteRequest_AutoCompleteOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption.Unmarshal(m, b)
}
func (m *AutoCompleteRequest_AutoCompleteOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption.Marshal(b, m, deterministic)
}
func (m *AutoCompleteRequest_AutoCompleteOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption.Merge(m, src)
}
func (m *AutoCompleteRequest_AutoCompleteOption) XXX_Size() int {
	return xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption.Size(m)
}
func (m *AutoCompleteRequest_AutoCompleteOption) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption.DiscardUnknown(m)
}

var xxx_messageInfo_AutoCompleteRequest_AutoCompleteOption proto.InternalMessageInfo

type isAutoCompleteRequest_AutoCompleteOption_Opt interface {
	isAutoCompleteRequest_AutoCompleteOption_Opt()
}

type AutoCompleteRequest_AutoCompleteOption_SkipOption struct {
	SkipOption *SkipOption `protobuf:"bytes,1,opt,name=skip_option,json=skipOption,proto3,oneof"`
}

type AutoCompleteRequest_AutoCompleteOption_Scorer struct {
	Scorer *LabelScorer `protobuf:"bytes,2,opt,name=scorer,proto3,oneof"`
}

func (*AutoCompleteRequest_AutoCompleteOption_SkipOption) isAutoCompleteRequest_AutoCompleteOption_Opt() {
}

func (*AutoCompleteRequest_AutoCompleteOption_Scorer) isAutoCompleteRequest_AutoCompleteOption_Opt() {
}

func (m *AutoCompleteRequest_AutoCompleteOption) GetOpt() isAutoCompleteRequest_AutoCompleteOption_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *AutoCompleteRequest_AutoCompleteOption) GetSkipOption() *SkipOption {
	if x, ok := m.GetOpt().(*AutoCompleteRequest_AutoCompleteOption_SkipOption); ok {
		return x.SkipOption
	}
	return nil
}

func (m *AutoCompleteRequest_AutoCompleteOption) GetScorer() *LabelScorer {
	if x, ok := m.GetOpt().(*AutoCompleteRequest_AutoCompleteOption_Scorer); ok {
		return x.Scorer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AutoCompleteRequest_AutoCompleteOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AutoCompleteRequest_AutoCompleteOption_SkipOption)(nil),
		(*AutoCompleteRequest_AutoCompleteOption_Scorer)(nil),
	}
}

// AutoCompleteResponse is an ordered list of autocompleted phrases in response
// to an AutoCompleteRequest.
type AutoCompleteResponse struct {
	// Potential autocompletes in order of most likely to least likely.
	Suggestions          []*AutoCompleteResponse_Suggestion `protobuf:"bytes,1,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *AutoCompleteResponse) Reset()         { *m = AutoCompleteResponse{} }
func (m *AutoCompleteResponse) String() string { return proto.CompactTextString(m) }
func (*AutoCompleteResponse) ProtoMessage()    {}
func (*AutoCompleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{10}
}

func (m *AutoCompleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoCompleteResponse.Unmarshal(m, b)
}
func (m *AutoCompleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoCompleteResponse.Marshal(b, m, deterministic)
}
func (m *AutoCompleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoCompleteResponse.Merge(m, src)
}
func (m *AutoCompleteResponse) XXX_Size() int {
	return xxx_messageInfo_AutoCompleteResponse.Size(m)
}
func (m *AutoCompleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoCompleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AutoCompleteResponse proto.InternalMessageInfo

func (m *AutoCompleteResponse) GetSuggestions() []*AutoCompleteResponse_Suggestion {
	if m != nil {
		return m.Suggestions
	}
	return nil
}

type AutoCompleteResponse_Suggestion struct {
	// Words representing the suggestion.
	Words []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	// Weight of the suggestion.
	Weight               float64  `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutoCompleteResponse_Suggestion) Reset()         { *m = AutoCompleteResponse_Suggestion{} }
func (m *AutoCompleteResponse_Suggestion) String() string { return proto.CompactTextString(m) }
func (*AutoCompleteResponse_Suggestion) ProtoMessage()    {}
func (*AutoCompleteResponse_Suggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{10, 0}
}

func (m *AutoCompleteResponse_Suggestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutoCompleteResponse_Suggestion.Unmarshal(m, b)
}
func (m *AutoCompleteResponse_Suggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutoCompleteResponse_Suggestion.Marshal(b, m, deterministic)
}
func (m *AutoCompleteResponse_Suggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutoCompleteResponse_Suggestion.Merge(m, src)
}
func (m *AutoCompleteResponse_Suggestion) XXX_Size() int {
	return xxx_messageInfo_AutoCompleteResponse_Suggestion.Size(m)
}
func (m *AutoCompleteResponse_Suggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_AutoCompleteResponse_Suggestion.DiscardUnknown(m)
}

var xxx_messageInfo_AutoCompleteResponse_Suggestion proto.InternalMessageInfo

func (m *AutoCompleteResponse_Suggestion) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *AutoCompleteResponse_Suggestion) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

type SuggestSpellingsRequest struct {
	// Model to use.
	Model *Model `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	// List of words to correct (in context).
	Words []string `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	// The configuration options for spelling suggestions.
	Options              []*SuggestSpellingsRequest_SuggestOption `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *SuggestSpellingsRequest) Reset()         { *m = SuggestSpellingsRequest{} }
func (m *SuggestSpellingsRequest) String() string { return proto.CompactTextString(m) }
func (*SuggestSpellingsRequest) ProtoMessage()    {}
func (*SuggestSpellingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11}
}

func (m *SuggestSpellingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest.Merge(m, src)
}
func (m *SuggestSpellingsRequest) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest.Size(m)
}
func (m *SuggestSpellingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest proto.InternalMessageInfo

func (m *SuggestSpellingsRequest) GetModel() *Model {
	if m != nil {
		return m.Model
	}
	return nil
}

func (m *SuggestSpellingsRequest) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *SuggestSpellingsRequest) GetOptions() []*SuggestSpellingsRequest_SuggestOption {
	if m != nil {
		return m.Options
	}
	return nil
}

// The options used for spelling suggestions.
type SuggestSpellingsRequest_SuggestOption struct {
	// Types that are valid to be assigned to Opt:
	//	*SuggestSpellingsRequest_SuggestOption_WordLimit
	//	*SuggestSpellingsRequest_SuggestOption_ScoreOption
	//	*SuggestSpellingsRequest_SuggestOption_SkipOption
	//	*SuggestSpellingsRequest_SuggestOption_WordScorer
	//	*SuggestSpellingsRequest_SuggestOption_PhraseScorer
	Opt                  isSuggestSpellingsRequest_SuggestOption_Opt `protobuf_oneof:"opt"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *SuggestSpellingsRequest_SuggestOption) Reset()         { *m = SuggestSpellingsRequest_SuggestOption{} }
func (m *SuggestSpellingsRequest_SuggestOption) String() string { return proto.CompactTextString(m) }
func (*SuggestSpellingsRequest_SuggestOption) ProtoMessage()    {}
func (*SuggestSpellingsRequest_SuggestOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 0}
}

func (m *SuggestSpellingsRequest_SuggestOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_SuggestOption.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_SuggestOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_SuggestOption.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_SuggestOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_SuggestOption.Merge(m, src)
}
func (m *SuggestSpellingsRequest_SuggestOption) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_SuggestOption.Size(m)
}
func (m *SuggestSpellingsRequest_SuggestOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_SuggestOption.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_SuggestOption proto.InternalMessageInfo

type isSuggestSpellingsRequest_SuggestOption_Opt interface {
	isSuggestSpellingsRequest_SuggestOption_Opt()
}

type SuggestSpellingsRequest_SuggestOption_WordLimit struct {
	WordLimit int32 `protobuf:"varint,1,opt,name=word_limit,json=wordLimit,proto3,oneof"`
}

type SuggestSpellingsRequest_SuggestOption_ScoreOption struct {
	ScoreOption *SuggestSpellingsRequest_ScoreOption `protobuf:"bytes,2,opt,name=score_option,json=scoreOption,proto3,oneof"`
}

type SuggestSpellingsRequest_SuggestOption_SkipOption struct {
	SkipOption *SkipOption `protobuf:"bytes,3,opt,name=skip_option,json=skipOption,proto3,oneof"`
}

type SuggestSpellingsRequest_SuggestOption_WordScorer struct {
	WordScorer *LabelScorer `protobuf:"bytes,4,opt,name=word_scorer,json=wordScorer,proto3,oneof"`
}

type SuggestSpellingsRequest_SuggestOption_PhraseScorer struct {
	PhraseScorer *LabelScorer `protobuf:"bytes,5,opt,name=phrase_scorer,json=phraseScorer,proto3,oneof"`
}

func (*SuggestSpellingsRequest_SuggestOption_WordLimit) isSuggestSpellingsRequest_SuggestOption_Opt() {
}

func (*SuggestSpellingsRequest_SuggestOption_ScoreOption) isSuggestSpellingsRequest_SuggestOption_Opt() {
}

func (*SuggestSpellingsRequest_SuggestOption_SkipOption) isSuggestSpellingsRequest_SuggestOption_Opt() {
}

func (*SuggestSpellingsRequest_SuggestOption_WordScorer) isSuggestSpellingsRequest_SuggestOption_Opt() {
}

func (*SuggestSpellingsRequest_SuggestOption_PhraseScorer) isSuggestSpellingsRequest_SuggestOption_Opt() {
}

func (m *SuggestSpellingsRequest_SuggestOption) GetOpt() isSuggestSpellingsRequest_SuggestOption_Opt {
	if m != nil {
		return m.Opt
	}
	return nil
}

func (m *SuggestSpellingsRequest_SuggestOption) GetWordLimit() int32 {
	if x, ok := m.GetOpt().(*SuggestSpellingsRequest_SuggestOption_WordLimit); ok {
		return x.WordLimit
	}
	return 0
}

func (m *SuggestSpellingsRequest_SuggestOption) GetScoreOption() *SuggestSpellingsRequest_ScoreOption {
	if x, ok := m.GetOpt().(*SuggestSpellingsRequest_SuggestOption_ScoreOption); ok {
		return x.ScoreOption
	}
	return nil
}

func (m *SuggestSpellingsRequest_SuggestOption) GetSkipOption() *SkipOption {
	if x, ok := m.GetOpt().(*SuggestSpellingsRequest_SuggestOption_SkipOption); ok {
		return x.SkipOption
	}
	return nil
}

func (m *SuggestSpellingsRequest_SuggestOption) GetWordScorer() *LabelScorer {
	if x, ok := m.GetOpt().(*SuggestSpellingsRequest_SuggestOption_WordScorer); ok {
		return x.WordScorer
	}
	return nil
}

func (m *SuggestSpellingsRequest_SuggestOption) GetPhraseScorer() *LabelScorer {
	if x, ok := m.GetOpt().(*SuggestSpellingsRequest_SuggestOption_PhraseScorer); ok {
		return x.PhraseScorer
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SuggestSpellingsRequest_SuggestOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SuggestSpellingsRequest_SuggestOption_WordLimit)(nil),
		(*SuggestSpellingsRequest_SuggestOption_ScoreOption)(nil),
		(*SuggestSpellingsRequest_SuggestOption_SkipOption)(nil),
		(*SuggestSpellingsRequest_SuggestOption_WordScorer)(nil),
		(*SuggestSpellingsRequest_SuggestOption_PhraseScorer)(nil),
	}
}

// Score options which boost the score of a suggestion.
type SuggestSpellingsRequest_ScoreOption struct {
	// Types that are valid to be assigned to ScoreOption:
	//	*SuggestSpellingsRequest_ScoreOption_AdjacentSwap_
	//	*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat_
	//	*SuggestSpellingsRequest_ScoreOption_FullPrefix_
	//	*SuggestSpellingsRequest_ScoreOption_FullSuffix_
	//	*SuggestSpellingsRequest_ScoreOption_Levenshtein_
	//	*SuggestSpellingsRequest_ScoreOption_LimitDistance_
	//	*SuggestSpellingsRequest_ScoreOption_Prefix_
	//	*SuggestSpellingsRequest_ScoreOption_VowelSwap_
	//	*SuggestSpellingsRequest_ScoreOption_Clear_
	ScoreOption          isSuggestSpellingsRequest_ScoreOption_ScoreOption `protobuf_oneof:"score_option"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption) Reset()         { *m = SuggestSpellingsRequest_ScoreOption{} }
func (m *SuggestSpellingsRequest_ScoreOption) String() string { return proto.CompactTextString(m) }
func (*SuggestSpellingsRequest_ScoreOption) ProtoMessage()    {}
func (*SuggestSpellingsRequest_ScoreOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1}
}

func (m *SuggestSpellingsRequest_ScoreOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption proto.InternalMessageInfo

type isSuggestSpellingsRequest_ScoreOption_ScoreOption interface {
	isSuggestSpellingsRequest_ScoreOption_ScoreOption()
}

type SuggestSpellingsRequest_ScoreOption_AdjacentSwap_ struct {
	AdjacentSwap *SuggestSpellingsRequest_ScoreOption_AdjacentSwap `protobuf:"bytes,1,opt,name=adjacent_swap,json=adjacentSwap,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat_ struct {
	ConsecutiveRepeat *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat `protobuf:"bytes,2,opt,name=consecutive_repeat,json=consecutiveRepeat,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_FullPrefix_ struct {
	FullPrefix *SuggestSpellingsRequest_ScoreOption_FullPrefix `protobuf:"bytes,3,opt,name=full_prefix,json=fullPrefix,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_FullSuffix_ struct {
	FullSuffix *SuggestSpellingsRequest_ScoreOption_FullSuffix `protobuf:"bytes,4,opt,name=full_suffix,json=fullSuffix,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_Levenshtein_ struct {
	Levenshtein *SuggestSpellingsRequest_ScoreOption_Levenshtein `protobuf:"bytes,5,opt,name=levenshtein,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_LimitDistance_ struct {
	LimitDistance *SuggestSpellingsRequest_ScoreOption_LimitDistance `protobuf:"bytes,6,opt,name=limit_distance,json=limitDistance,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_Prefix_ struct {
	Prefix *SuggestSpellingsRequest_ScoreOption_Prefix `protobuf:"bytes,7,opt,name=prefix,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_VowelSwap_ struct {
	VowelSwap *SuggestSpellingsRequest_ScoreOption_VowelSwap `protobuf:"bytes,8,opt,name=vowel_swap,json=vowelSwap,proto3,oneof"`
}

type SuggestSpellingsRequest_ScoreOption_Clear_ struct {
	Clear *SuggestSpellingsRequest_ScoreOption_Clear `protobuf:"bytes,9,opt,name=clear,proto3,oneof"`
}

func (*SuggestSpellingsRequest_ScoreOption_AdjacentSwap_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_FullPrefix_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_FullSuffix_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_Levenshtein_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_LimitDistance_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_Prefix_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_VowelSwap_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (*SuggestSpellingsRequest_ScoreOption_Clear_) isSuggestSpellingsRequest_ScoreOption_ScoreOption() {
}

func (m *SuggestSpellingsRequest_ScoreOption) GetScoreOption() isSuggestSpellingsRequest_ScoreOption_ScoreOption {
	if m != nil {
		return m.ScoreOption
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetAdjacentSwap() *SuggestSpellingsRequest_ScoreOption_AdjacentSwap {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_AdjacentSwap_); ok {
		return x.AdjacentSwap
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetConsecutiveRepeat() *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat_); ok {
		return x.ConsecutiveRepeat
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetFullPrefix() *SuggestSpellingsRequest_ScoreOption_FullPrefix {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_FullPrefix_); ok {
		return x.FullPrefix
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetFullSuffix() *SuggestSpellingsRequest_ScoreOption_FullSuffix {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_FullSuffix_); ok {
		return x.FullSuffix
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetLevenshtein() *SuggestSpellingsRequest_ScoreOption_Levenshtein {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_Levenshtein_); ok {
		return x.Levenshtein
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetLimitDistance() *SuggestSpellingsRequest_ScoreOption_LimitDistance {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_LimitDistance_); ok {
		return x.LimitDistance
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetPrefix() *SuggestSpellingsRequest_ScoreOption_Prefix {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_Prefix_); ok {
		return x.Prefix
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetVowelSwap() *SuggestSpellingsRequest_ScoreOption_VowelSwap {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_VowelSwap_); ok {
		return x.VowelSwap
	}
	return nil
}

func (m *SuggestSpellingsRequest_ScoreOption) GetClear() *SuggestSpellingsRequest_ScoreOption_Clear {
	if x, ok := m.GetScoreOption().(*SuggestSpellingsRequest_ScoreOption_Clear_); ok {
		return x.Clear
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SuggestSpellingsRequest_ScoreOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SuggestSpellingsRequest_ScoreOption_AdjacentSwap_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_FullPrefix_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_FullSuffix_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_Levenshtein_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_LimitDistance_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_Prefix_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_VowelSwap_)(nil),
		(*SuggestSpellingsRequest_ScoreOption_Clear_)(nil),
	}
}

// Checks for an adjacent swap which would otherwise register
// as distance 2 (standard Leveshtein), updating them to distance 1.
type SuggestSpellingsRequest_ScoreOption_AdjacentSwap struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_AdjacentSwap{}
}
func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_AdjacentSwap) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_AdjacentSwap) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 0}
}

func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_AdjacentSwap) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_AdjacentSwap proto.InternalMessageInfo

// ConsecutiveRepeat looks for mistakes due to repeated letters (i.e.
// where the input has a single letter that should be double, or vice
// versa).
type SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat struct {
	// scores contains the score to add for distance 0, 1, 2 and so on.
	Scores               []float64 `protobuf:"fixed64,1,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat{}
}
func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 1}
}

func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat) GetScores() []float64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// FullPrefix returns a score if the suggestion is contained in the prefix of word.
type SuggestSpellingsRequest_ScoreOption_FullPrefix struct {
	// scores contains the score to add for edit distance 0, 1, 2.
	Scores               []float64 `protobuf:"fixed64,1,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_FullPrefix{}
}
func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_FullPrefix) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_FullPrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 2}
}

func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullPrefix proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_FullPrefix) GetScores() []float64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// FullSuffix returns a score if the suggestion is contained in the suffix of the word.
type SuggestSpellingsRequest_ScoreOption_FullSuffix struct {
	// scores contains the score to add for edit distance 0, 1, 2.
	Scores               []float64 `protobuf:"fixed64,1,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_FullSuffix{}
}
func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_FullSuffix) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_FullSuffix) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 3}
}

func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_FullSuffix proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_FullSuffix) GetScores() []float64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// Levenshtein configures the score attributed to different edit distances.
type SuggestSpellingsRequest_ScoreOption_Levenshtein struct {
	// scores contains the score to add for edit distance 0, 1, 2.
	Scores               []float64 `protobuf:"fixed64,1,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_Levenshtein{}
}
func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_Levenshtein) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_Levenshtein) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 4}
}

func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Levenshtein proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_Levenshtein) GetScores() []float64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// LimitDistance bounds the allowed edit distance based on the size of the input word.
type SuggestSpellingsRequest_ScoreOption_LimitDistance struct {
	// Maximum length of the suggestion suggested word.
	MaxWordSize int32 `protobuf:"varint,1,opt,name=max_word_size,json=maxWordSize,proto3" json:"max_word_size,omitempty"`
	// Maximum edit distance the suggested word can have.
	MaxDistance          int32    `protobuf:"varint,2,opt,name=max_distance,json=maxDistance,proto3" json:"max_distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_LimitDistance{}
}
func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_LimitDistance) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_LimitDistance) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 5}
}

func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_LimitDistance proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) GetMaxWordSize() int32 {
	if m != nil {
		return m.MaxWordSize
	}
	return 0
}

func (m *SuggestSpellingsRequest_ScoreOption_LimitDistance) GetMaxDistance() int32 {
	if m != nil {
		return m.MaxDistance
	}
	return 0
}

// Prefix adds scoring to suggestions if they match prefixes.
type SuggestSpellingsRequest_ScoreOption_Prefix struct {
	// scores to add for each prefix character that matches with the suggestion.
	Scores               []float64 `protobuf:"fixed64,1,rep,packed,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_Prefix) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_Prefix{}
}
func (m *SuggestSpellingsRequest_ScoreOption_Prefix) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_Prefix) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 6}
}

func (m *SuggestSpellingsRequest_ScoreOption_Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_Prefix) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Prefix proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_Prefix) GetScores() []float64 {
	if m != nil {
		return m.Scores
	}
	return nil
}

// VowelSwap returns score if a difference is a vowel swap.
type SuggestSpellingsRequest_ScoreOption_VowelSwap struct {
	// score is the score to add to the suggestion.
	Score                float64  `protobuf:"fixed64,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_VowelSwap{}
}
func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_VowelSwap) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_VowelSwap) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 7}
}

func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_VowelSwap proto.InternalMessageInfo

func (m *SuggestSpellingsRequest_ScoreOption_VowelSwap) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

// Clears all default score options.
type SuggestSpellingsRequest_ScoreOption_Clear struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsRequest_ScoreOption_Clear) Reset() {
	*m = SuggestSpellingsRequest_ScoreOption_Clear{}
}
func (m *SuggestSpellingsRequest_ScoreOption_Clear) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsRequest_ScoreOption_Clear) ProtoMessage() {}
func (*SuggestSpellingsRequest_ScoreOption_Clear) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{11, 1, 8}
}

func (m *SuggestSpellingsRequest_ScoreOption_Clear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear.Unmarshal(m, b)
}
func (m *SuggestSpellingsRequest_ScoreOption_Clear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsRequest_ScoreOption_Clear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear.Merge(m, src)
}
func (m *SuggestSpellingsRequest_ScoreOption_Clear) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear.Size(m)
}
func (m *SuggestSpellingsRequest_ScoreOption_Clear) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsRequest_ScoreOption_Clear proto.InternalMessageInfo

type SuggestSpellingsResponse struct {
	// Spelling suggestions for the words.
	WordSuggestions []*SuggestSpellingsResponse_WordSuggestions `protobuf:"bytes,1,rep,name=word_suggestions,json=wordSuggestions,proto3" json:"word_suggestions,omitempty"`
	// Context-based suggestions for the words
	// formed into phrases.
	PhraseSuggestions    []*SuggestSpellingsResponse_PhraseSuggestion `protobuf:"bytes,2,rep,name=phrase_suggestions,json=phraseSuggestions,proto3" json:"phrase_suggestions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *SuggestSpellingsResponse) Reset()         { *m = SuggestSpellingsResponse{} }
func (m *SuggestSpellingsResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestSpellingsResponse) ProtoMessage()    {}
func (*SuggestSpellingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{12}
}

func (m *SuggestSpellingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsResponse.Unmarshal(m, b)
}
func (m *SuggestSpellingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsResponse.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsResponse.Merge(m, src)
}
func (m *SuggestSpellingsResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsResponse.Size(m)
}
func (m *SuggestSpellingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsResponse proto.InternalMessageInfo

func (m *SuggestSpellingsResponse) GetWordSuggestions() []*SuggestSpellingsResponse_WordSuggestions {
	if m != nil {
		return m.WordSuggestions
	}
	return nil
}

func (m *SuggestSpellingsResponse) GetPhraseSuggestions() []*SuggestSpellingsResponse_PhraseSuggestion {
	if m != nil {
		return m.PhraseSuggestions
	}
	return nil
}

type SuggestSpellingsResponse_WordSuggestions struct {
	WordScores           []*SuggestSpellingsResponse_WordSuggestions_WordScore `protobuf:"bytes,1,rep,name=word_scores,json=wordScores,proto3" json:"word_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *SuggestSpellingsResponse_WordSuggestions) Reset() {
	*m = SuggestSpellingsResponse_WordSuggestions{}
}
func (m *SuggestSpellingsResponse_WordSuggestions) String() string { return proto.CompactTextString(m) }
func (*SuggestSpellingsResponse_WordSuggestions) ProtoMessage()    {}
func (*SuggestSpellingsResponse_WordSuggestions) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{12, 0}
}

func (m *SuggestSpellingsResponse_WordSuggestions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions.Unmarshal(m, b)
}
func (m *SuggestSpellingsResponse_WordSuggestions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsResponse_WordSuggestions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions.Merge(m, src)
}
func (m *SuggestSpellingsResponse_WordSuggestions) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions.Size(m)
}
func (m *SuggestSpellingsResponse_WordSuggestions) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions proto.InternalMessageInfo

func (m *SuggestSpellingsResponse_WordSuggestions) GetWordScores() []*SuggestSpellingsResponse_WordSuggestions_WordScore {
	if m != nil {
		return m.WordScores
	}
	return nil
}

type SuggestSpellingsResponse_WordSuggestions_WordScore struct {
	Word                 string   `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Score                float64  `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) Reset() {
	*m = SuggestSpellingsResponse_WordSuggestions_WordScore{}
}
func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsResponse_WordSuggestions_WordScore) ProtoMessage() {}
func (*SuggestSpellingsResponse_WordSuggestions_WordScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{12, 0, 0}
}

func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore.Unmarshal(m, b)
}
func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore.Merge(m, src)
}
func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore.Size(m)
}
func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsResponse_WordSuggestions_WordScore proto.InternalMessageInfo

func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *SuggestSpellingsResponse_WordSuggestions_WordScore) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

type SuggestSpellingsResponse_PhraseSuggestion struct {
	Words                []string `protobuf:"bytes,1,rep,name=words,proto3" json:"words,omitempty"`
	Score                float64  `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestSpellingsResponse_PhraseSuggestion) Reset() {
	*m = SuggestSpellingsResponse_PhraseSuggestion{}
}
func (m *SuggestSpellingsResponse_PhraseSuggestion) String() string {
	return proto.CompactTextString(m)
}
func (*SuggestSpellingsResponse_PhraseSuggestion) ProtoMessage() {}
func (*SuggestSpellingsResponse_PhraseSuggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{12, 1}
}

func (m *SuggestSpellingsResponse_PhraseSuggestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion.Unmarshal(m, b)
}
func (m *SuggestSpellingsResponse_PhraseSuggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion.Marshal(b, m, deterministic)
}
func (m *SuggestSpellingsResponse_PhraseSuggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion.Merge(m, src)
}
func (m *SuggestSpellingsResponse_PhraseSuggestion) XXX_Size() int {
	return xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion.Size(m)
}
func (m *SuggestSpellingsResponse_PhraseSuggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestSpellingsResponse_PhraseSuggestion proto.InternalMessageInfo

func (m *SuggestSpellingsResponse_PhraseSuggestion) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

func (m *SuggestSpellingsResponse_PhraseSuggestion) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

// Allows a score to be weighted according to label.
type LabelScorer struct {
	// Mapping of label to weight.
	Weights              map[string]float64 `protobuf:"bytes,1,rep,name=weights,proto3" json:"weights,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LabelScorer) Reset()         { *m = LabelScorer{} }
func (m *LabelScorer) String() string { return proto.CompactTextString(m) }
func (*LabelScorer) ProtoMessage()    {}
func (*LabelScorer) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{13}
}

func (m *LabelScorer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelScorer.Unmarshal(m, b)
}
func (m *LabelScorer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelScorer.Marshal(b, m, deterministic)
}
func (m *LabelScorer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelScorer.Merge(m, src)
}
func (m *LabelScorer) XXX_Size() int {
	return xxx_messageInfo_LabelScorer.Size(m)
}
func (m *LabelScorer) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelScorer.DiscardUnknown(m)
}

var xxx_messageInfo_LabelScorer proto.InternalMessageInfo

func (m *LabelScorer) GetWeights() map[string]float64 {
	if m != nil {
		return m.Weights
	}
	return nil
}

// Determines whether the request should be porcessed.
type SkipOption struct {
	// Types that are valid to be assigned to SkipOption:
	//	*SkipOption_SkipLabel_
	SkipOption           isSkipOption_SkipOption `protobuf_oneof:"skip_option"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SkipOption) Reset()         { *m = SkipOption{} }
func (m *SkipOption) String() string { return proto.CompactTextString(m) }
func (*SkipOption) ProtoMessage()    {}
func (*SkipOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{14}
}

func (m *SkipOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkipOption.Unmarshal(m, b)
}
func (m *SkipOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkipOption.Marshal(b, m, deterministic)
}
func (m *SkipOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkipOption.Merge(m, src)
}
func (m *SkipOption) XXX_Size() int {
	return xxx_messageInfo_SkipOption.Size(m)
}
func (m *SkipOption) XXX_DiscardUnknown() {
	xxx_messageInfo_SkipOption.DiscardUnknown(m)
}

var xxx_messageInfo_SkipOption proto.InternalMessageInfo

type isSkipOption_SkipOption interface {
	isSkipOption_SkipOption()
}

type SkipOption_SkipLabel_ struct {
	SkipLabel *SkipOption_SkipLabel `protobuf:"bytes,1,opt,name=skip_label,json=skipLabel,proto3,oneof"`
}

func (*SkipOption_SkipLabel_) isSkipOption_SkipOption() {}

func (m *SkipOption) GetSkipOption() isSkipOption_SkipOption {
	if m != nil {
		return m.SkipOption
	}
	return nil
}

func (m *SkipOption) GetSkipLabel() *SkipOption_SkipLabel {
	if x, ok := m.GetSkipOption().(*SkipOption_SkipLabel_); ok {
		return x.SkipLabel
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SkipOption) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SkipOption_SkipLabel_)(nil),
	}
}

// Skip evaluation based on the ngrams located within a label.
type SkipOption_SkipLabel struct {
	// Source of the words.
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkipOption_SkipLabel) Reset()         { *m = SkipOption_SkipLabel{} }
func (m *SkipOption_SkipLabel) String() string { return proto.CompactTextString(m) }
func (*SkipOption_SkipLabel) ProtoMessage()    {}
func (*SkipOption_SkipLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ab5ed88aab76f7, []int{14, 0}
}

func (m *SkipOption_SkipLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkipOption_SkipLabel.Unmarshal(m, b)
}
func (m *SkipOption_SkipLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkipOption_SkipLabel.Marshal(b, m, deterministic)
}
func (m *SkipOption_SkipLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkipOption_SkipLabel.Merge(m, src)
}
func (m *SkipOption_SkipLabel) XXX_Size() int {
	return xxx_messageInfo_SkipOption_SkipLabel.Size(m)
}
func (m *SkipOption_SkipLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_SkipOption_SkipLabel.DiscardUnknown(m)
}

var xxx_messageInfo_SkipOption_SkipLabel proto.InternalMessageInfo

func (m *SkipOption_SkipLabel) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto.RegisterType((*Model)(nil), "sajari.autocomplete.v2.Model")
	proto.RegisterType((*Frequency)(nil), "sajari.autocomplete.v2.Frequency")
	proto.RegisterType((*CreateModelRequest)(nil), "sajari.autocomplete.v2.CreateModelRequest")
	proto.RegisterType((*CreateModelResponse)(nil), "sajari.autocomplete.v2.CreateModelResponse")
	proto.RegisterType((*DeleteModelRequest)(nil), "sajari.autocomplete.v2.DeleteModelRequest")
	proto.RegisterType((*AddCorpusRequest)(nil), "sajari.autocomplete.v2.AddCorpusRequest")
	proto.RegisterType((*AddCorpusRequest_AddCorpusOption)(nil), "sajari.autocomplete.v2.AddCorpusRequest.AddCorpusOption")
	proto.RegisterType((*SetCorpusRequest)(nil), "sajari.autocomplete.v2.SetCorpusRequest")
	proto.RegisterType((*AddQueryFrequencyRequest)(nil), "sajari.autocomplete.v2.AddQueryFrequencyRequest")
	proto.RegisterType((*AddQueryFrequencyRequest_AddQueryOption)(nil), "sajari.autocomplete.v2.AddQueryFrequencyRequest.AddQueryOption")
	proto.RegisterType((*SetQueryFrequencyRequest)(nil), "sajari.autocomplete.v2.SetQueryFrequencyRequest")
	proto.RegisterType((*AutoCompleteRequest)(nil), "sajari.autocomplete.v2.AutoCompleteRequest")
	proto.RegisterType((*AutoCompleteRequest_AutoCompleteOption)(nil), "sajari.autocomplete.v2.AutoCompleteRequest.AutoCompleteOption")
	proto.RegisterType((*AutoCompleteResponse)(nil), "sajari.autocomplete.v2.AutoCompleteResponse")
	proto.RegisterType((*AutoCompleteResponse_Suggestion)(nil), "sajari.autocomplete.v2.AutoCompleteResponse.Suggestion")
	proto.RegisterType((*SuggestSpellingsRequest)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest")
	proto.RegisterType((*SuggestSpellingsRequest_SuggestOption)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.SuggestOption")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_AdjacentSwap)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.AdjacentSwap")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_ConsecutiveRepeat)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.ConsecutiveRepeat")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_FullPrefix)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.FullPrefix")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_FullSuffix)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.FullSuffix")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_Levenshtein)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.Levenshtein")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_LimitDistance)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.LimitDistance")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_Prefix)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.Prefix")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_VowelSwap)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.VowelSwap")
	proto.RegisterType((*SuggestSpellingsRequest_ScoreOption_Clear)(nil), "sajari.autocomplete.v2.SuggestSpellingsRequest.ScoreOption.Clear")
	proto.RegisterType((*SuggestSpellingsResponse)(nil), "sajari.autocomplete.v2.SuggestSpellingsResponse")
	proto.RegisterType((*SuggestSpellingsResponse_WordSuggestions)(nil), "sajari.autocomplete.v2.SuggestSpellingsResponse.WordSuggestions")
	proto.RegisterType((*SuggestSpellingsResponse_WordSuggestions_WordScore)(nil), "sajari.autocomplete.v2.SuggestSpellingsResponse.WordSuggestions.WordScore")
	proto.RegisterType((*SuggestSpellingsResponse_PhraseSuggestion)(nil), "sajari.autocomplete.v2.SuggestSpellingsResponse.PhraseSuggestion")
	proto.RegisterType((*LabelScorer)(nil), "sajari.autocomplete.v2.LabelScorer")
	proto.RegisterMapType((map[string]float64)(nil), "sajari.autocomplete.v2.LabelScorer.WeightsEntry")
	proto.RegisterType((*SkipOption)(nil), "sajari.autocomplete.v2.SkipOption")
	proto.RegisterType((*SkipOption_SkipLabel)(nil), "sajari.autocomplete.v2.SkipOption.SkipLabel")
}

func init() {
	proto.RegisterFile("sajari/autocomplete/v2/autocomplete.proto", fileDescriptor_05ab5ed88aab76f7)
}

var fileDescriptor_05ab5ed88aab76f7 = []byte{
	// 1434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0xb7, 0x6c, 0x2b, 0xa9, 0x9f, 0xec, 0x34, 0xd9, 0x76, 0x8a, 0x47, 0x1d, 0x86, 0x54, 0xd0,
	0x99, 0xd0, 0x16, 0xa7, 0xe3, 0x0e, 0xd3, 0x4e, 0x3b, 0x6d, 0x71, 0xd2, 0x04, 0x37, 0xd3, 0x0c,
	0xad, 0x0c, 0x2d, 0x65, 0x60, 0x8c, 0x62, 0xaf, 0x5d, 0x35, 0xb2, 0xa4, 0x6a, 0x25, 0x27, 0xee,
	0x81, 0x2b, 0x5c, 0x38, 0x70, 0xe0, 0x03, 0xf0, 0x01, 0x38, 0x70, 0xe0, 0xc6, 0x89, 0x0f, 0xc2,
	0x85, 0x13, 0x47, 0x06, 0x3e, 0x00, 0xb3, 0x7f, 0xf4, 0xc7, 0x72, 0xd4, 0xc6, 0x15, 0x65, 0xb8,
	0xe9, 0xbd, 0xdd, 0xfd, 0xbd, 0xb7, 0xef, 0xf7, 0x56, 0x6f, 0xf7, 0xc1, 0xbb, 0xc4, 0x78, 0x6a,
	0x78, 0xe6, 0xba, 0x11, 0xf8, 0x4e, 0xcf, 0x19, 0xb9, 0x16, 0xf6, 0xf1, 0xfa, 0xb8, 0x39, 0x25,
	0x37, 0x5c, 0xcf, 0xf1, 0x1d, 0x74, 0x86, 0x4f, 0x6d, 0x4c, 0x0d, 0x8d, 0x9b, 0xea, 0xd9, 0xa1,
	0xe3, 0x0c, 0x2d, 0xbc, 0xce, 0x66, 0xed, 0x05, 0x83, 0x75, 0x3c, 0x72, 0xfd, 0x09, 0x5f, 0xa4,
	0x9d, 0x05, 0x79, 0xd7, 0xe9, 0x63, 0x0b, 0x21, 0x28, 0xdb, 0xc6, 0x08, 0xd7, 0xa5, 0x55, 0x69,
	0xad, 0xa2, 0xb3, 0x6f, 0xed, 0x2a, 0x54, 0xb6, 0x3d, 0xfc, 0x2c, 0xc0, 0x76, 0x6f, 0x82, 0x4e,
	0x83, 0x6c, 0x19, 0x7b, 0xd8, 0x12, 0x33, 0xb8, 0x40, 0xb5, 0x3d, 0x27, 0xb0, 0xfd, 0x7a, 0x71,
	0x55, 0x5a, 0x2b, 0xe9, 0x5c, 0xd0, 0xee, 0x02, 0xda, 0xf4, 0xb0, 0xe1, 0x63, 0x86, 0xad, 0x53,
	0x08, 0xe2, 0xa3, 0x2b, 0x20, 0x8f, 0xa8, 0xcc, 0x10, 0x94, 0xe6, 0x9b, 0x8d, 0xa3, 0x1d, 0x6e,
	0xf0, 0x45, 0x7c, 0xae, 0xb6, 0x03, 0xa7, 0xa6, 0xa0, 0x88, 0xeb, 0xd8, 0x04, 0xbf, 0x1a, 0xd6,
	0x5d, 0x40, 0x77, 0x30, 0x1d, 0xc9, 0xef, 0xd6, 0x37, 0x45, 0x58, 0x6e, 0xf5, 0xfb, 0x9b, 0x8e,
	0xe7, 0x06, 0x24, 0x0f, 0x52, 0x1c, 0xd7, 0x62, 0x2a, 0xae, 0x07, 0x8e, 0xd7, 0x27, 0xf5, 0xd2,
	0x6a, 0x89, 0x6a, 0x99, 0x80, 0x74, 0x58, 0x74, 0x5c, 0xdf, 0x74, 0x6c, 0x52, 0x2f, 0xaf, 0x96,
	0xd6, 0x94, 0xe6, 0xb5, 0x2c, 0x13, 0x69, 0xdf, 0x62, 0xc5, 0x47, 0x0c, 0x40, 0x0f, 0x81, 0xd4,
	0xdb, 0x70, 0x32, 0x35, 0x86, 0xce, 0x43, 0xcd, 0xb1, 0xad, 0x49, 0x37, 0xb0, 0xcd, 0xa1, 0x67,
	0x8c, 0x08, 0xdb, 0xcf, 0x89, 0x76, 0x41, 0xaf, 0x52, 0xf5, 0x27, 0x42, 0xbb, 0x21, 0x43, 0xc9,
	0x71, 0x7d, 0xed, 0x6b, 0x09, 0x96, 0x3b, 0xd8, 0xff, 0x8f, 0x43, 0x81, 0xa0, 0x3c, 0xb0, 0x0c,
	0xbf, 0x5e, 0xa6, 0xae, 0xe9, 0xec, 0x5b, 0xfb, 0xa9, 0x08, 0xf5, 0x56, 0xbf, 0xff, 0x20, 0xc0,
	0xde, 0x24, 0x4a, 0xdc, 0xd7, 0xe3, 0xd1, 0x33, 0x6a, 0x23, 0xf4, 0x88, 0x09, 0xf1, 0x51, 0x28,
	0x27, 0x8e, 0x02, 0x7a, 0x1c, 0x53, 0x26, 0x33, 0xca, 0x6e, 0xbf, 0x80, 0xb2, 0x23, 0x3d, 0x8f,
	0x06, 0xd2, 0xcc, 0x6d, 0xc2, 0xd2, 0xf4, 0x10, 0xba, 0x00, 0xcb, 0x2c, 0x3a, 0xdd, 0x51, 0x40,
	0xfc, 0x2e, 0x3e, 0x34, 0x89, 0x1f, 0x71, 0xb7, 0xc4, 0x46, 0x76, 0x03, 0xe2, 0x6f, 0x51, 0x7d,
	0xc8, 0xde, 0x77, 0x12, 0xd4, 0x3b, 0xd8, 0xff, 0x3f, 0xc5, 0x4c, 0xfb, 0xad, 0x08, 0xa7, 0x5a,
	0x81, 0xef, 0x6c, 0x0a, 0x13, 0x79, 0xdd, 0xe1, 0xe9, 0x53, 0x4c, 0xa6, 0xcf, 0xa7, 0x31, 0x2d,
	0x25, 0x46, 0xcb, 0xad, 0x4c, 0x5a, 0x66, 0x1d, 0x99, 0xd2, 0xa5, 0x59, 0xf9, 0x41, 0x02, 0x34,
	0x3b, 0x8e, 0xb6, 0x40, 0x21, 0xfb, 0xa6, 0xdb, 0xe5, 0xd3, 0xc4, 0x0e, 0xb4, 0x2c, 0xa3, 0x9d,
	0x7d, 0xd3, 0xe5, 0x0b, 0xdb, 0x05, 0x1d, 0x48, 0x24, 0xa1, 0x9b, 0xb0, 0x40, 0x7a, 0x8e, 0x87,
	0x3d, 0x16, 0x5d, 0xa5, 0xf9, 0x76, 0x16, 0xc2, 0x3d, 0x1a, 0xf5, 0x0e, 0x9b, 0xda, 0x2e, 0xe8,
	0x62, 0x51, 0x48, 0xfa, 0x8f, 0x12, 0x9c, 0x9e, 0xde, 0x97, 0xf8, 0xad, 0x3e, 0x06, 0x85, 0x04,
	0xc3, 0x21, 0x26, 0x3c, 0x34, 0x12, 0x0b, 0xcd, 0xd5, 0xe3, 0x85, 0x86, 0x43, 0x34, 0x3a, 0xd1,
	0x7a, 0x3d, 0x89, 0xa5, 0x5e, 0x07, 0x88, 0x87, 0x62, 0x56, 0xa4, 0x24, 0x2b, 0x67, 0x60, 0xe1,
	0x00, 0x9b, 0xc3, 0x27, 0xbc, 0x9c, 0x48, 0xba, 0x90, 0xb4, 0xbf, 0x96, 0xe0, 0x0d, 0xb1, 0xb8,
	0xe3, 0x62, 0xcb, 0x32, 0xed, 0x21, 0x79, 0x0d, 0x49, 0xf1, 0x28, 0x9d, 0x14, 0x37, 0x33, 0xf9,
	0x39, 0xda, 0x99, 0x50, 0x9f, 0xce, 0x89, 0xbf, 0x8b, 0x50, 0x9b, 0x1a, 0x42, 0x6f, 0x01, 0x50,
	0x9b, 0x5d, 0xcb, 0x1c, 0x99, 0xfc, 0x8c, 0xca, 0xed, 0x82, 0x5e, 0xa1, 0xba, 0x7b, 0x54, 0x85,
	0xbe, 0x84, 0x2a, 0xe3, 0x2c, 0x4c, 0x18, 0x4e, 0xf7, 0x8d, 0xb9, 0x1d, 0xa2, 0x18, 0x51, 0x26,
	0x29, 0x24, 0x16, 0xd3, 0x19, 0x59, 0x7a, 0xc5, 0x8c, 0xdc, 0x06, 0x85, 0xed, 0x44, 0xa4, 0x65,
	0x79, 0x9e, 0xb4, 0x64, 0x31, 0xe0, 0x12, 0xda, 0x81, 0x9a, 0xfb, 0xc4, 0x33, 0x08, 0x0e, 0x91,
	0xe4, 0x79, 0x90, 0xaa, 0x7c, 0x6d, 0x27, 0x99, 0xe6, 0xea, 0x2f, 0x00, 0x4a, 0x22, 0x00, 0xc8,
	0x81, 0x9a, 0xd1, 0x7f, 0x6a, 0xf4, 0xb0, 0xed, 0x77, 0xc9, 0x81, 0xe1, 0x8a, 0x94, 0x69, 0xe7,
	0x08, 0x6a, 0xa3, 0x25, 0x00, 0x3b, 0x07, 0x86, 0x4b, 0xfd, 0x30, 0x12, 0x32, 0xfa, 0x0a, 0x50,
	0x8f, 0x1e, 0x8a, 0x5e, 0xe0, 0x9b, 0x63, 0xdc, 0xf5, 0xb0, 0x8b, 0x0d, 0x5f, 0x50, 0xb9, 0x9b,
	0xc7, 0xea, 0x66, 0x8c, 0xaa, 0x33, 0xd0, 0x76, 0x41, 0x5f, 0xe9, 0xa5, 0x95, 0xc8, 0x04, 0x65,
	0x10, 0x58, 0x56, 0xd7, 0xf5, 0xf0, 0xc0, 0x3c, 0x14, 0x14, 0x6f, 0xe7, 0x31, 0xbc, 0x1d, 0x58,
	0xd6, 0x7d, 0x86, 0x46, 0xe9, 0x1b, 0x44, 0x52, 0x64, 0x8a, 0x04, 0x03, 0x6a, 0xaa, 0xfc, 0xef,
	0x98, 0xea, 0x30, 0xb4, 0xd0, 0x14, 0x97, 0xd0, 0x3e, 0x28, 0x16, 0x1e, 0x63, 0x9b, 0x3c, 0xf1,
	0xb1, 0x69, 0x8b, 0x3c, 0xf9, 0x30, 0x8f, 0xa9, 0x7b, 0x31, 0x1c, 0x3d, 0x25, 0x09, 0x74, 0xe4,
	0xc1, 0x12, 0x3b, 0xa3, 0xdd, 0xbe, 0x49, 0x7c, 0xc3, 0xee, 0xe1, 0xfa, 0x02, 0xb3, 0x77, 0x37,
	0x97, 0x3d, 0x8a, 0x78, 0x47, 0x00, 0xb6, 0x0b, 0x7a, 0xcd, 0x4a, 0x2a, 0xd0, 0xe7, 0xb0, 0x20,
	0x18, 0x5b, 0x64, 0xb6, 0x36, 0xf2, 0xd8, 0x8a, 0xd8, 0x12, 0x98, 0x68, 0x00, 0x30, 0x76, 0x0e,
	0xb0, 0xc5, 0x8f, 0xc0, 0x09, 0x66, 0x61, 0x2b, 0x8f, 0x85, 0x87, 0x14, 0x4d, 0xe4, 0x7f, 0x65,
	0x1c, 0x0a, 0xe8, 0x31, 0xc8, 0x3d, 0x0b, 0x1b, 0x5e, 0xbd, 0xc2, 0x4c, 0xb4, 0x72, 0xe5, 0x3b,
	0x05, 0x6a, 0x17, 0x74, 0x8e, 0xa8, 0x2e, 0x41, 0x35, 0x79, 0xee, 0xd4, 0x8b, 0xb0, 0x32, 0x73,
	0x22, 0x68, 0x31, 0x61, 0x7f, 0x12, 0x5e, 0x63, 0x24, 0x51, 0x03, 0x89, 0xfa, 0x0e, 0x40, 0x9c,
	0xc5, 0x2f, 0x9b, 0x25, 0x52, 0x2e, 0x6b, 0xd6, 0x79, 0x50, 0x12, 0xb9, 0x93, 0x39, 0xed, 0x21,
	0xd4, 0xa6, 0x28, 0x47, 0x1a, 0xd4, 0x46, 0xc6, 0x61, 0x97, 0xff, 0x38, 0xcd, 0xe7, 0xfc, 0xd9,
	0x25, 0xeb, 0xca, 0xc8, 0x38, 0x7c, 0x44, 0x7f, 0x89, 0xe6, 0x73, 0x8c, 0xce, 0x41, 0x95, 0xce,
	0x89, 0xf2, 0xae, 0x18, 0x4d, 0x09, 0x61, 0xd4, 0x55, 0x58, 0x78, 0xc9, 0x36, 0xce, 0x41, 0x25,
	0xa2, 0x87, 0x56, 0x3d, 0xa6, 0x66, 0xd6, 0x24, 0x9d, 0x0b, 0xea, 0x22, 0xc8, 0x2c, 0xbc, 0x1b,
	0x4b, 0xd3, 0x25, 0x47, 0xfb, 0xb3, 0x04, 0xf5, 0x59, 0x72, 0xc4, 0x4d, 0x61, 0x9f, 0x5f, 0x35,
	0xbb, 0xb3, 0xd7, 0x85, 0x0f, 0x8e, 0x4f, 0xb4, 0xb8, 0x32, 0xb0, 0x2d, 0xc7, 0x38, 0xfa, 0xc9,
	0x83, 0x69, 0x05, 0x72, 0x01, 0x85, 0xb5, 0x21, 0x61, 0xae, 0xc8, 0xcc, 0xb5, 0xe6, 0x36, 0x77,
	0x9f, 0x97, 0x8a, 0xf8, 0x9e, 0xb2, 0xe2, 0xa6, 0x34, 0x44, 0xfd, 0x59, 0x82, 0x93, 0x29, 0xb7,
	0xe8, 0x7f, 0x27, 0xae, 0x74, 0xe1, 0x6e, 0x77, 0xf2, 0xee, 0x96, 0xcb, 0x14, 0x32, 0x51, 0x0e,
	0x89, 0xfa, 0x3e, 0x54, 0xa2, 0x01, 0xfa, 0xd8, 0xa1, 0x43, 0xe1, 0xe3, 0x9c, 0x7e, 0xc7, 0x64,
	0x16, 0x93, 0x64, 0xde, 0x82, 0xe5, 0xf4, 0xf6, 0x32, 0xee, 0x5a, 0x47, 0xae, 0xd7, 0xbe, 0x97,
	0x40, 0x49, 0x54, 0x56, 0xb4, 0x03, 0x8b, 0xfc, 0x0e, 0x16, 0xee, 0xf7, 0xf2, 0x31, 0xea, 0x71,
	0xe3, 0x11, 0x5f, 0xb2, 0x65, 0xfb, 0xde, 0x44, 0x0f, 0x01, 0xd4, 0xeb, 0x50, 0x4d, 0x0e, 0xa0,
	0x65, 0x28, 0xed, 0xe3, 0x89, 0xd8, 0x14, 0xfd, 0xa4, 0x3e, 0x8d, 0x0d, 0x2b, 0x88, 0x7c, 0x62,
	0xc2, 0xf5, 0xe2, 0x35, 0x49, 0xfb, 0x56, 0x02, 0x88, 0xaf, 0x20, 0x68, 0x17, 0xd8, 0x15, 0xa4,
	0x1b, 0x77, 0x24, 0x94, 0xe6, 0xa5, 0x97, 0x5f, 0x5d, 0xd8, 0x27, 0x73, 0x94, 0xfe, 0xaa, 0x48,
	0x28, 0xd0, 0x53, 0x12, 0x8d, 0x1c, 0xdd, 0xe8, 0xd8, 0xa8, 0x4d, 0xdd, 0x96, 0x9a, 0xbf, 0x4a,
	0x20, 0xb7, 0xfa, 0x23, 0xd3, 0x46, 0x03, 0x50, 0x12, 0x0d, 0x0a, 0x74, 0x21, 0xcb, 0x8b, 0xd9,
	0x86, 0x88, 0x7a, 0xf1, 0x58, 0x73, 0xc5, 0x81, 0x7b, 0x00, 0x4a, 0xa2, 0x79, 0x91, 0x6d, 0x67,
	0xb6, 0xc3, 0xa1, 0x9e, 0x69, 0xf0, 0x16, 0x50, 0x23, 0x6c, 0x01, 0x35, 0xb6, 0x46, 0xae, 0x3f,
	0x69, 0xfe, 0x21, 0x81, 0xcc, 0x1e, 0x7e, 0xc8, 0x84, 0x6a, 0xf2, 0x32, 0x8f, 0x2e, 0xce, 0xf1,
	0x1a, 0x52, 0x2f, 0xcd, 0xf3, 0x3e, 0x40, 0x01, 0x2c, 0xa7, 0x8f, 0x06, 0x5a, 0x9f, 0xb3, 0x36,
	0xa8, 0x97, 0xe7, 0x3d, 0x75, 0xcd, 0xdf, 0x8b, 0x20, 0x7f, 0xec, 0x19, 0x26, 0xcd, 0x9d, 0x4a,
	0xd4, 0xf0, 0x40, 0x6b, 0xc7, 0x6d, 0xa0, 0x64, 0x05, 0x91, 0xc2, 0x45, 0xdd, 0x8f, 0x6c, 0xb8,
	0x74, 0x83, 0x24, 0x13, 0xee, 0x0b, 0x58, 0x99, 0x69, 0x04, 0xa0, 0xcb, 0xf3, 0xf6, 0x0c, 0x5e,
	0x04, 0x3f, 0xf3, 0xda, 0xcf, 0x86, 0xcf, 0x6a, 0x0c, 0x64, 0xc1, 0x6f, 0x6c, 0x7e, 0xd6, 0xea,
	0x39, 0x7d, 0x1c, 0xe2, 0xf5, 0x9c, 0x11, 0x6f, 0x3b, 0x0e, 0xb1, 0xfd, 0xde, 0xd0, 0x59, 0x3f,
	0xba, 0x99, 0x79, 0x23, 0x29, 0xbb, 0x7b, 0x7b, 0x0b, 0x6c, 0xc9, 0x95, 0x7f, 0x02, 0x00, 0x00,
	0xff, 0xff, 0xae, 0xf8, 0xe3, 0x9b, 0xfc, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// Create a new autocomplete model.
	CreateModel(ctx context.Context, in *CreateModelRequest, opts ...grpc.CallOption) (*CreateModelResponse, error)
	// Delete an existing model.
	DeleteModel(ctx context.Context, in *DeleteModelRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) CreateModel(ctx context.Context, in *CreateModelRequest, opts ...grpc.CallOption) (*CreateModelResponse, error) {
	out := new(CreateModelResponse)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Admin/CreateModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) DeleteModel(ctx context.Context, in *DeleteModelRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Admin/DeleteModel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// Create a new autocomplete model.
	CreateModel(context.Context, *CreateModelRequest) (*CreateModelResponse, error)
	// Delete an existing model.
	DeleteModel(context.Context, *DeleteModelRequest) (*empty.Empty, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) CreateModel(ctx context.Context, req *CreateModelRequest) (*CreateModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateModel not implemented")
}
func (*UnimplementedAdminServer) DeleteModel(ctx context.Context, req *DeleteModelRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteModel not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_CreateModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).CreateModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Admin/CreateModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).CreateModel(ctx, req.(*CreateModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_DeleteModel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteModelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).DeleteModel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Admin/DeleteModel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).DeleteModel(ctx, req.(*DeleteModelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.autocomplete.v2.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateModel",
			Handler:    _Admin_CreateModel_Handler,
		},
		{
			MethodName: "DeleteModel",
			Handler:    _Admin_DeleteModel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/autocomplete/v2/autocomplete.proto",
}

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Autocomplete a phrase. Potentially also fix spelling mistakes.
	AutoComplete(ctx context.Context, in *AutoCompleteRequest, opts ...grpc.CallOption) (*AutoCompleteResponse, error)
	// SuggestSpellings for a list of words.
	SuggestSpellings(ctx context.Context, in *SuggestSpellingsRequest, opts ...grpc.CallOption) (*SuggestSpellingsResponse, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) AutoComplete(ctx context.Context, in *AutoCompleteRequest, opts ...grpc.CallOption) (*AutoCompleteResponse, error) {
	out := new(AutoCompleteResponse)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Query/AutoComplete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) SuggestSpellings(ctx context.Context, in *SuggestSpellingsRequest, opts ...grpc.CallOption) (*SuggestSpellingsResponse, error) {
	out := new(SuggestSpellingsResponse)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Query/SuggestSpellings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Autocomplete a phrase. Potentially also fix spelling mistakes.
	AutoComplete(context.Context, *AutoCompleteRequest) (*AutoCompleteResponse, error)
	// SuggestSpellings for a list of words.
	SuggestSpellings(context.Context, *SuggestSpellingsRequest) (*SuggestSpellingsResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) AutoComplete(ctx context.Context, req *AutoCompleteRequest) (*AutoCompleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoComplete not implemented")
}
func (*UnimplementedQueryServer) SuggestSpellings(ctx context.Context, req *SuggestSpellingsRequest) (*SuggestSpellingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuggestSpellings not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_AutoComplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutoCompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AutoComplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Query/AutoComplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AutoComplete(ctx, req.(*AutoCompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_SuggestSpellings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuggestSpellingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).SuggestSpellings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Query/SuggestSpellings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).SuggestSpellings(ctx, req.(*SuggestSpellingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.autocomplete.v2.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AutoComplete",
			Handler:    _Query_AutoComplete_Handler,
		},
		{
			MethodName: "SuggestSpellings",
			Handler:    _Query_SuggestSpellings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/autocomplete/v2/autocomplete.proto",
}

// TrainClient is the client API for Train service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrainClient interface {
	// Add words to the model to assist in detecting spelling mistakes.
	AddCorpus(ctx context.Context, in *AddCorpusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Set frequency for words in the model.
	SetCorpus(ctx context.Context, in *SetCorpusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Add a query to the model to assist with query popularity prediction.
	AddQueryFrequency(ctx context.Context, in *AddQueryFrequencyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Set the frequency for a query.
	SetQueryFrequency(ctx context.Context, in *SetQueryFrequencyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type trainClient struct {
	cc *grpc.ClientConn
}

func NewTrainClient(cc *grpc.ClientConn) TrainClient {
	return &trainClient{cc}
}

func (c *trainClient) AddCorpus(ctx context.Context, in *AddCorpusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Train/AddCorpus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainClient) SetCorpus(ctx context.Context, in *SetCorpusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Train/SetCorpus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainClient) AddQueryFrequency(ctx context.Context, in *AddQueryFrequencyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Train/AddQueryFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainClient) SetQueryFrequency(ctx context.Context, in *SetQueryFrequencyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/sajari.autocomplete.v2.Train/SetQueryFrequency", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainServer is the server API for Train service.
type TrainServer interface {
	// Add words to the model to assist in detecting spelling mistakes.
	AddCorpus(context.Context, *AddCorpusRequest) (*empty.Empty, error)
	// Set frequency for words in the model.
	SetCorpus(context.Context, *SetCorpusRequest) (*empty.Empty, error)
	// Add a query to the model to assist with query popularity prediction.
	AddQueryFrequency(context.Context, *AddQueryFrequencyRequest) (*empty.Empty, error)
	// Set the frequency for a query.
	SetQueryFrequency(context.Context, *SetQueryFrequencyRequest) (*empty.Empty, error)
}

// UnimplementedTrainServer can be embedded to have forward compatible implementations.
type UnimplementedTrainServer struct {
}

func (*UnimplementedTrainServer) AddCorpus(ctx context.Context, req *AddCorpusRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCorpus not implemented")
}
func (*UnimplementedTrainServer) SetCorpus(ctx context.Context, req *SetCorpusRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCorpus not implemented")
}
func (*UnimplementedTrainServer) AddQueryFrequency(ctx context.Context, req *AddQueryFrequencyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddQueryFrequency not implemented")
}
func (*UnimplementedTrainServer) SetQueryFrequency(ctx context.Context, req *SetQueryFrequencyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetQueryFrequency not implemented")
}

func RegisterTrainServer(s *grpc.Server, srv TrainServer) {
	s.RegisterService(&_Train_serviceDesc, srv)
}

func _Train_AddCorpus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCorpusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainServer).AddCorpus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Train/AddCorpus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainServer).AddCorpus(ctx, req.(*AddCorpusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Train_SetCorpus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetCorpusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainServer).SetCorpus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Train/SetCorpus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainServer).SetCorpus(ctx, req.(*SetCorpusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Train_AddQueryFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddQueryFrequencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainServer).AddQueryFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Train/AddQueryFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainServer).AddQueryFrequency(ctx, req.(*AddQueryFrequencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Train_SetQueryFrequency_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetQueryFrequencyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainServer).SetQueryFrequency(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.autocomplete.v2.Train/SetQueryFrequency",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainServer).SetQueryFrequency(ctx, req.(*SetQueryFrequencyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Train_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.autocomplete.v2.Train",
	HandlerType: (*TrainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCorpus",
			Handler:    _Train_AddCorpus_Handler,
		},
		{
			MethodName: "SetCorpus",
			Handler:    _Train_SetCorpus_Handler,
		},
		{
			MethodName: "AddQueryFrequency",
			Handler:    _Train_AddQueryFrequency_Handler,
		},
		{
			MethodName: "SetQueryFrequency",
			Handler:    _Train_SetQueryFrequency_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/autocomplete/v2/autocomplete.proto",
}
