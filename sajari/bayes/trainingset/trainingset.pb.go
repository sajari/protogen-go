// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/bayes/trainingset/trainingset.proto

package bayestrainingsetpb

import (
	rpc "code.sajari.com/protogen-go/sajari/rpc"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// UploadRequest encapsulates training data representing a document to add to the
// specified training set and class name
type UploadRequest struct {
	// Name of the training set
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Class name to add the data to
	Class string `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	// Data represents the individual strings representing the input query to be
	// classified. Normally these would represent words from text. It is the
	// callers responsibility to stem and tokenise into an array of strings.
	Data                 []string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{0}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadRequest) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *UploadRequest) GetData() []string {
	if m != nil {
		return m.Data
	}
	return nil
}

// UploadResponse contains a unique hash for the uploaded data to prevent
// duplicate documents distorting the training set probabilities
type UploadResponse struct {
	// unique hash for the uploaded data
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{1}
}

func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (m *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(m, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// CreateRequest creates a new training set
type CreateRequest struct {
	// Name of the training set to create
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{2}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// InfoRequest gets information for a training set
type InfoRequest struct {
	// Name of the training set to get information
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{3}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

func (m *InfoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// InfoResponse returns information for a given training set
type InfoResponse struct {
	// List of classes for the specified training set
	Classes              []string `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{4}
}

func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetClasses() []string {
	if m != nil {
		return m.Classes
	}
	return nil
}

// AddClassRequest creates a new class for the specified training set
type AddClassRequest struct {
	// The name of the training set to add the class to
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name of the class to add
	Class                string   `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddClassRequest) Reset()         { *m = AddClassRequest{} }
func (m *AddClassRequest) String() string { return proto.CompactTextString(m) }
func (*AddClassRequest) ProtoMessage()    {}
func (*AddClassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4986d8aa05664f5d, []int{5}
}

func (m *AddClassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddClassRequest.Unmarshal(m, b)
}
func (m *AddClassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddClassRequest.Marshal(b, m, deterministic)
}
func (m *AddClassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddClassRequest.Merge(m, src)
}
func (m *AddClassRequest) XXX_Size() int {
	return xxx_messageInfo_AddClassRequest.Size(m)
}
func (m *AddClassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddClassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddClassRequest proto.InternalMessageInfo

func (m *AddClassRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddClassRequest) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func init() {
	proto.RegisterType((*UploadRequest)(nil), "sajari.bayes.trainingset.UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "sajari.bayes.trainingset.UploadResponse")
	proto.RegisterType((*CreateRequest)(nil), "sajari.bayes.trainingset.CreateRequest")
	proto.RegisterType((*InfoRequest)(nil), "sajari.bayes.trainingset.InfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "sajari.bayes.trainingset.InfoResponse")
	proto.RegisterType((*AddClassRequest)(nil), "sajari.bayes.trainingset.AddClassRequest")
}

func init() {
	proto.RegisterFile("sajari/bayes/trainingset/trainingset.proto", fileDescriptor_4986d8aa05664f5d)
}

var fileDescriptor_4986d8aa05664f5d = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4d, 0x4f, 0x32, 0x31,
	0x10, 0xc7, 0xc3, 0xcb, 0xc3, 0xa3, 0x83, 0x68, 0x6c, 0x8c, 0xd9, 0xec, 0x09, 0xd7, 0x37, 0x34,
	0x71, 0x37, 0xd1, 0x23, 0x27, 0x45, 0xa3, 0x1c, 0xbc, 0xa0, 0x5c, 0xf4, 0x54, 0x76, 0x47, 0xc0,
	0x40, 0x5b, 0xdb, 0x7a, 0xe0, 0x63, 0xfa, 0x8d, 0x4c, 0xdb, 0x6d, 0xb2, 0x18, 0x17, 0xe2, 0x6d,
	0x66, 0xfa, 0x9b, 0x7f, 0x67, 0xfe, 0x2d, 0x9c, 0x2b, 0xfa, 0x4e, 0xe5, 0x34, 0x19, 0xd1, 0x05,
	0xaa, 0x44, 0x4b, 0x3a, 0x65, 0x53, 0x36, 0x56, 0xa8, 0x8b, 0x71, 0x2c, 0x24, 0xd7, 0x9c, 0x04,
	0x8e, 0x8d, 0x2d, 0x1b, 0x17, 0xce, 0xc3, 0xfd, 0x5c, 0x45, 0x8a, 0x34, 0xc1, 0xb9, 0xd0, 0x0b,
	0xd7, 0x11, 0x3d, 0x42, 0x6b, 0x28, 0x66, 0x9c, 0x66, 0x03, 0xfc, 0xf8, 0x44, 0xa5, 0x09, 0x81,
	0x3a, 0xa3, 0x73, 0x0c, 0x2a, 0xed, 0x4a, 0x67, 0x73, 0x60, 0x63, 0xb2, 0x07, 0xff, 0xd2, 0x19,
	0x55, 0x2a, 0xa8, 0xda, 0xa2, 0x4b, 0x0c, 0x99, 0x51, 0x4d, 0x83, 0x5a, 0xbb, 0x66, 0x48, 0x13,
	0x47, 0x47, 0xb0, 0xed, 0xe5, 0x94, 0xe0, 0x4c, 0xa1, 0xa1, 0x26, 0x54, 0x4d, 0xbc, 0x9e, 0x89,
	0xa3, 0x43, 0x68, 0xf5, 0x24, 0x52, 0x8d, 0x2b, 0x2e, 0x8d, 0x0e, 0xa0, 0xd9, 0x67, 0x6f, 0x7c,
	0x15, 0xd2, 0x81, 0x2d, 0x87, 0xe4, 0x77, 0x05, 0xf0, 0xdf, 0x8e, 0x86, 0x2a, 0xa8, 0xd8, 0xa1,
	0x7c, 0x1a, 0x75, 0x61, 0xe7, 0x3a, 0xcb, 0x7a, 0x26, 0xfb, 0xf3, 0xa2, 0x97, 0x5f, 0x55, 0x68,
	0x3e, 0xe7, 0x5e, 0x3e, 0xa1, 0x26, 0xaf, 0xd0, 0x70, 0x4b, 0x92, 0xd3, 0xb8, 0xcc, 0xf0, 0x78,
	0xc9, 0xd5, 0xb0, 0xb3, 0x1e, 0xcc, 0x77, 0xb8, 0x85, 0x86, 0xf3, 0x66, 0x95, 0xf8, 0x92, 0x7b,
	0xe1, 0xae, 0x07, 0xa5, 0x48, 0xe3, 0x3b, 0xf3, 0xb8, 0x64, 0x08, 0x75, 0xe3, 0x0c, 0x39, 0x2e,
	0xd7, 0x28, 0x98, 0x1b, 0x9e, 0xac, 0xc3, 0xf2, 0xe1, 0x1e, 0x60, 0xc3, 0xdb, 0x48, 0xce, 0xca,
	0x7b, 0x7e, 0x58, 0xfd, 0xcb, 0x80, 0x37, 0xfd, 0x97, 0xfb, 0x94, 0x67, 0xe8, 0x0f, 0x52, 0x3e,
	0x4f, 0xec, 0x87, 0x1c, 0x23, 0xbb, 0x18, 0xf3, 0xa4, 0xec, 0xcf, 0x77, 0x6d, 0xa5, 0x50, 0x10,
	0xa3, 0x51, 0xc3, 0x36, 0x5e, 0x7d, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xb5, 0x1d, 0xf2, 0x29,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TrainingSetClient is the client API for TrainingSet service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrainingSetClient interface {
	// Uploads a training/testing document for the specified training set name and known class name
	Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
	// Creates a new training set
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*rpc.Empty, error)
	// Returns information on the specified training est
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
	// Adds a new class to the training set
	AddClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*rpc.Empty, error)
}

type trainingSetClient struct {
	cc *grpc.ClientConn
}

func NewTrainingSetClient(cc *grpc.ClientConn) TrainingSetClient {
	return &trainingSetClient{cc}
}

func (c *trainingSetClient) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	out := new(UploadResponse)
	err := c.cc.Invoke(ctx, "/sajari.bayes.trainingset.TrainingSet/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainingSetClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*rpc.Empty, error) {
	out := new(rpc.Empty)
	err := c.cc.Invoke(ctx, "/sajari.bayes.trainingset.TrainingSet/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainingSetClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/sajari.bayes.trainingset.TrainingSet/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainingSetClient) AddClass(ctx context.Context, in *AddClassRequest, opts ...grpc.CallOption) (*rpc.Empty, error) {
	out := new(rpc.Empty)
	err := c.cc.Invoke(ctx, "/sajari.bayes.trainingset.TrainingSet/AddClass", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainingSetServer is the server API for TrainingSet service.
type TrainingSetServer interface {
	// Uploads a training/testing document for the specified training set name and known class name
	Upload(context.Context, *UploadRequest) (*UploadResponse, error)
	// Creates a new training set
	Create(context.Context, *CreateRequest) (*rpc.Empty, error)
	// Returns information on the specified training est
	Info(context.Context, *InfoRequest) (*InfoResponse, error)
	// Adds a new class to the training set
	AddClass(context.Context, *AddClassRequest) (*rpc.Empty, error)
}

// UnimplementedTrainingSetServer can be embedded to have forward compatible implementations.
type UnimplementedTrainingSetServer struct {
}

func (*UnimplementedTrainingSetServer) Upload(ctx context.Context, req *UploadRequest) (*UploadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upload not implemented")
}
func (*UnimplementedTrainingSetServer) Create(ctx context.Context, req *CreateRequest) (*rpc.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTrainingSetServer) Info(ctx context.Context, req *InfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedTrainingSetServer) AddClass(ctx context.Context, req *AddClassRequest) (*rpc.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddClass not implemented")
}

func RegisterTrainingSetServer(s *grpc.Server, srv TrainingSetServer) {
	s.RegisterService(&_TrainingSet_serviceDesc, srv)
}

func _TrainingSet_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainingSetServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.bayes.trainingset.TrainingSet/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainingSetServer).Upload(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainingSet_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainingSetServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.bayes.trainingset.TrainingSet/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainingSetServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainingSet_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainingSetServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.bayes.trainingset.TrainingSet/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainingSetServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainingSet_AddClass_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddClassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainingSetServer).AddClass(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.bayes.trainingset.TrainingSet/AddClass",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainingSetServer).AddClass(ctx, req.(*AddClassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TrainingSet_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.bayes.trainingset.TrainingSet",
	HandlerType: (*TrainingSetServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Upload",
			Handler:    _TrainingSet_Upload_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TrainingSet_Create_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _TrainingSet_Info_Handler,
		},
		{
			MethodName: "AddClass",
			Handler:    _TrainingSet_AddClass_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/bayes/trainingset/trainingset.proto",
}
