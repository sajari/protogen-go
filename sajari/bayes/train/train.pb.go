// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/bayes/train/train.proto

package bayestrainpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request contains the name of the training set to use to train the model
// and a model name to create from the set. This allows the same training
// set to be continually modified without overwriting previously created
// models
type Request struct {
	// name of the training set to use for training
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// model to save once the training is complete
	Model                string   `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_0618a31566ce66f4, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

// ClassError returns the number of successful and unsuccessful classifications
// for each class in the model. This is useful for determining common error
// classes, which indicates overlapping probability of neighbouring classes
type ClassError struct {
	// Expected is the known class we are expecting to see
	Expected string `protobuf:"bytes,1,opt,name=expected,proto3" json:"expected,omitempty"`
	// Got is the class we actually predicted
	Got string `protobuf:"bytes,2,opt,name=got,proto3" json:"got,omitempty"`
	// Count is the number of expected-got pairs observed
	Count                uint32   `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClassError) Reset()         { *m = ClassError{} }
func (m *ClassError) String() string { return proto.CompactTextString(m) }
func (*ClassError) ProtoMessage()    {}
func (*ClassError) Descriptor() ([]byte, []int) {
	return fileDescriptor_0618a31566ce66f4, []int{1}
}

func (m *ClassError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClassError.Unmarshal(m, b)
}
func (m *ClassError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClassError.Marshal(b, m, deterministic)
}
func (m *ClassError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassError.Merge(m, src)
}
func (m *ClassError) XXX_Size() int {
	return xxx_messageInfo_ClassError.Size(m)
}
func (m *ClassError) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassError.DiscardUnknown(m)
}

var xxx_messageInfo_ClassError proto.InternalMessageInfo

func (m *ClassError) GetExpected() string {
	if m != nil {
		return m.Expected
	}
	return ""
}

func (m *ClassError) GetGot() string {
	if m != nil {
		return m.Got
	}
	return ""
}

func (m *ClassError) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// Response contains information on a training run with regards to accuracy
type Response struct {
	// Errors contains an array of ClassError describing the training success/failure
	Errors []*ClassError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	// Total number of correct classifications across all classes for this
	// training run
	Correct uint32 `protobuf:"varint,2,opt,name=correct,proto3" json:"correct,omitempty"`
	// Total number of incorrect classifications across all classes for this
	// training run
	Incorrect            uint32   `protobuf:"varint,3,opt,name=incorrect,proto3" json:"incorrect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0618a31566ce66f4, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetErrors() []*ClassError {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Response) GetCorrect() uint32 {
	if m != nil {
		return m.Correct
	}
	return 0
}

func (m *Response) GetIncorrect() uint32 {
	if m != nil {
		return m.Incorrect
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "sajari.bayes.train.Request")
	proto.RegisterType((*ClassError)(nil), "sajari.bayes.train.ClassError")
	proto.RegisterType((*Response)(nil), "sajari.bayes.train.Response")
}

func init() { proto.RegisterFile("sajari/bayes/train/train.proto", fileDescriptor_0618a31566ce66f4) }

var fileDescriptor_0618a31566ce66f4 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x25, 0xd6, 0x7e, 0x8d, 0x14, 0x64, 0xf0, 0x10, 0x6a, 0x29, 0xa5, 0xa7, 0x5c, 0x4c, 0xa0,
	0x05, 0x2f, 0xc5, 0x4b, 0xc5, 0x93, 0x17, 0x59, 0x3c, 0x79, 0xdb, 0x6c, 0x86, 0x10, 0x69, 0x76,
	0xe2, 0xee, 0x16, 0xd4, 0x5f, 0x2f, 0xd9, 0x4d, 0xec, 0xa1, 0xbd, 0x2c, 0xef, 0xcd, 0x9b, 0x79,
	0x6f, 0x98, 0x85, 0xa5, 0x95, 0x9f, 0xd2, 0x54, 0x59, 0x2e, 0x7f, 0xc8, 0x66, 0xce, 0xc8, 0x4a,
	0x87, 0x37, 0x6d, 0x0c, 0x3b, 0x46, 0x0c, 0x7a, 0xea, 0xf5, 0xd4, 0x2b, 0xeb, 0x2d, 0x8c, 0x05,
	0x7d, 0x1d, 0xc9, 0x3a, 0x44, 0xb8, 0xd6, 0xb2, 0xa6, 0x38, 0x5a, 0x45, 0xc9, 0x54, 0x78, 0x8c,
	0x77, 0x30, 0xac, 0xb9, 0xa0, 0x43, 0x7c, 0xe5, 0x8b, 0x81, 0xac, 0xdf, 0x00, 0x9e, 0x0f, 0xd2,
	0xda, 0x17, 0x63, 0xd8, 0xe0, 0x1c, 0x26, 0xf4, 0xdd, 0x90, 0x72, 0x54, 0x74, 0xb3, 0xff, 0x1c,
	0x6f, 0x61, 0x50, 0xb2, 0xeb, 0xa6, 0x5b, 0xd8, 0x3a, 0x2a, 0x3e, 0x6a, 0x17, 0x0f, 0x56, 0x51,
	0x32, 0x13, 0x81, 0xac, 0x7f, 0x61, 0x22, 0xc8, 0x36, 0xac, 0x2d, 0xe1, 0x23, 0x8c, 0xa8, 0x35,
	0xb6, 0x71, 0xb4, 0x1a, 0x24, 0x37, 0x9b, 0x65, 0x7a, 0xbe, 0x77, 0x7a, 0xca, 0x17, 0x5d, 0x37,
	0xc6, 0x30, 0x56, 0x6c, 0x0c, 0xa9, 0x90, 0x37, 0x13, 0x3d, 0xc5, 0x05, 0x4c, 0x2b, 0xdd, 0x6b,
	0x21, 0xf7, 0x54, 0xd8, 0xbc, 0xc2, 0xf0, 0xbd, 0xf5, 0xc4, 0x7d, 0x0f, 0xee, 0x2f, 0x25, 0x76,
	0x67, 0x9a, 0x2f, 0x2e, 0x8b, 0x61, 0xf9, 0xfd, 0xd3, 0xc7, 0x4e, 0x71, 0x41, 0x7d, 0x8f, 0xe2,
	0x3a, 0xf3, 0xc7, 0x2f, 0x49, 0x3f, 0x94, 0x9c, 0x9d, 0xff, 0xd0, 0xce, 0x63, 0x0f, 0x9b, 0x3c,
	0x1f, 0xf9, 0xe6, 0xed, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xf5, 0xeb, 0x0d, 0xcb, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TrainClient is the client API for Train service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TrainClient interface {
	// Train takes a set of training and testing documents representing
	// a set of classes and creates a naive bayes model to represent the
	// training set. The response returns the accuracy of the model using
	// the set of testing documents. See TrainingSet for details on how
	// to create a training set.
	Train(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type trainClient struct {
	cc *grpc.ClientConn
}

func NewTrainClient(cc *grpc.ClientConn) TrainClient {
	return &trainClient{cc}
}

func (c *trainClient) Train(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/sajari.bayes.train.Train/Train", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainServer is the server API for Train service.
type TrainServer interface {
	// Train takes a set of training and testing documents representing
	// a set of classes and creates a naive bayes model to represent the
	// training set. The response returns the accuracy of the model using
	// the set of testing documents. See TrainingSet for details on how
	// to create a training set.
	Train(context.Context, *Request) (*Response, error)
}

// UnimplementedTrainServer can be embedded to have forward compatible implementations.
type UnimplementedTrainServer struct {
}

func (*UnimplementedTrainServer) Train(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Train not implemented")
}

func RegisterTrainServer(s *grpc.Server, srv TrainServer) {
	s.RegisterService(&_Train_serviceDesc, srv)
}

func _Train_Train_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainServer).Train(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.bayes.train.Train/Train",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainServer).Train(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Train_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.bayes.train.Train",
	HandlerType: (*TrainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Train",
			Handler:    _Train_Train_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/bayes/train/train.proto",
}
