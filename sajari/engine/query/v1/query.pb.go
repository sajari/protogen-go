// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/engine/query/v1/query.proto

package v1

import (
	engine "code.sajari.com/protogen-go/sajari/engine"
	rpc "code.sajari.com/protogen-go/sajari/rpc"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Instance score mode sets the scoring mode for computing score normalisation.
type SearchRequest_IndexQuery_InstanceScoreMode int32

const (
	// Absolute-normalised scoring sets the maximum possible score to be
	// when the exact terms are matched in every indexed field.
	SearchRequest_IndexQuery_ABS SearchRequest_IndexQuery_InstanceScoreMode = 0
	// Maximum-normalised scoring sets the maximum possible score to the maximally
	// scoring index field.
	SearchRequest_IndexQuery_MAX SearchRequest_IndexQuery_InstanceScoreMode = 1
)

var SearchRequest_IndexQuery_InstanceScoreMode_name = map[int32]string{
	0: "ABS",
	1: "MAX",
}

var SearchRequest_IndexQuery_InstanceScoreMode_value = map[string]int32{
	"ABS": 0,
	"MAX": 1,
}

func (x SearchRequest_IndexQuery_InstanceScoreMode) String() string {
	return proto.EnumName(SearchRequest_IndexQuery_InstanceScoreMode_name, int32(x))
}

func (SearchRequest_IndexQuery_InstanceScoreMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{0, 0, 0}
}

// Enumeration of metric types.
type Aggregate_Metric_Type int32

const (
	// Average field value.
	Aggregate_Metric_AVG Aggregate_Metric_Type = 0
	// Minimum field value.
	Aggregate_Metric_MIN Aggregate_Metric_Type = 1
	// Maximum field value.
	Aggregate_Metric_MAX Aggregate_Metric_Type = 2
	// Sum of all field values.
	Aggregate_Metric_SUM Aggregate_Metric_Type = 3
)

var Aggregate_Metric_Type_name = map[int32]string{
	0: "AVG",
	1: "MIN",
	2: "MAX",
	3: "SUM",
}

var Aggregate_Metric_Type_value = map[string]int32{
	"AVG": 0,
	"MIN": 1,
	"MAX": 2,
	"SUM": 3,
}

func (x Aggregate_Metric_Type) String() string {
	return proto.EnumName(Aggregate_Metric_Type_name, int32(x))
}

func (Aggregate_Metric_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 0, 0}
}

type Aggregate_Date_Interval int32

const (
	Aggregate_Date_YEAR    Aggregate_Date_Interval = 0
	Aggregate_Date_QUARTER Aggregate_Date_Interval = 1
	Aggregate_Date_MONTH   Aggregate_Date_Interval = 2
	Aggregate_Date_WEEK    Aggregate_Date_Interval = 3
	Aggregate_Date_DAY     Aggregate_Date_Interval = 4
	Aggregate_Date_HOUR    Aggregate_Date_Interval = 5
	Aggregate_Date_MINUTE  Aggregate_Date_Interval = 6
	Aggregate_Date_SECOND  Aggregate_Date_Interval = 7
)

var Aggregate_Date_Interval_name = map[int32]string{
	0: "YEAR",
	1: "QUARTER",
	2: "MONTH",
	3: "WEEK",
	4: "DAY",
	5: "HOUR",
	6: "MINUTE",
	7: "SECOND",
}

var Aggregate_Date_Interval_value = map[string]int32{
	"YEAR":    0,
	"QUARTER": 1,
	"MONTH":   2,
	"WEEK":    3,
	"DAY":     4,
	"HOUR":    5,
	"MINUTE":  6,
	"SECOND":  7,
}

func (x Aggregate_Date_Interval) String() string {
	return proto.EnumName(Aggregate_Date_Interval_name, int32(x))
}

func (Aggregate_Date_Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 3, 0}
}

type Aggregate_Analysis_Type int32

const (
	// Number of records with the field set.
	Aggregate_Analysis_COVERAGE Aggregate_Analysis_Type = 0
	// Number of unique values for the field.
	Aggregate_Analysis_CARDINALITY Aggregate_Analysis_Type = 1
	// Average length of string-based fields.
	Aggregate_Analysis_AVG_LEN Aggregate_Analysis_Type = 2
	// Minimum length of string-based fields.
	Aggregate_Analysis_MIN_LEN Aggregate_Analysis_Type = 3
	// Maximum length of string-based fields.
	Aggregate_Analysis_MAX_LEN Aggregate_Analysis_Type = 4
	// Average number of items in repeated fields.
	Aggregate_Analysis_AVG_REPEATED_LEN Aggregate_Analysis_Type = 5
	// Minimum number of items in repeated fields.
	Aggregate_Analysis_MIN_REPEATED_LEN Aggregate_Analysis_Type = 6
	// Maximum number of items in repeated fields.
	Aggregate_Analysis_MAX_REPEATED_LEN Aggregate_Analysis_Type = 7
)

var Aggregate_Analysis_Type_name = map[int32]string{
	0: "COVERAGE",
	1: "CARDINALITY",
	2: "AVG_LEN",
	3: "MIN_LEN",
	4: "MAX_LEN",
	5: "AVG_REPEATED_LEN",
	6: "MIN_REPEATED_LEN",
	7: "MAX_REPEATED_LEN",
}

var Aggregate_Analysis_Type_value = map[string]int32{
	"COVERAGE":         0,
	"CARDINALITY":      1,
	"AVG_LEN":          2,
	"MIN_LEN":          3,
	"MAX_LEN":          4,
	"AVG_REPEATED_LEN": 5,
	"MIN_REPEATED_LEN": 6,
	"MAX_REPEATED_LEN": 7,
}

func (x Aggregate_Analysis_Type) String() string {
	return proto.EnumName(Aggregate_Analysis_Type_name, int32(x))
}

func (Aggregate_Analysis_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 4, 0}
}

// Order is an enumeration that defines orderings for sorting.
type Sort_Order int32

const (
	// Ascending: from least to greatest, for non-numeric
	// fields this means alphabetical order.
	Sort_ASC Sort_Order = 0
	// Descending: from greatest to least, for non-numeric
	// fields this means reverse-alphabetical order.
	Sort_DESC Sort_Order = 1
)

var Sort_Order_name = map[int32]string{
	0: "ASC",
	1: "DESC",
}

var Sort_Order_value = map[string]int32{
	"ASC":  0,
	"DESC": 1,
}

func (x Sort_Order) String() string {
	return proto.EnumName(Sort_Order_name, int32(x))
}

func (Sort_Order) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{8, 0}
}

// Operator is an enumeration of operators.
type Filter_Field_Operator int32

const (
	// Equal value.
	// For STRING fields this is case insensitive.
	Filter_Field_EQUAL_TO Filter_Field_Operator = 0
	// Not equal value.
	// For STRING fields this is case insensitive.
	Filter_Field_NOT_EQUAL_TO             Filter_Field_Operator = 1
	Filter_Field_GREATER_THAN             Filter_Field_Operator = 2
	Filter_Field_GREATER_THAN_OR_EQUAL_TO Filter_Field_Operator = 3
	Filter_Field_LESS_THAN                Filter_Field_Operator = 4
	Filter_Field_LESS_THAN_OR_EQUAL_TO    Filter_Field_Operator = 5
	// For STRING fields this is case insensitive.
	Filter_Field_CONTAINS Filter_Field_Operator = 6
	// For STRING fields this is case insensitive.
	Filter_Field_DOES_NOT_CONTAIN Filter_Field_Operator = 7
	// For STRING fields this is case insensitive.
	Filter_Field_HAS_SUFFIX Filter_Field_Operator = 8
	// For STRING fields this is case insensitive.
	Filter_Field_HAS_PREFIX Filter_Field_Operator = 9
)

var Filter_Field_Operator_name = map[int32]string{
	0: "EQUAL_TO",
	1: "NOT_EQUAL_TO",
	2: "GREATER_THAN",
	3: "GREATER_THAN_OR_EQUAL_TO",
	4: "LESS_THAN",
	5: "LESS_THAN_OR_EQUAL_TO",
	6: "CONTAINS",
	7: "DOES_NOT_CONTAIN",
	8: "HAS_SUFFIX",
	9: "HAS_PREFIX",
}

var Filter_Field_Operator_value = map[string]int32{
	"EQUAL_TO":                 0,
	"NOT_EQUAL_TO":             1,
	"GREATER_THAN":             2,
	"GREATER_THAN_OR_EQUAL_TO": 3,
	"LESS_THAN":                4,
	"LESS_THAN_OR_EQUAL_TO":    5,
	"CONTAINS":                 6,
	"DOES_NOT_CONTAIN":         7,
	"HAS_SUFFIX":               8,
	"HAS_PREFIX":               9,
}

func (x Filter_Field_Operator) String() string {
	return proto.EnumName(Filter_Field_Operator_name, int32(x))
}

func (Filter_Field_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 0, 0}
}

// Region is an enumeration that defines regions for geo-boosting.
type Filter_Geo_Region int32

const (
	// Inside is used to configure a geo filter to be
	// satisfied on all points within the radius.
	Filter_Geo_INSIDE Filter_Geo_Region = 0
	// Outside is used to configure a geo filter to be
	// satisfied to all points outside the radius.
	Filter_Geo_OUTSIDE Filter_Geo_Region = 1
)

var Filter_Geo_Region_name = map[int32]string{
	0: "INSIDE",
	1: "OUTSIDE",
}

var Filter_Geo_Region_value = map[string]int32{
	"INSIDE":  0,
	"OUTSIDE": 1,
}

func (x Filter_Geo_Region) String() string {
	return proto.EnumName(Filter_Geo_Region_name, int32(x))
}

func (Filter_Geo_Region) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 1, 0}
}

// Operator is an enumeration of combination operators.
type Filter_Combinator_Operator int32

const (
	// All of the filters must be satisfied.
	Filter_Combinator_ALL Filter_Combinator_Operator = 0
	// Any of the filters must be satisfied.
	Filter_Combinator_ANY Filter_Combinator_Operator = 1
	// One of the filters (and only one) must be satisfied.
	Filter_Combinator_ONE Filter_Combinator_Operator = 2
	// None of the filters must be satisfied.
	Filter_Combinator_NONE Filter_Combinator_Operator = 3
)

var Filter_Combinator_Operator_name = map[int32]string{
	0: "ALL",
	1: "ANY",
	2: "ONE",
	3: "NONE",
}

var Filter_Combinator_Operator_value = map[string]int32{
	"ALL":  0,
	"ANY":  1,
	"ONE":  2,
	"NONE": 3,
}

func (x Filter_Combinator_Operator) String() string {
	return proto.EnumName(Filter_Combinator_Operator_name, int32(x))
}

func (Filter_Combinator_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 2, 0}
}

// Extension is an enumeration of options which define how to handle
// values which fall outside the interval.
type FieldBoost_Interval_Extension int32

const (
	// Points outside the interval receive no boost.
	FieldBoost_Interval_NONE FieldBoost_Interval_Extension = 0
	// Extend the boost to apply before the defined region of the
	// boosting interval.  All points before the interval are given
	// the same value as the first defined point.
	FieldBoost_Interval_BEFORE FieldBoost_Interval_Extension = 1
	// Extend the boosting to apply after the defined region of the
	// boosting interval.  All points after the interval are given
	// the same value as the last defined point.
	FieldBoost_Interval_AFTER FieldBoost_Interval_Extension = 2
	// Extend the boosting to apply before and after the defined region.
	// All points before the interval are given the same value as the
	// first defined point, and similarly all points after the interval
	// are given the same value as the last defined point.
	//
	// This is a combination of BEFORE and AFTER.
	FieldBoost_Interval_BEFORE_AFTER FieldBoost_Interval_Extension = 3
)

var FieldBoost_Interval_Extension_name = map[int32]string{
	0: "NONE",
	1: "BEFORE",
	2: "AFTER",
	3: "BEFORE_AFTER",
}

var FieldBoost_Interval_Extension_value = map[string]int32{
	"NONE":         0,
	"BEFORE":       1,
	"AFTER":        2,
	"BEFORE_AFTER": 3,
}

func (x FieldBoost_Interval_Extension) String() string {
	return proto.EnumName(FieldBoost_Interval_Extension_name, int32(x))
}

func (FieldBoost_Interval_Extension) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 1, 0}
}

// SearchRequest contains all the parameters to query a collection.
//
// Records in the collection can be queried/scored using a combination of:
// 1. Field values (key-value pairs set by the user).  See Filter, FieldBoost, Sort.
// 2. Terms (extracted from the body of the record, or from string-based indexed fields,
//    i.e. full-text style searching).  See Body, Terms, InstanceBoost.
//
// Quering a collection follows three main steps:
// 1. Select suitable records to include in a result set.
// 2. Rank and sort the records based on scoring and/or sorting rules.
// 3. Compute and aggregate statistical information from the result set.
type SearchRequest struct {
	// Filter is a rule checked against record field values.
	//
	// Only records that match the filter will be included in the result.
	// By default all records are included.
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// IndexQuery is the matching configuration for index-based matching.
	IndexQuery *SearchRequest_IndexQuery `protobuf:"bytes,2,opt,name=index_query,json=indexQuery,proto3" json:"index_query,omitempty"`
	// Feature query is the matching configuration for feature-based matching.
	FeatureQuery *SearchRequest_FeatureQuery `protobuf:"bytes,3,opt,name=feature_query,json=featureQuery,proto3" json:"feature_query,omitempty"`
	// Minimum score threshold sets a lower-bound for the score required for a
	// record to be included in the result set.
	MinScoreThreshold float64 `protobuf:"fixed64,10,opt,name=min_score_threshold,json=minScoreThreshold,proto3" json:"min_score_threshold,omitempty"`
	// Minimum index score threshold sets a lower-bound for the index score required for a
	// record to be included in the result set.
	MinIndexScoreThreshold float64 `protobuf:"fixed64,11,opt,name=min_index_score_threshold,json=minIndexScoreThreshold,proto3" json:"min_index_score_threshold,omitempty"`
	// Offset is the offset to return results from.
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// Limit is the number of results to return.
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// Fields to be returned for each record in the results.
	// By default all fields are returned.
	Fields []string `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`
	// Sort ordering applied to results.
	// Multiple sorts can be applied sequentially.
	// By default all results are ordered by score.
	Sort []*Sort `protobuf:"bytes,7,rep,name=sort,proto3" json:"sort,omitempty"`
	// A set of Aggregates to be run on the result set.
	Aggregates map[string]*Aggregate `protobuf:"bytes,8,rep,name=aggregates,proto3" json:"aggregates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Transforms to be applied to the request before it is run.
	Transforms []*Transform `protobuf:"bytes,9,rep,name=transforms,proto3" json:"transforms,omitempty"`
	// Aggregate filters is a list of aggregate-filter pairs
	AggregateFilters     map[string]*AggregateFilter `protobuf:"bytes,12,rep,name=aggregate_filters,json=aggregateFilters,proto3" json:"aggregate_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{0}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *SearchRequest) GetIndexQuery() *SearchRequest_IndexQuery {
	if m != nil {
		return m.IndexQuery
	}
	return nil
}

func (m *SearchRequest) GetFeatureQuery() *SearchRequest_FeatureQuery {
	if m != nil {
		return m.FeatureQuery
	}
	return nil
}

func (m *SearchRequest) GetMinScoreThreshold() float64 {
	if m != nil {
		return m.MinScoreThreshold
	}
	return 0
}

func (m *SearchRequest) GetMinIndexScoreThreshold() float64 {
	if m != nil {
		return m.MinIndexScoreThreshold
	}
	return 0
}

func (m *SearchRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *SearchRequest) GetSort() []*Sort {
	if m != nil {
		return m.Sort
	}
	return nil
}

func (m *SearchRequest) GetAggregates() map[string]*Aggregate {
	if m != nil {
		return m.Aggregates
	}
	return nil
}

func (m *SearchRequest) GetTransforms() []*Transform {
	if m != nil {
		return m.Transforms
	}
	return nil
}

func (m *SearchRequest) GetAggregateFilters() map[string]*AggregateFilter {
	if m != nil {
		return m.AggregateFilters
	}
	return nil
}

// IndexQuery defines criteria for matching and scoring records based on full-text style
// term matching and record field values.
//
// All boost applied here are multiplicative.
type SearchRequest_IndexQuery struct {
	// Body is a list of weighted free text.
	Body []*Body `protobuf:"bytes,1,rep,name=body,proto3" json:"body,omitempty"`
	// Terms is a list of weighted terms, where terms represent tokenised sequences of text.
	// DEPRECATED: no longer supported, use new indexes property in Body instead.
	Terms []*Term `protobuf:"bytes,2,rep,name=terms,proto3" json:"terms,omitempty"`
	// InstanceBoosts are boost rules computed against a record's term instances.
	//
	// Instance boosting allows callers to boost records which have terms that match
	// a rule.
	InstanceBoosts []*InstanceBoost `protobuf:"bytes,3,rep,name=instance_boosts,json=instanceBoosts,proto3" json:"instance_boosts,omitempty"`
	// Score mode used for computing.
	InstanceScoreMode SearchRequest_IndexQuery_InstanceScoreMode `protobuf:"varint,5,opt,name=instance_score_mode,json=instanceScoreMode,proto3,enum=sajari.engine.query.v1.SearchRequest_IndexQuery_InstanceScoreMode" json:"instance_score_mode,omitempty"`
	// FieldBoosts are rules checked against a record's field values.
	//
	// Field boosting allows callers to boost records which have field values that
	// match a rule.
	FieldBoosts          []*FieldBoost `protobuf:"bytes,4,rep,name=field_boosts,json=fieldBoosts,proto3" json:"field_boosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SearchRequest_IndexQuery) Reset()         { *m = SearchRequest_IndexQuery{} }
func (m *SearchRequest_IndexQuery) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_IndexQuery) ProtoMessage()    {}
func (*SearchRequest_IndexQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{0, 0}
}

func (m *SearchRequest_IndexQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_IndexQuery.Unmarshal(m, b)
}
func (m *SearchRequest_IndexQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_IndexQuery.Marshal(b, m, deterministic)
}
func (m *SearchRequest_IndexQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_IndexQuery.Merge(m, src)
}
func (m *SearchRequest_IndexQuery) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_IndexQuery.Size(m)
}
func (m *SearchRequest_IndexQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_IndexQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_IndexQuery proto.InternalMessageInfo

func (m *SearchRequest_IndexQuery) GetBody() []*Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SearchRequest_IndexQuery) GetTerms() []*Term {
	if m != nil {
		return m.Terms
	}
	return nil
}

func (m *SearchRequest_IndexQuery) GetInstanceBoosts() []*InstanceBoost {
	if m != nil {
		return m.InstanceBoosts
	}
	return nil
}

func (m *SearchRequest_IndexQuery) GetInstanceScoreMode() SearchRequest_IndexQuery_InstanceScoreMode {
	if m != nil {
		return m.InstanceScoreMode
	}
	return SearchRequest_IndexQuery_ABS
}

func (m *SearchRequest_IndexQuery) GetFieldBoosts() []*FieldBoost {
	if m != nil {
		return m.FieldBoosts
	}
	return nil
}

// FeatureQuery defines criteria for boosting
type SearchRequest_FeatureQuery struct {
	// A list of field boosts.
	FieldBoosts          []*SearchRequest_FeatureQuery_FieldBoost `protobuf:"bytes,1,rep,name=field_boosts,json=fieldBoosts,proto3" json:"field_boosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *SearchRequest_FeatureQuery) Reset()         { *m = SearchRequest_FeatureQuery{} }
func (m *SearchRequest_FeatureQuery) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_FeatureQuery) ProtoMessage()    {}
func (*SearchRequest_FeatureQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{0, 1}
}

func (m *SearchRequest_FeatureQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_FeatureQuery.Unmarshal(m, b)
}
func (m *SearchRequest_FeatureQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_FeatureQuery.Marshal(b, m, deterministic)
}
func (m *SearchRequest_FeatureQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_FeatureQuery.Merge(m, src)
}
func (m *SearchRequest_FeatureQuery) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_FeatureQuery.Size(m)
}
func (m *SearchRequest_FeatureQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_FeatureQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_FeatureQuery proto.InternalMessageInfo

func (m *SearchRequest_FeatureQuery) GetFieldBoosts() []*SearchRequest_FeatureQuery_FieldBoost {
	if m != nil {
		return m.FieldBoosts
	}
	return nil
}

// FieldBoost is a boost is a feature boost on a field.
type SearchRequest_FeatureQuery_FieldBoost struct {
	// FieldBoost to make a feature boost.
	FieldBoost *FieldBoost `protobuf:"bytes,1,opt,name=field_boost,json=fieldBoost,proto3" json:"field_boost,omitempty"`
	// Amount this boost will contribute to the overall score of the record.
	//
	// Must be between 0 and 1.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest_FeatureQuery_FieldBoost) Reset()         { *m = SearchRequest_FeatureQuery_FieldBoost{} }
func (m *SearchRequest_FeatureQuery_FieldBoost) String() string { return proto.CompactTextString(m) }
func (*SearchRequest_FeatureQuery_FieldBoost) ProtoMessage()    {}
func (*SearchRequest_FeatureQuery_FieldBoost) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{0, 1, 0}
}

func (m *SearchRequest_FeatureQuery_FieldBoost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost.Unmarshal(m, b)
}
func (m *SearchRequest_FeatureQuery_FieldBoost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost.Marshal(b, m, deterministic)
}
func (m *SearchRequest_FeatureQuery_FieldBoost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost.Merge(m, src)
}
func (m *SearchRequest_FeatureQuery_FieldBoost) XXX_Size() int {
	return xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost.Size(m)
}
func (m *SearchRequest_FeatureQuery_FieldBoost) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest_FeatureQuery_FieldBoost proto.InternalMessageInfo

func (m *SearchRequest_FeatureQuery_FieldBoost) GetFieldBoost() *FieldBoost {
	if m != nil {
		return m.FieldBoost
	}
	return nil
}

func (m *SearchRequest_FeatureQuery_FieldBoost) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// AggregateFilter is an aggregate-filter pair.
type AggregateFilter struct {
	// Aggregate to run.
	Aggregate *Aggregate `protobuf:"bytes,1,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
	// Filter to apply when running the aggregate.
	//
	// NOTE: This filter is run on top of any filter applied
	// to the entire query.
	Filter               *Filter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregateFilter) Reset()         { *m = AggregateFilter{} }
func (m *AggregateFilter) String() string { return proto.CompactTextString(m) }
func (*AggregateFilter) ProtoMessage()    {}
func (*AggregateFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{1}
}

func (m *AggregateFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateFilter.Unmarshal(m, b)
}
func (m *AggregateFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateFilter.Marshal(b, m, deterministic)
}
func (m *AggregateFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateFilter.Merge(m, src)
}
func (m *AggregateFilter) XXX_Size() int {
	return xxx_messageInfo_AggregateFilter.Size(m)
}
func (m *AggregateFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateFilter.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateFilter proto.InternalMessageInfo

func (m *AggregateFilter) GetAggregate() *Aggregate {
	if m != nil {
		return m.Aggregate
	}
	return nil
}

func (m *AggregateFilter) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Transform is a transformation of the search request to be applied before
// the search is run. Transforms are typically used to extract additional
// features or to augment the input query itself.
type Transform struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transform) Reset()         { *m = Transform{} }
func (m *Transform) String() string { return proto.CompactTextString(m) }
func (*Transform) ProtoMessage()    {}
func (*Transform) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{2}
}

func (m *Transform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transform.Unmarshal(m, b)
}
func (m *Transform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transform.Marshal(b, m, deterministic)
}
func (m *Transform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transform.Merge(m, src)
}
func (m *Transform) XXX_Size() int {
	return xxx_messageInfo_Transform.Size(m)
}
func (m *Transform) XXX_DiscardUnknown() {
	xxx_messageInfo_Transform.DiscardUnknown(m)
}

var xxx_messageInfo_Transform proto.InternalMessageInfo

func (m *Transform) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// Term represents a tokenized piece of text (i.e. a single word, or number).
type Term struct {
	// Term string value.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Field that the term originated from.
	Field string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	// Number of positive interactions (uint16) this Term instance has been involved with.
	Pos uint32 `protobuf:"varint,3,opt,name=pos,proto3" json:"pos,omitempty"`
	// Number of negative interactions (uint16) this Term instance has been involved with.
	Neg uint32 `protobuf:"varint,4,opt,name=neg,proto3" json:"neg,omitempty"`
	// Significance of the term (uint16).
	Weight float64 `protobuf:"fixed64,5,opt,name=weight,proto3" json:"weight,omitempty"`
	// Word offset (context) (uint16).
	// The position of this term instance in it's immediate context (i.e. paragraph).
	WordOffset uint32 `protobuf:"varint,6,opt,name=word_offset,json=wordOffset,proto3" json:"word_offset,omitempty"`
	// Paragraph offset (context) (uint16).
	// The paragraph position (a grouping of term instances) in a body string.
	ParaOffset           uint32   `protobuf:"varint,7,opt,name=para_offset,json=paraOffset,proto3" json:"para_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Term) Reset()         { *m = Term{} }
func (m *Term) String() string { return proto.CompactTextString(m) }
func (*Term) ProtoMessage()    {}
func (*Term) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{3}
}

func (m *Term) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Term.Unmarshal(m, b)
}
func (m *Term) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Term.Marshal(b, m, deterministic)
}
func (m *Term) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Term.Merge(m, src)
}
func (m *Term) XXX_Size() int {
	return xxx_messageInfo_Term.Size(m)
}
func (m *Term) XXX_DiscardUnknown() {
	xxx_messageInfo_Term.DiscardUnknown(m)
}

var xxx_messageInfo_Term proto.InternalMessageInfo

func (m *Term) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Term) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Term) GetPos() uint32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Term) GetNeg() uint32 {
	if m != nil {
		return m.Neg
	}
	return 0
}

func (m *Term) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Term) GetWordOffset() uint32 {
	if m != nil {
		return m.WordOffset
	}
	return 0
}

func (m *Term) GetParaOffset() uint32 {
	if m != nil {
		return m.ParaOffset
	}
	return 0
}

// EvaluateRequest contains all parameters necessary to make an Evaluate call.
type EvaluateRequest struct {
	// Search request to run.
	SearchRequest *SearchRequest `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	// Record to search against.
	Key                  *engine.Key `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EvaluateRequest) Reset()         { *m = EvaluateRequest{} }
func (m *EvaluateRequest) String() string { return proto.CompactTextString(m) }
func (*EvaluateRequest) ProtoMessage()    {}
func (*EvaluateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{4}
}

func (m *EvaluateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvaluateRequest.Unmarshal(m, b)
}
func (m *EvaluateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvaluateRequest.Marshal(b, m, deterministic)
}
func (m *EvaluateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvaluateRequest.Merge(m, src)
}
func (m *EvaluateRequest) XXX_Size() int {
	return xxx_messageInfo_EvaluateRequest.Size(m)
}
func (m *EvaluateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EvaluateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EvaluateRequest proto.InternalMessageInfo

func (m *EvaluateRequest) GetSearchRequest() *SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *EvaluateRequest) GetKey() *engine.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type SubstituteRequest struct {
	// Request is used as a template
	SearchRequest *SearchRequest `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	// Record is the record to be substituted in the request.
	Record               map[string]*engine.Value `protobuf:"bytes,2,rep,name=record,proto3" json:"record,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SubstituteRequest) Reset()         { *m = SubstituteRequest{} }
func (m *SubstituteRequest) String() string { return proto.CompactTextString(m) }
func (*SubstituteRequest) ProtoMessage()    {}
func (*SubstituteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{5}
}

func (m *SubstituteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubstituteRequest.Unmarshal(m, b)
}
func (m *SubstituteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubstituteRequest.Marshal(b, m, deterministic)
}
func (m *SubstituteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubstituteRequest.Merge(m, src)
}
func (m *SubstituteRequest) XXX_Size() int {
	return xxx_messageInfo_SubstituteRequest.Size(m)
}
func (m *SubstituteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubstituteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubstituteRequest proto.InternalMessageInfo

func (m *SubstituteRequest) GetSearchRequest() *SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *SubstituteRequest) GetRecord() map[string]*engine.Value {
	if m != nil {
		return m.Record
	}
	return nil
}

// Body is a weighted free text query.
type Body struct {
	// Text (free text).
	//
	// DEPRECATED: use indexes instead.
	// For backwards compatibility this will be converted into terms using the default
	// index spec (Note: it will override any indexes already in the Body).
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Weight (importance) to apply to this text.
	// This value must be 0 <= weight <= 1 but must be set. A value of zero means
	// the text has no value.
	Weight               float64       `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Indexes              []*Body_Index `protobuf:"bytes,3,rep,name=indexes,proto3" json:"indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Body) Reset()         { *m = Body{} }
func (m *Body) String() string { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()    {}
func (*Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6}
}

func (m *Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body.Unmarshal(m, b)
}
func (m *Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body.Marshal(b, m, deterministic)
}
func (m *Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body.Merge(m, src)
}
func (m *Body) XXX_Size() int {
	return xxx_messageInfo_Body.Size(m)
}
func (m *Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Body proto.InternalMessageInfo

func (m *Body) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Body) GetWeight() float64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Body) GetIndexes() []*Body_Index {
	if m != nil {
		return m.Indexes
	}
	return nil
}

type Body_Index struct {
	// The spec of the index.
	Spec string `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// Groups of lists of terms (i.e. paragraphs).
	// DEPRECATED: use term expressions instead.
	Terms                []*Body_Terms     `protobuf:"bytes,2,rep,name=terms,proto3" json:"terms,omitempty"`
	TermExprs            []*Body_TermExprs `protobuf:"bytes,3,rep,name=term_exprs,json=termExprs,proto3" json:"term_exprs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Body_Index) Reset()         { *m = Body_Index{} }
func (m *Body_Index) String() string { return proto.CompactTextString(m) }
func (*Body_Index) ProtoMessage()    {}
func (*Body_Index) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6, 0}
}

func (m *Body_Index) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body_Index.Unmarshal(m, b)
}
func (m *Body_Index) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body_Index.Marshal(b, m, deterministic)
}
func (m *Body_Index) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body_Index.Merge(m, src)
}
func (m *Body_Index) XXX_Size() int {
	return xxx_messageInfo_Body_Index.Size(m)
}
func (m *Body_Index) XXX_DiscardUnknown() {
	xxx_messageInfo_Body_Index.DiscardUnknown(m)
}

var xxx_messageInfo_Body_Index proto.InternalMessageInfo

func (m *Body_Index) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Body_Index) GetTerms() []*Body_Terms {
	if m != nil {
		return m.Terms
	}
	return nil
}

func (m *Body_Index) GetTermExprs() []*Body_TermExprs {
	if m != nil {
		return m.TermExprs
	}
	return nil
}

// Terms is a list of terms.
type Body_Terms struct {
	Terms                []string `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body_Terms) Reset()         { *m = Body_Terms{} }
func (m *Body_Terms) String() string { return proto.CompactTextString(m) }
func (*Body_Terms) ProtoMessage()    {}
func (*Body_Terms) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6, 1}
}

func (m *Body_Terms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body_Terms.Unmarshal(m, b)
}
func (m *Body_Terms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body_Terms.Marshal(b, m, deterministic)
}
func (m *Body_Terms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body_Terms.Merge(m, src)
}
func (m *Body_Terms) XXX_Size() int {
	return xxx_messageInfo_Body_Terms.Size(m)
}
func (m *Body_Terms) XXX_DiscardUnknown() {
	xxx_messageInfo_Body_Terms.DiscardUnknown(m)
}

var xxx_messageInfo_Body_Terms proto.InternalMessageInfo

func (m *Body_Terms) GetTerms() []string {
	if m != nil {
		return m.Terms
	}
	return nil
}

type Body_TermExprs struct {
	TermExprs            []*Body_TermExprs_TermExpr `protobuf:"bytes,1,rep,name=term_exprs,json=termExprs,proto3" json:"term_exprs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Body_TermExprs) Reset()         { *m = Body_TermExprs{} }
func (m *Body_TermExprs) String() string { return proto.CompactTextString(m) }
func (*Body_TermExprs) ProtoMessage()    {}
func (*Body_TermExprs) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6, 2}
}

func (m *Body_TermExprs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body_TermExprs.Unmarshal(m, b)
}
func (m *Body_TermExprs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body_TermExprs.Marshal(b, m, deterministic)
}
func (m *Body_TermExprs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body_TermExprs.Merge(m, src)
}
func (m *Body_TermExprs) XXX_Size() int {
	return xxx_messageInfo_Body_TermExprs.Size(m)
}
func (m *Body_TermExprs) XXX_DiscardUnknown() {
	xxx_messageInfo_Body_TermExprs.DiscardUnknown(m)
}

var xxx_messageInfo_Body_TermExprs proto.InternalMessageInfo

func (m *Body_TermExprs) GetTermExprs() []*Body_TermExprs_TermExpr {
	if m != nil {
		return m.TermExprs
	}
	return nil
}

type Body_TermExprs_TermExpr struct {
	// Text reprenting the term.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Alternatives to the term.
	Alternatives []*Body_TermExprs_TermExpr_Alternatives `protobuf:"bytes,2,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	// Required indicated that the term (or an alternative) must be present
	// in the result for it to appear.
	Required             bool     `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	Phrase               bool     `protobuf:"varint,4,opt,name=phrase,proto3" json:"phrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body_TermExprs_TermExpr) Reset()         { *m = Body_TermExprs_TermExpr{} }
func (m *Body_TermExprs_TermExpr) String() string { return proto.CompactTextString(m) }
func (*Body_TermExprs_TermExpr) ProtoMessage()    {}
func (*Body_TermExprs_TermExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6, 2, 0}
}

func (m *Body_TermExprs_TermExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body_TermExprs_TermExpr.Unmarshal(m, b)
}
func (m *Body_TermExprs_TermExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body_TermExprs_TermExpr.Marshal(b, m, deterministic)
}
func (m *Body_TermExprs_TermExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body_TermExprs_TermExpr.Merge(m, src)
}
func (m *Body_TermExprs_TermExpr) XXX_Size() int {
	return xxx_messageInfo_Body_TermExprs_TermExpr.Size(m)
}
func (m *Body_TermExprs_TermExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_Body_TermExprs_TermExpr.DiscardUnknown(m)
}

var xxx_messageInfo_Body_TermExprs_TermExpr proto.InternalMessageInfo

func (m *Body_TermExprs_TermExpr) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Body_TermExprs_TermExpr) GetAlternatives() []*Body_TermExprs_TermExpr_Alternatives {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *Body_TermExprs_TermExpr) GetRequired() bool {
	if m != nil {
		return m.Required
	}
	return false
}

func (m *Body_TermExprs_TermExpr) GetPhrase() bool {
	if m != nil {
		return m.Phrase
	}
	return false
}

type Body_TermExprs_TermExpr_Alternatives struct {
	// Text representing the alternative.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Weight used to compute the score to attribute to matches for this alternative
	// (relative to a match for the original term).
	Weight               string   `protobuf:"bytes,2,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body_TermExprs_TermExpr_Alternatives) Reset()         { *m = Body_TermExprs_TermExpr_Alternatives{} }
func (m *Body_TermExprs_TermExpr_Alternatives) String() string { return proto.CompactTextString(m) }
func (*Body_TermExprs_TermExpr_Alternatives) ProtoMessage()    {}
func (*Body_TermExprs_TermExpr_Alternatives) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{6, 2, 0, 0}
}

func (m *Body_TermExprs_TermExpr_Alternatives) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives.Unmarshal(m, b)
}
func (m *Body_TermExprs_TermExpr_Alternatives) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives.Marshal(b, m, deterministic)
}
func (m *Body_TermExprs_TermExpr_Alternatives) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives.Merge(m, src)
}
func (m *Body_TermExprs_TermExpr_Alternatives) XXX_Size() int {
	return xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives.Size(m)
}
func (m *Body_TermExprs_TermExpr_Alternatives) XXX_DiscardUnknown() {
	xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives.DiscardUnknown(m)
}

var xxx_messageInfo_Body_TermExprs_TermExpr_Alternatives proto.InternalMessageInfo

func (m *Body_TermExprs_TermExpr_Alternatives) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Body_TermExprs_TermExpr_Alternatives) GetWeight() string {
	if m != nil {
		return m.Weight
	}
	return ""
}

// Aggregate is a statistical query run on the result set of a search.
type Aggregate struct {
	// Types that are valid to be assigned to Aggregate:
	//	*Aggregate_Metric_
	//	*Aggregate_Count_
	//	*Aggregate_Bucket_
	//	*Aggregate_Date_
	//	*Aggregate_Analysis_
	//	*Aggregate_Percentile_
	Aggregate            isAggregate_Aggregate `protobuf_oneof:"aggregate"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Aggregate) Reset()         { *m = Aggregate{} }
func (m *Aggregate) String() string { return proto.CompactTextString(m) }
func (*Aggregate) ProtoMessage()    {}
func (*Aggregate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7}
}

func (m *Aggregate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate.Unmarshal(m, b)
}
func (m *Aggregate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate.Marshal(b, m, deterministic)
}
func (m *Aggregate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate.Merge(m, src)
}
func (m *Aggregate) XXX_Size() int {
	return xxx_messageInfo_Aggregate.Size(m)
}
func (m *Aggregate) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate proto.InternalMessageInfo

type isAggregate_Aggregate interface {
	isAggregate_Aggregate()
}

type Aggregate_Metric_ struct {
	Metric *Aggregate_Metric `protobuf:"bytes,1,opt,name=metric,proto3,oneof"`
}

type Aggregate_Count_ struct {
	Count *Aggregate_Count `protobuf:"bytes,2,opt,name=count,proto3,oneof"`
}

type Aggregate_Bucket_ struct {
	Bucket *Aggregate_Bucket `protobuf:"bytes,3,opt,name=bucket,proto3,oneof"`
}

type Aggregate_Date_ struct {
	Date *Aggregate_Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type Aggregate_Analysis_ struct {
	Analysis *Aggregate_Analysis `protobuf:"bytes,5,opt,name=analysis,proto3,oneof"`
}

type Aggregate_Percentile_ struct {
	Percentile *Aggregate_Percentile `protobuf:"bytes,6,opt,name=percentile,proto3,oneof"`
}

func (*Aggregate_Metric_) isAggregate_Aggregate() {}

func (*Aggregate_Count_) isAggregate_Aggregate() {}

func (*Aggregate_Bucket_) isAggregate_Aggregate() {}

func (*Aggregate_Date_) isAggregate_Aggregate() {}

func (*Aggregate_Analysis_) isAggregate_Aggregate() {}

func (*Aggregate_Percentile_) isAggregate_Aggregate() {}

func (m *Aggregate) GetAggregate() isAggregate_Aggregate {
	if m != nil {
		return m.Aggregate
	}
	return nil
}

func (m *Aggregate) GetMetric() *Aggregate_Metric {
	if x, ok := m.GetAggregate().(*Aggregate_Metric_); ok {
		return x.Metric
	}
	return nil
}

func (m *Aggregate) GetCount() *Aggregate_Count {
	if x, ok := m.GetAggregate().(*Aggregate_Count_); ok {
		return x.Count
	}
	return nil
}

func (m *Aggregate) GetBucket() *Aggregate_Bucket {
	if x, ok := m.GetAggregate().(*Aggregate_Bucket_); ok {
		return x.Bucket
	}
	return nil
}

func (m *Aggregate) GetDate() *Aggregate_Date {
	if x, ok := m.GetAggregate().(*Aggregate_Date_); ok {
		return x.Date
	}
	return nil
}

func (m *Aggregate) GetAnalysis() *Aggregate_Analysis {
	if x, ok := m.GetAggregate().(*Aggregate_Analysis_); ok {
		return x.Analysis
	}
	return nil
}

func (m *Aggregate) GetPercentile() *Aggregate_Percentile {
	if x, ok := m.GetAggregate().(*Aggregate_Percentile_); ok {
		return x.Percentile
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Aggregate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Aggregate_Metric_)(nil),
		(*Aggregate_Count_)(nil),
		(*Aggregate_Bucket_)(nil),
		(*Aggregate_Date_)(nil),
		(*Aggregate_Analysis_)(nil),
		(*Aggregate_Percentile_)(nil),
	}
}

// Metric calculates numerical information from a field.
type Aggregate_Metric struct {
	// Name of the field to run numerical metrics.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// The type of metric to apply.
	Type                 Aggregate_Metric_Type `protobuf:"varint,2,opt,name=type,proto3,enum=sajari.engine.query.v1.Aggregate_Metric_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Aggregate_Metric) Reset()         { *m = Aggregate_Metric{} }
func (m *Aggregate_Metric) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Metric) ProtoMessage()    {}
func (*Aggregate_Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 0}
}

func (m *Aggregate_Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Metric.Unmarshal(m, b)
}
func (m *Aggregate_Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Metric.Marshal(b, m, deterministic)
}
func (m *Aggregate_Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Metric.Merge(m, src)
}
func (m *Aggregate_Metric) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Metric.Size(m)
}
func (m *Aggregate_Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Metric proto.InternalMessageInfo

func (m *Aggregate_Metric) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Aggregate_Metric) GetType() Aggregate_Metric_Type {
	if m != nil {
		return m.Type
	}
	return Aggregate_Metric_AVG
}

// Count records the number of unique values for a field.
type Aggregate_Count struct {
	// Name of the field to count values from.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Minimum number of occurences of a value for it to be included
	// in the aggregate.
	Min int32 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	// Limit the number of returned items.
	Limit                int32    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aggregate_Count) Reset()         { *m = Aggregate_Count{} }
func (m *Aggregate_Count) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Count) ProtoMessage()    {}
func (*Aggregate_Count) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 1}
}

func (m *Aggregate_Count) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Count.Unmarshal(m, b)
}
func (m *Aggregate_Count) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Count.Marshal(b, m, deterministic)
}
func (m *Aggregate_Count) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Count.Merge(m, src)
}
func (m *Aggregate_Count) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Count.Size(m)
}
func (m *Aggregate_Count) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Count.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Count proto.InternalMessageInfo

func (m *Aggregate_Count) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Aggregate_Count) GetMin() int32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Aggregate_Count) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Bucket groups records using filters, Records which satisfy the filter
// will be included in the bucket.
type Aggregate_Bucket struct {
	// List of buckets.
	Buckets              []*Aggregate_Bucket_Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Aggregate_Bucket) Reset()         { *m = Aggregate_Bucket{} }
func (m *Aggregate_Bucket) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Bucket) ProtoMessage()    {}
func (*Aggregate_Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 2}
}

func (m *Aggregate_Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Bucket.Unmarshal(m, b)
}
func (m *Aggregate_Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Bucket.Marshal(b, m, deterministic)
}
func (m *Aggregate_Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Bucket.Merge(m, src)
}
func (m *Aggregate_Bucket) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Bucket.Size(m)
}
func (m *Aggregate_Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Bucket proto.InternalMessageInfo

func (m *Aggregate_Bucket) GetBuckets() []*Aggregate_Bucket_Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

// Bucket represents records which satisfy a Filter.
type Aggregate_Bucket_Bucket struct {
	// Name of the bucket.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter satisfied by records in the bucket.
	Filter               *Filter  `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aggregate_Bucket_Bucket) Reset()         { *m = Aggregate_Bucket_Bucket{} }
func (m *Aggregate_Bucket_Bucket) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Bucket_Bucket) ProtoMessage()    {}
func (*Aggregate_Bucket_Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 2, 0}
}

func (m *Aggregate_Bucket_Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Bucket_Bucket.Unmarshal(m, b)
}
func (m *Aggregate_Bucket_Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Bucket_Bucket.Marshal(b, m, deterministic)
}
func (m *Aggregate_Bucket_Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Bucket_Bucket.Merge(m, src)
}
func (m *Aggregate_Bucket_Bucket) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Bucket_Bucket.Size(m)
}
func (m *Aggregate_Bucket_Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Bucket_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Bucket_Bucket proto.InternalMessageInfo

func (m *Aggregate_Bucket_Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Aggregate_Bucket_Bucket) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Date groups timestamp values into date-interval buckets.
type Aggregate_Date struct {
	// Field to read values from.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Interval to apply to buckets.
	Interval Aggregate_Date_Interval `protobuf:"varint,2,opt,name=interval,proto3,enum=sajari.engine.query.v1.Aggregate_Date_Interval" json:"interval,omitempty"`
	// Multiple of interval value.
	IntervalMultiple     float32  `protobuf:"fixed32,3,opt,name=interval_multiple,json=intervalMultiple,proto3" json:"interval_multiple,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aggregate_Date) Reset()         { *m = Aggregate_Date{} }
func (m *Aggregate_Date) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Date) ProtoMessage()    {}
func (*Aggregate_Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 3}
}

func (m *Aggregate_Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Date.Unmarshal(m, b)
}
func (m *Aggregate_Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Date.Marshal(b, m, deterministic)
}
func (m *Aggregate_Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Date.Merge(m, src)
}
func (m *Aggregate_Date) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Date.Size(m)
}
func (m *Aggregate_Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Date proto.InternalMessageInfo

func (m *Aggregate_Date) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Aggregate_Date) GetInterval() Aggregate_Date_Interval {
	if m != nil {
		return m.Interval
	}
	return Aggregate_Date_YEAR
}

func (m *Aggregate_Date) GetIntervalMultiple() float32 {
	if m != nil {
		return m.IntervalMultiple
	}
	return 0
}

// Analysis performs field-data analysis.
type Aggregate_Analysis struct {
	// Name of the field to run analysis on.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// The of analysis to apply.
	Type                 Aggregate_Analysis_Type `protobuf:"varint,2,opt,name=type,proto3,enum=sajari.engine.query.v1.Aggregate_Analysis_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Aggregate_Analysis) Reset()         { *m = Aggregate_Analysis{} }
func (m *Aggregate_Analysis) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Analysis) ProtoMessage()    {}
func (*Aggregate_Analysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 4}
}

func (m *Aggregate_Analysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Analysis.Unmarshal(m, b)
}
func (m *Aggregate_Analysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Analysis.Marshal(b, m, deterministic)
}
func (m *Aggregate_Analysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Analysis.Merge(m, src)
}
func (m *Aggregate_Analysis) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Analysis.Size(m)
}
func (m *Aggregate_Analysis) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Analysis.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Analysis proto.InternalMessageInfo

func (m *Aggregate_Analysis) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Aggregate_Analysis) GetType() Aggregate_Analysis_Type {
	if m != nil {
		return m.Type
	}
	return Aggregate_Analysis_COVERAGE
}

// Percentile contains the data points returned in a percentile aggregate
// step
type Aggregate_Percentile struct {
	// The percentile data points.
	Percentiles []*Aggregate_Percentile_DataPoint `protobuf:"bytes,1,rep,name=percentiles,proto3" json:"percentiles,omitempty"`
	// The cumulative distribution function (CDF) data points.
	Cdf                  []*Aggregate_Percentile_DataPoint `protobuf:"bytes,2,rep,name=cdf,proto3" json:"cdf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Aggregate_Percentile) Reset()         { *m = Aggregate_Percentile{} }
func (m *Aggregate_Percentile) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Percentile) ProtoMessage()    {}
func (*Aggregate_Percentile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 5}
}

func (m *Aggregate_Percentile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Percentile.Unmarshal(m, b)
}
func (m *Aggregate_Percentile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Percentile.Marshal(b, m, deterministic)
}
func (m *Aggregate_Percentile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Percentile.Merge(m, src)
}
func (m *Aggregate_Percentile) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Percentile.Size(m)
}
func (m *Aggregate_Percentile) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Percentile.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Percentile proto.InternalMessageInfo

func (m *Aggregate_Percentile) GetPercentiles() []*Aggregate_Percentile_DataPoint {
	if m != nil {
		return m.Percentiles
	}
	return nil
}

func (m *Aggregate_Percentile) GetCdf() []*Aggregate_Percentile_DataPoint {
	if m != nil {
		return m.Cdf
	}
	return nil
}

type Aggregate_Percentile_DataPoint struct {
	// The input point.
	Point float64 `protobuf:"fixed64,1,opt,name=point,proto3" json:"point,omitempty"`
	// The corresponding value for the given point.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aggregate_Percentile_DataPoint) Reset()         { *m = Aggregate_Percentile_DataPoint{} }
func (m *Aggregate_Percentile_DataPoint) String() string { return proto.CompactTextString(m) }
func (*Aggregate_Percentile_DataPoint) ProtoMessage()    {}
func (*Aggregate_Percentile_DataPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{7, 5, 0}
}

func (m *Aggregate_Percentile_DataPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aggregate_Percentile_DataPoint.Unmarshal(m, b)
}
func (m *Aggregate_Percentile_DataPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aggregate_Percentile_DataPoint.Marshal(b, m, deterministic)
}
func (m *Aggregate_Percentile_DataPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aggregate_Percentile_DataPoint.Merge(m, src)
}
func (m *Aggregate_Percentile_DataPoint) XXX_Size() int {
	return xxx_messageInfo_Aggregate_Percentile_DataPoint.Size(m)
}
func (m *Aggregate_Percentile_DataPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Aggregate_Percentile_DataPoint.DiscardUnknown(m)
}

var xxx_messageInfo_Aggregate_Percentile_DataPoint proto.InternalMessageInfo

func (m *Aggregate_Percentile_DataPoint) GetPoint() float64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *Aggregate_Percentile_DataPoint) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Sort defines the ordering of result records using.
type Sort struct {
	// Types that are valid to be assigned to Type:
	//	*Sort_Score
	//	*Sort_QueryScore
	//	*Sort_FeatureScore
	//	*Sort_Field
	Type isSort_Type `protobuf_oneof:"type"`
	// Sorting order.
	Order                Sort_Order `protobuf:"varint,5,opt,name=order,proto3,enum=sajari.engine.query.v1.Sort_Order" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sort) Reset()         { *m = Sort{} }
func (m *Sort) String() string { return proto.CompactTextString(m) }
func (*Sort) ProtoMessage()    {}
func (*Sort) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{8}
}

func (m *Sort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sort.Unmarshal(m, b)
}
func (m *Sort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sort.Marshal(b, m, deterministic)
}
func (m *Sort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sort.Merge(m, src)
}
func (m *Sort) XXX_Size() int {
	return xxx_messageInfo_Sort.Size(m)
}
func (m *Sort) XXX_DiscardUnknown() {
	xxx_messageInfo_Sort.DiscardUnknown(m)
}

var xxx_messageInfo_Sort proto.InternalMessageInfo

type isSort_Type interface {
	isSort_Type()
}

type Sort_Score struct {
	Score bool `protobuf:"varint,1,opt,name=score,proto3,oneof"`
}

type Sort_QueryScore struct {
	QueryScore bool `protobuf:"varint,2,opt,name=query_score,json=queryScore,proto3,oneof"`
}

type Sort_FeatureScore struct {
	FeatureScore bool `protobuf:"varint,3,opt,name=feature_score,json=featureScore,proto3,oneof"`
}

type Sort_Field struct {
	Field string `protobuf:"bytes,4,opt,name=field,proto3,oneof"`
}

func (*Sort_Score) isSort_Type() {}

func (*Sort_QueryScore) isSort_Type() {}

func (*Sort_FeatureScore) isSort_Type() {}

func (*Sort_Field) isSort_Type() {}

func (m *Sort) GetType() isSort_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Sort) GetScore() bool {
	if x, ok := m.GetType().(*Sort_Score); ok {
		return x.Score
	}
	return false
}

func (m *Sort) GetQueryScore() bool {
	if x, ok := m.GetType().(*Sort_QueryScore); ok {
		return x.QueryScore
	}
	return false
}

func (m *Sort) GetFeatureScore() bool {
	if x, ok := m.GetType().(*Sort_FeatureScore); ok {
		return x.FeatureScore
	}
	return false
}

func (m *Sort) GetField() string {
	if x, ok := m.GetType().(*Sort_Field); ok {
		return x.Field
	}
	return ""
}

func (m *Sort) GetOrder() Sort_Order {
	if m != nil {
		return m.Order
	}
	return Sort_ASC
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Sort) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Sort_Score)(nil),
		(*Sort_QueryScore)(nil),
		(*Sort_FeatureScore)(nil),
		(*Sort_Field)(nil),
	}
}

// Filter describes a set of conditions to match values in record fields.
// Filters can be nested and combined using Combinators.
type Filter struct {
	// Types that are valid to be assigned to Filter:
	//	*Filter_Combinator_
	//	*Filter_Field_
	//	*Filter_Geo_
	//	*Filter_IsNull
	Filter               isFilter_Filter `protobuf_oneof:"filter"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9}
}

func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

type isFilter_Filter interface {
	isFilter_Filter()
}

type Filter_Combinator_ struct {
	Combinator *Filter_Combinator `protobuf:"bytes,1,opt,name=combinator,proto3,oneof"`
}

type Filter_Field_ struct {
	Field *Filter_Field `protobuf:"bytes,2,opt,name=field,proto3,oneof"`
}

type Filter_Geo_ struct {
	Geo *Filter_Geo `protobuf:"bytes,3,opt,name=geo,proto3,oneof"`
}

type Filter_IsNull struct {
	IsNull string `protobuf:"bytes,4,opt,name=is_null,json=isNull,proto3,oneof"`
}

func (*Filter_Combinator_) isFilter_Filter() {}

func (*Filter_Field_) isFilter_Filter() {}

func (*Filter_Geo_) isFilter_Filter() {}

func (*Filter_IsNull) isFilter_Filter() {}

func (m *Filter) GetFilter() isFilter_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *Filter) GetCombinator() *Filter_Combinator {
	if x, ok := m.GetFilter().(*Filter_Combinator_); ok {
		return x.Combinator
	}
	return nil
}

func (m *Filter) GetField() *Filter_Field {
	if x, ok := m.GetFilter().(*Filter_Field_); ok {
		return x.Field
	}
	return nil
}

func (m *Filter) GetGeo() *Filter_Geo {
	if x, ok := m.GetFilter().(*Filter_Geo_); ok {
		return x.Geo
	}
	return nil
}

func (m *Filter) GetIsNull() string {
	if x, ok := m.GetFilter().(*Filter_IsNull); ok {
		return x.IsNull
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Filter_Combinator_)(nil),
		(*Filter_Field_)(nil),
		(*Filter_Geo_)(nil),
		(*Filter_IsNull)(nil),
	}
}

// Field is a filter which is applied to a record field.
type Filter_Field struct {
	// The comparison operator to use.
	Operator Filter_Field_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=sajari.engine.query.v1.Filter_Field_Operator" json:"operator,omitempty"`
	// Field to take values from.
	Field string `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	// Value to match against.
	Value                *engine.Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Filter_Field) Reset()         { *m = Filter_Field{} }
func (m *Filter_Field) String() string { return proto.CompactTextString(m) }
func (*Filter_Field) ProtoMessage()    {}
func (*Filter_Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 0}
}

func (m *Filter_Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_Field.Unmarshal(m, b)
}
func (m *Filter_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_Field.Marshal(b, m, deterministic)
}
func (m *Filter_Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_Field.Merge(m, src)
}
func (m *Filter_Field) XXX_Size() int {
	return xxx_messageInfo_Filter_Field.Size(m)
}
func (m *Filter_Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_Field proto.InternalMessageInfo

func (m *Filter_Field) GetOperator() Filter_Field_Operator {
	if m != nil {
		return m.Operator
	}
	return Filter_Field_EQUAL_TO
}

func (m *Filter_Field) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Filter_Field) GetValue() *engine.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Geo is a geo-based filter for records with lat/lng fields representing a location.
type Filter_Geo struct {
	// Field containing latitude (degrees).
	FieldLat string `protobuf:"bytes,1,opt,name=field_lat,json=fieldLat,proto3" json:"field_lat,omitempty"`
	// Field containing longitude (degrees).
	FieldLng string `protobuf:"bytes,2,opt,name=field_lng,json=fieldLng,proto3" json:"field_lng,omitempty"`
	// Target latitude (in degrees).
	Lat float64 `protobuf:"fixed64,3,opt,name=lat,proto3" json:"lat,omitempty"`
	// Target longitude (in degrees).
	Lng float64 `protobuf:"fixed64,4,opt,name=lng,proto3" json:"lng,omitempty"`
	// Radius (in km) of matching border (see region).
	Radius float64 `protobuf:"fixed64,5,opt,name=radius,proto3" json:"radius,omitempty"`
	// Region for matching points.
	Region               Filter_Geo_Region `protobuf:"varint,6,opt,name=region,proto3,enum=sajari.engine.query.v1.Filter_Geo_Region" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Filter_Geo) Reset()         { *m = Filter_Geo{} }
func (m *Filter_Geo) String() string { return proto.CompactTextString(m) }
func (*Filter_Geo) ProtoMessage()    {}
func (*Filter_Geo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 1}
}

func (m *Filter_Geo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_Geo.Unmarshal(m, b)
}
func (m *Filter_Geo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_Geo.Marshal(b, m, deterministic)
}
func (m *Filter_Geo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_Geo.Merge(m, src)
}
func (m *Filter_Geo) XXX_Size() int {
	return xxx_messageInfo_Filter_Geo.Size(m)
}
func (m *Filter_Geo) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_Geo.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_Geo proto.InternalMessageInfo

func (m *Filter_Geo) GetFieldLat() string {
	if m != nil {
		return m.FieldLat
	}
	return ""
}

func (m *Filter_Geo) GetFieldLng() string {
	if m != nil {
		return m.FieldLng
	}
	return ""
}

func (m *Filter_Geo) GetLat() float64 {
	if m != nil {
		return m.Lat
	}
	return 0
}

func (m *Filter_Geo) GetLng() float64 {
	if m != nil {
		return m.Lng
	}
	return 0
}

func (m *Filter_Geo) GetRadius() float64 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *Filter_Geo) GetRegion() Filter_Geo_Region {
	if m != nil {
		return m.Region
	}
	return Filter_Geo_INSIDE
}

// Combinator is a filter which combines other filters.
type Filter_Combinator struct {
	// The operator used to combine filters.
	Operator Filter_Combinator_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=sajari.engine.query.v1.Filter_Combinator_Operator" json:"operator,omitempty"`
	// The set of filters to combine using the specified Operator.
	Filters              []*Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Filter_Combinator) Reset()         { *m = Filter_Combinator{} }
func (m *Filter_Combinator) String() string { return proto.CompactTextString(m) }
func (*Filter_Combinator) ProtoMessage()    {}
func (*Filter_Combinator) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{9, 2}
}

func (m *Filter_Combinator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter_Combinator.Unmarshal(m, b)
}
func (m *Filter_Combinator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter_Combinator.Marshal(b, m, deterministic)
}
func (m *Filter_Combinator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter_Combinator.Merge(m, src)
}
func (m *Filter_Combinator) XXX_Size() int {
	return xxx_messageInfo_Filter_Combinator.Size(m)
}
func (m *Filter_Combinator) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter_Combinator.DiscardUnknown(m)
}

var xxx_messageInfo_Filter_Combinator proto.InternalMessageInfo

func (m *Filter_Combinator) GetOperator() Filter_Combinator_Operator {
	if m != nil {
		return m.Operator
	}
	return Filter_Combinator_ALL
}

func (m *Filter_Combinator) GetFilters() []*Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// FieldBoost is used to influence the score of a record based on its field values.
//
// The effect of a FieldBoost is the value that it contributes to the overall score.
// All boost effects are between 0 and 1 inclusive.
type FieldBoost struct {
	// Types that are valid to be assigned to FieldBoost:
	//	*FieldBoost_Filter_
	//	*FieldBoost_Interval_
	//	*FieldBoost_Element_
	//	*FieldBoost_Text_
	//	*FieldBoost_Cosine_
	FieldBoost isFieldBoost_FieldBoost `protobuf_oneof:"field_boost"`
	// Identifier for the boost.
	Identifier           string   `protobuf:"bytes,6,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost) Reset()         { *m = FieldBoost{} }
func (m *FieldBoost) String() string { return proto.CompactTextString(m) }
func (*FieldBoost) ProtoMessage()    {}
func (*FieldBoost) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10}
}

func (m *FieldBoost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost.Unmarshal(m, b)
}
func (m *FieldBoost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost.Marshal(b, m, deterministic)
}
func (m *FieldBoost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost.Merge(m, src)
}
func (m *FieldBoost) XXX_Size() int {
	return xxx_messageInfo_FieldBoost.Size(m)
}
func (m *FieldBoost) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost proto.InternalMessageInfo

type isFieldBoost_FieldBoost interface {
	isFieldBoost_FieldBoost()
}

type FieldBoost_Filter_ struct {
	Filter *FieldBoost_Filter `protobuf:"bytes,1,opt,name=filter,proto3,oneof"`
}

type FieldBoost_Interval_ struct {
	Interval *FieldBoost_Interval `protobuf:"bytes,2,opt,name=interval,proto3,oneof"`
}

type FieldBoost_Element_ struct {
	Element *FieldBoost_Element `protobuf:"bytes,3,opt,name=element,proto3,oneof"`
}

type FieldBoost_Text_ struct {
	Text *FieldBoost_Text `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type FieldBoost_Cosine_ struct {
	Cosine *FieldBoost_Cosine `protobuf:"bytes,5,opt,name=cosine,proto3,oneof"`
}

func (*FieldBoost_Filter_) isFieldBoost_FieldBoost() {}

func (*FieldBoost_Interval_) isFieldBoost_FieldBoost() {}

func (*FieldBoost_Element_) isFieldBoost_FieldBoost() {}

func (*FieldBoost_Text_) isFieldBoost_FieldBoost() {}

func (*FieldBoost_Cosine_) isFieldBoost_FieldBoost() {}

func (m *FieldBoost) GetFieldBoost() isFieldBoost_FieldBoost {
	if m != nil {
		return m.FieldBoost
	}
	return nil
}

func (m *FieldBoost) GetFilter() *FieldBoost_Filter {
	if x, ok := m.GetFieldBoost().(*FieldBoost_Filter_); ok {
		return x.Filter
	}
	return nil
}

func (m *FieldBoost) GetInterval() *FieldBoost_Interval {
	if x, ok := m.GetFieldBoost().(*FieldBoost_Interval_); ok {
		return x.Interval
	}
	return nil
}

func (m *FieldBoost) GetElement() *FieldBoost_Element {
	if x, ok := m.GetFieldBoost().(*FieldBoost_Element_); ok {
		return x.Element
	}
	return nil
}

func (m *FieldBoost) GetText() *FieldBoost_Text {
	if x, ok := m.GetFieldBoost().(*FieldBoost_Text_); ok {
		return x.Text
	}
	return nil
}

func (m *FieldBoost) GetCosine() *FieldBoost_Cosine {
	if x, ok := m.GetFieldBoost().(*FieldBoost_Cosine_); ok {
		return x.Cosine
	}
	return nil
}

func (m *FieldBoost) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldBoost) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldBoost_Filter_)(nil),
		(*FieldBoost_Interval_)(nil),
		(*FieldBoost_Element_)(nil),
		(*FieldBoost_Text_)(nil),
		(*FieldBoost_Cosine_)(nil),
	}
}

// Filter is a boost applied to records which satisfy a filter.
type FieldBoost_Filter struct {
	// Filter which must be satisfied by record.
	Filter *Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Boost value to apply to matching records. Must be >= 0.
	//
	// Value == 0     Matching records get 0 for this boost, everything else gets 1.
	// Value == 1     Matching records get 1 for this boost, everything else gets 0.
	// 0 < Value < 1  Matching records get Value for this boost (and are penalised).
	// Value > 1      Matching records get 1 for this boost, everything else gets 1 / Value.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost_Filter) Reset()         { *m = FieldBoost_Filter{} }
func (m *FieldBoost_Filter) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Filter) ProtoMessage()    {}
func (*FieldBoost_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 0}
}

func (m *FieldBoost_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Filter.Unmarshal(m, b)
}
func (m *FieldBoost_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Filter.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Filter.Merge(m, src)
}
func (m *FieldBoost_Filter) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Filter.Size(m)
}
func (m *FieldBoost_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Filter proto.InternalMessageInfo

func (m *FieldBoost_Filter) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *FieldBoost_Filter) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Interval is a distance-based boost for numeric fields.
//
// It is comprised of a series of points to represent
// any linear distribution across a numerical range.
type FieldBoost_Interval struct {
	// Numerical field to apply the boost.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Points which define intervals boundaries (must be at least 2).
	// Values between internal points are determined linearly.
	Points []*FieldBoost_Interval_Point `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	// Extension defines how this boost behaves outside the interval.
	Extend FieldBoost_Interval_Extension `protobuf:"varint,3,opt,name=extend,proto3,enum=sajari.engine.query.v1.FieldBoost_Interval_Extension" json:"extend,omitempty"`
	// Value to apply to null values.
	NullValue            float64  `protobuf:"fixed64,4,opt,name=NullValue,proto3" json:"NullValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost_Interval) Reset()         { *m = FieldBoost_Interval{} }
func (m *FieldBoost_Interval) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Interval) ProtoMessage()    {}
func (*FieldBoost_Interval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 1}
}

func (m *FieldBoost_Interval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Interval.Unmarshal(m, b)
}
func (m *FieldBoost_Interval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Interval.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Interval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Interval.Merge(m, src)
}
func (m *FieldBoost_Interval) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Interval.Size(m)
}
func (m *FieldBoost_Interval) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Interval.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Interval proto.InternalMessageInfo

func (m *FieldBoost_Interval) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FieldBoost_Interval) GetPoints() []*FieldBoost_Interval_Point {
	if m != nil {
		return m.Points
	}
	return nil
}

func (m *FieldBoost_Interval) GetExtend() FieldBoost_Interval_Extension {
	if m != nil {
		return m.Extend
	}
	return FieldBoost_Interval_NONE
}

func (m *FieldBoost_Interval) GetNullValue() float64 {
	if m != nil {
		return m.NullValue
	}
	return 0
}

// Point is a pair (point, value) which defines the boost value
// at a particiular point.
type FieldBoost_Interval_Point struct {
	// The point to mark the beginning/end of an interval.
	Point float64 `protobuf:"fixed64,1,opt,name=point,proto3" json:"point,omitempty"`
	// The amount to boost by at this Point.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost_Interval_Point) Reset()         { *m = FieldBoost_Interval_Point{} }
func (m *FieldBoost_Interval_Point) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Interval_Point) ProtoMessage()    {}
func (*FieldBoost_Interval_Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 1, 0}
}

func (m *FieldBoost_Interval_Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Interval_Point.Unmarshal(m, b)
}
func (m *FieldBoost_Interval_Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Interval_Point.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Interval_Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Interval_Point.Merge(m, src)
}
func (m *FieldBoost_Interval_Point) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Interval_Point.Size(m)
}
func (m *FieldBoost_Interval_Point) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Interval_Point.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Interval_Point proto.InternalMessageInfo

func (m *FieldBoost_Interval_Point) GetPoint() float64 {
	if m != nil {
		return m.Point
	}
	return 0
}

func (m *FieldBoost_Interval_Point) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Element is an element-based boost for repeated fields.
//
// The boost is evaluated as a portion of a list of values which appear
// in the record field.
//
// Boost effect: between 0 and 1.
type FieldBoost_Element struct {
	// Field containing stringArray.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// List of elements to compare against the field values.
	Elts                 []string `protobuf:"bytes,3,rep,name=elts,proto3" json:"elts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost_Element) Reset()         { *m = FieldBoost_Element{} }
func (m *FieldBoost_Element) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Element) ProtoMessage()    {}
func (*FieldBoost_Element) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 2}
}

func (m *FieldBoost_Element) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Element.Unmarshal(m, b)
}
func (m *FieldBoost_Element) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Element.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Element) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Element.Merge(m, src)
}
func (m *FieldBoost_Element) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Element.Size(m)
}
func (m *FieldBoost_Element) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Element.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Element proto.InternalMessageInfo

func (m *FieldBoost_Element) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FieldBoost_Element) GetElts() []string {
	if m != nil {
		return m.Elts
	}
	return nil
}

// Text represents a text-based boosting for string fields.
//
// Compares text (using a bag of words model) and applies a boost based on the
// number of intersecting words.
//
// Boost effect: between 0 and 1.
type FieldBoost_Text struct {
	// Field containing string data.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Text to compare against the field value.
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldBoost_Text) Reset()         { *m = FieldBoost_Text{} }
func (m *FieldBoost_Text) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Text) ProtoMessage()    {}
func (*FieldBoost_Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 3}
}

func (m *FieldBoost_Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Text.Unmarshal(m, b)
}
func (m *FieldBoost_Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Text.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Text.Merge(m, src)
}
func (m *FieldBoost_Text) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Text.Size(m)
}
func (m *FieldBoost_Text) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Text.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Text proto.InternalMessageInfo

func (m *FieldBoost_Text) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FieldBoost_Text) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type FieldBoost_Cosine struct {
	// Field containing the vector data.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Vector to compute cosine against.
	Vector               []float32 `protobuf:"fixed32,2,rep,packed,name=vector,proto3" json:"vector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FieldBoost_Cosine) Reset()         { *m = FieldBoost_Cosine{} }
func (m *FieldBoost_Cosine) String() string { return proto.CompactTextString(m) }
func (*FieldBoost_Cosine) ProtoMessage()    {}
func (*FieldBoost_Cosine) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{10, 4}
}

func (m *FieldBoost_Cosine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldBoost_Cosine.Unmarshal(m, b)
}
func (m *FieldBoost_Cosine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldBoost_Cosine.Marshal(b, m, deterministic)
}
func (m *FieldBoost_Cosine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldBoost_Cosine.Merge(m, src)
}
func (m *FieldBoost_Cosine) XXX_Size() int {
	return xxx_messageInfo_FieldBoost_Cosine.Size(m)
}
func (m *FieldBoost_Cosine) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldBoost_Cosine.DiscardUnknown(m)
}

var xxx_messageInfo_FieldBoost_Cosine proto.InternalMessageInfo

func (m *FieldBoost_Cosine) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *FieldBoost_Cosine) GetVector() []float32 {
	if m != nil {
		return m.Vector
	}
	return nil
}

// InstanceBoost represents a boosting which is a applied to instances of terms
// in the reverse index.  This type of boost effectively dynamically ranks
// records for a given term
type InstanceBoost struct {
	// Types that are valid to be assigned to InstanceBoost:
	//	*InstanceBoost_Field_
	//	*InstanceBoost_Score_
	InstanceBoost isInstanceBoost_InstanceBoost `protobuf_oneof:"instance_boost"`
	// Identifier for this boost.
	Identifier           string   `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceBoost) Reset()         { *m = InstanceBoost{} }
func (m *InstanceBoost) String() string { return proto.CompactTextString(m) }
func (*InstanceBoost) ProtoMessage()    {}
func (*InstanceBoost) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{11}
}

func (m *InstanceBoost) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceBoost.Unmarshal(m, b)
}
func (m *InstanceBoost) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceBoost.Marshal(b, m, deterministic)
}
func (m *InstanceBoost) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceBoost.Merge(m, src)
}
func (m *InstanceBoost) XXX_Size() int {
	return xxx_messageInfo_InstanceBoost.Size(m)
}
func (m *InstanceBoost) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceBoost.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceBoost proto.InternalMessageInfo

type isInstanceBoost_InstanceBoost interface {
	isInstanceBoost_InstanceBoost()
}

type InstanceBoost_Field_ struct {
	Field *InstanceBoost_Field `protobuf:"bytes,1,opt,name=field,proto3,oneof"`
}

type InstanceBoost_Score_ struct {
	Score *InstanceBoost_Score `protobuf:"bytes,2,opt,name=score,proto3,oneof"`
}

func (*InstanceBoost_Field_) isInstanceBoost_InstanceBoost() {}

func (*InstanceBoost_Score_) isInstanceBoost_InstanceBoost() {}

func (m *InstanceBoost) GetInstanceBoost() isInstanceBoost_InstanceBoost {
	if m != nil {
		return m.InstanceBoost
	}
	return nil
}

func (m *InstanceBoost) GetField() *InstanceBoost_Field {
	if x, ok := m.GetInstanceBoost().(*InstanceBoost_Field_); ok {
		return x.Field
	}
	return nil
}

func (m *InstanceBoost) GetScore() *InstanceBoost_Score {
	if x, ok := m.GetInstanceBoost().(*InstanceBoost_Score_); ok {
		return x.Score
	}
	return nil
}

func (m *InstanceBoost) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InstanceBoost) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InstanceBoost_Field_)(nil),
		(*InstanceBoost_Score_)(nil),
	}
}

// Field is an instance boost which is applied to term instances which originate
// from the given meta field.
type InstanceBoost_Field struct {
	// Field where the term instance was defined.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Spec defines how the index has been created.
	Spec string `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	// Value to boost terms from this field. A value between 0 and 1 will decrease
	// the score, a value greater than 1 will increase the score.
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceBoost_Field) Reset()         { *m = InstanceBoost_Field{} }
func (m *InstanceBoost_Field) String() string { return proto.CompactTextString(m) }
func (*InstanceBoost_Field) ProtoMessage()    {}
func (*InstanceBoost_Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{11, 0}
}

func (m *InstanceBoost_Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceBoost_Field.Unmarshal(m, b)
}
func (m *InstanceBoost_Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceBoost_Field.Marshal(b, m, deterministic)
}
func (m *InstanceBoost_Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceBoost_Field.Merge(m, src)
}
func (m *InstanceBoost_Field) XXX_Size() int {
	return xxx_messageInfo_InstanceBoost_Field.Size(m)
}
func (m *InstanceBoost_Field) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceBoost_Field.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceBoost_Field proto.InternalMessageInfo

func (m *InstanceBoost_Field) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *InstanceBoost_Field) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *InstanceBoost_Field) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Score is an instance boost that boosts term instances using on their individual
// scores based on individual interactions.
type InstanceBoost_Score struct {
	// Threshold defines the value after which learning will be applied.  i.e. Only if a learning
	// score is significant enough to be beyond the threshold will it start to take effect.
	Threshold float64 `protobuf:"fixed64,1,opt,name=threshold,proto3" json:"threshold,omitempty"`
	// MinCount is the minimum number of interactions required to enable scoring.
	MinCount             uint32   `protobuf:"varint,2,opt,name=min_count,json=minCount,proto3" json:"min_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InstanceBoost_Score) Reset()         { *m = InstanceBoost_Score{} }
func (m *InstanceBoost_Score) String() string { return proto.CompactTextString(m) }
func (*InstanceBoost_Score) ProtoMessage()    {}
func (*InstanceBoost_Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{11, 1}
}

func (m *InstanceBoost_Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstanceBoost_Score.Unmarshal(m, b)
}
func (m *InstanceBoost_Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstanceBoost_Score.Marshal(b, m, deterministic)
}
func (m *InstanceBoost_Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstanceBoost_Score.Merge(m, src)
}
func (m *InstanceBoost_Score) XXX_Size() int {
	return xxx_messageInfo_InstanceBoost_Score.Size(m)
}
func (m *InstanceBoost_Score) XXX_DiscardUnknown() {
	xxx_messageInfo_InstanceBoost_Score.DiscardUnknown(m)
}

var xxx_messageInfo_InstanceBoost_Score proto.InternalMessageInfo

func (m *InstanceBoost_Score) GetThreshold() float64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

func (m *InstanceBoost_Score) GetMinCount() uint32 {
	if m != nil {
		return m.MinCount
	}
	return 0
}

// AggregateResponse contains statistical information representing aggregation results
type AggregateResponse struct {
	// Types that are valid to be assigned to AggregateResponse:
	//	*AggregateResponse_Metric_
	//	*AggregateResponse_Count_
	//	*AggregateResponse_Buckets_
	//	*AggregateResponse_Date_
	//	*AggregateResponse_Analysis_
	AggregateResponse    isAggregateResponse_AggregateResponse `protobuf_oneof:"aggregate_response"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *AggregateResponse) Reset()         { *m = AggregateResponse{} }
func (m *AggregateResponse) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse) ProtoMessage()    {}
func (*AggregateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12}
}

func (m *AggregateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse.Unmarshal(m, b)
}
func (m *AggregateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse.Marshal(b, m, deterministic)
}
func (m *AggregateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse.Merge(m, src)
}
func (m *AggregateResponse) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse.Size(m)
}
func (m *AggregateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse proto.InternalMessageInfo

type isAggregateResponse_AggregateResponse interface {
	isAggregateResponse_AggregateResponse()
}

type AggregateResponse_Metric_ struct {
	Metric *AggregateResponse_Metric `protobuf:"bytes,1,opt,name=metric,proto3,oneof"`
}

type AggregateResponse_Count_ struct {
	Count *AggregateResponse_Count `protobuf:"bytes,2,opt,name=count,proto3,oneof"`
}

type AggregateResponse_Buckets_ struct {
	Buckets *AggregateResponse_Buckets `protobuf:"bytes,3,opt,name=buckets,proto3,oneof"`
}

type AggregateResponse_Date_ struct {
	Date *AggregateResponse_Date `protobuf:"bytes,4,opt,name=date,proto3,oneof"`
}

type AggregateResponse_Analysis_ struct {
	Analysis *AggregateResponse_Analysis `protobuf:"bytes,5,opt,name=analysis,proto3,oneof"`
}

func (*AggregateResponse_Metric_) isAggregateResponse_AggregateResponse() {}

func (*AggregateResponse_Count_) isAggregateResponse_AggregateResponse() {}

func (*AggregateResponse_Buckets_) isAggregateResponse_AggregateResponse() {}

func (*AggregateResponse_Date_) isAggregateResponse_AggregateResponse() {}

func (*AggregateResponse_Analysis_) isAggregateResponse_AggregateResponse() {}

func (m *AggregateResponse) GetAggregateResponse() isAggregateResponse_AggregateResponse {
	if m != nil {
		return m.AggregateResponse
	}
	return nil
}

func (m *AggregateResponse) GetMetric() *AggregateResponse_Metric {
	if x, ok := m.GetAggregateResponse().(*AggregateResponse_Metric_); ok {
		return x.Metric
	}
	return nil
}

func (m *AggregateResponse) GetCount() *AggregateResponse_Count {
	if x, ok := m.GetAggregateResponse().(*AggregateResponse_Count_); ok {
		return x.Count
	}
	return nil
}

func (m *AggregateResponse) GetBuckets() *AggregateResponse_Buckets {
	if x, ok := m.GetAggregateResponse().(*AggregateResponse_Buckets_); ok {
		return x.Buckets
	}
	return nil
}

func (m *AggregateResponse) GetDate() *AggregateResponse_Date {
	if x, ok := m.GetAggregateResponse().(*AggregateResponse_Date_); ok {
		return x.Date
	}
	return nil
}

func (m *AggregateResponse) GetAnalysis() *AggregateResponse_Analysis {
	if x, ok := m.GetAggregateResponse().(*AggregateResponse_Analysis_); ok {
		return x.Analysis
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AggregateResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AggregateResponse_Metric_)(nil),
		(*AggregateResponse_Count_)(nil),
		(*AggregateResponse_Buckets_)(nil),
		(*AggregateResponse_Date_)(nil),
		(*AggregateResponse_Analysis_)(nil),
	}
}

// Metric represents the metric type requested, represented by an Enumeration Type.
type AggregateResponse_Metric struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregateResponse_Metric) Reset()         { *m = AggregateResponse_Metric{} }
func (m *AggregateResponse_Metric) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Metric) ProtoMessage()    {}
func (*AggregateResponse_Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 0}
}

func (m *AggregateResponse_Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Metric.Unmarshal(m, b)
}
func (m *AggregateResponse_Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Metric.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Metric.Merge(m, src)
}
func (m *AggregateResponse_Metric) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Metric.Size(m)
}
func (m *AggregateResponse_Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Metric proto.InternalMessageInfo

func (m *AggregateResponse_Metric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

// Count contains the counts for the set of values returned
type AggregateResponse_Count struct {
	Counts               map[string]int32 `protobuf:"bytes,1,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AggregateResponse_Count) Reset()         { *m = AggregateResponse_Count{} }
func (m *AggregateResponse_Count) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Count) ProtoMessage()    {}
func (*AggregateResponse_Count) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 1}
}

func (m *AggregateResponse_Count) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Count.Unmarshal(m, b)
}
func (m *AggregateResponse_Count) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Count.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Count) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Count.Merge(m, src)
}
func (m *AggregateResponse_Count) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Count.Size(m)
}
func (m *AggregateResponse_Count) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Count.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Count proto.InternalMessageInfo

func (m *AggregateResponse_Count) GetCounts() map[string]int32 {
	if m != nil {
		return m.Counts
	}
	return nil
}

// Buckets is a full set of buckets computed in an aggregation.
type AggregateResponse_Buckets struct {
	Buckets              map[string]*AggregateResponse_Buckets_Bucket `protobuf:"bytes,1,rep,name=buckets,proto3" json:"buckets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *AggregateResponse_Buckets) Reset()         { *m = AggregateResponse_Buckets{} }
func (m *AggregateResponse_Buckets) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Buckets) ProtoMessage()    {}
func (*AggregateResponse_Buckets) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 2}
}

func (m *AggregateResponse_Buckets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Buckets.Unmarshal(m, b)
}
func (m *AggregateResponse_Buckets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Buckets.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Buckets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Buckets.Merge(m, src)
}
func (m *AggregateResponse_Buckets) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Buckets.Size(m)
}
func (m *AggregateResponse_Buckets) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Buckets.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Buckets proto.InternalMessageInfo

func (m *AggregateResponse_Buckets) GetBuckets() map[string]*AggregateResponse_Buckets_Bucket {
	if m != nil {
		return m.Buckets
	}
	return nil
}

// Bucket is the result of a bucket aggregate.
type AggregateResponse_Buckets_Bucket struct {
	// Name of bucket.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Number of records in the bucket.
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregateResponse_Buckets_Bucket) Reset()         { *m = AggregateResponse_Buckets_Bucket{} }
func (m *AggregateResponse_Buckets_Bucket) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Buckets_Bucket) ProtoMessage()    {}
func (*AggregateResponse_Buckets_Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 2, 0}
}

func (m *AggregateResponse_Buckets_Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Buckets_Bucket.Unmarshal(m, b)
}
func (m *AggregateResponse_Buckets_Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Buckets_Bucket.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Buckets_Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Buckets_Bucket.Merge(m, src)
}
func (m *AggregateResponse_Buckets_Bucket) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Buckets_Bucket.Size(m)
}
func (m *AggregateResponse_Buckets_Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Buckets_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Buckets_Bucket proto.InternalMessageInfo

func (m *AggregateResponse_Buckets_Bucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AggregateResponse_Buckets_Bucket) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AggregateResponse_Date struct {
	Dates                map[string]int32 `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AggregateResponse_Date) Reset()         { *m = AggregateResponse_Date{} }
func (m *AggregateResponse_Date) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Date) ProtoMessage()    {}
func (*AggregateResponse_Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 3}
}

func (m *AggregateResponse_Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Date.Unmarshal(m, b)
}
func (m *AggregateResponse_Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Date.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Date.Merge(m, src)
}
func (m *AggregateResponse_Date) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Date.Size(m)
}
func (m *AggregateResponse_Date) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Date.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Date proto.InternalMessageInfo

func (m *AggregateResponse_Date) GetDates() map[string]int32 {
	if m != nil {
		return m.Dates
	}
	return nil
}

type AggregateResponse_Analysis struct {
	// Types that are valid to be assigned to Value:
	//	*AggregateResponse_Analysis_Coverage
	//	*AggregateResponse_Analysis_Cardinality
	//	*AggregateResponse_Analysis_MinLen
	//	*AggregateResponse_Analysis_MaxLen
	//	*AggregateResponse_Analysis_AvgLen
	Value                isAggregateResponse_Analysis_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *AggregateResponse_Analysis) Reset()         { *m = AggregateResponse_Analysis{} }
func (m *AggregateResponse_Analysis) String() string { return proto.CompactTextString(m) }
func (*AggregateResponse_Analysis) ProtoMessage()    {}
func (*AggregateResponse_Analysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{12, 4}
}

func (m *AggregateResponse_Analysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregateResponse_Analysis.Unmarshal(m, b)
}
func (m *AggregateResponse_Analysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregateResponse_Analysis.Marshal(b, m, deterministic)
}
func (m *AggregateResponse_Analysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregateResponse_Analysis.Merge(m, src)
}
func (m *AggregateResponse_Analysis) XXX_Size() int {
	return xxx_messageInfo_AggregateResponse_Analysis.Size(m)
}
func (m *AggregateResponse_Analysis) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregateResponse_Analysis.DiscardUnknown(m)
}

var xxx_messageInfo_AggregateResponse_Analysis proto.InternalMessageInfo

type isAggregateResponse_Analysis_Value interface {
	isAggregateResponse_Analysis_Value()
}

type AggregateResponse_Analysis_Coverage struct {
	Coverage int32 `protobuf:"varint,1,opt,name=Coverage,proto3,oneof"`
}

type AggregateResponse_Analysis_Cardinality struct {
	Cardinality int32 `protobuf:"varint,2,opt,name=Cardinality,proto3,oneof"`
}

type AggregateResponse_Analysis_MinLen struct {
	MinLen int32 `protobuf:"varint,3,opt,name=MinLen,proto3,oneof"`
}

type AggregateResponse_Analysis_MaxLen struct {
	MaxLen int32 `protobuf:"varint,4,opt,name=MaxLen,proto3,oneof"`
}

type AggregateResponse_Analysis_AvgLen struct {
	AvgLen float32 `protobuf:"fixed32,5,opt,name=AvgLen,proto3,oneof"`
}

func (*AggregateResponse_Analysis_Coverage) isAggregateResponse_Analysis_Value() {}

func (*AggregateResponse_Analysis_Cardinality) isAggregateResponse_Analysis_Value() {}

func (*AggregateResponse_Analysis_MinLen) isAggregateResponse_Analysis_Value() {}

func (*AggregateResponse_Analysis_MaxLen) isAggregateResponse_Analysis_Value() {}

func (*AggregateResponse_Analysis_AvgLen) isAggregateResponse_Analysis_Value() {}

func (m *AggregateResponse_Analysis) GetValue() isAggregateResponse_Analysis_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *AggregateResponse_Analysis) GetCoverage() int32 {
	if x, ok := m.GetValue().(*AggregateResponse_Analysis_Coverage); ok {
		return x.Coverage
	}
	return 0
}

func (m *AggregateResponse_Analysis) GetCardinality() int32 {
	if x, ok := m.GetValue().(*AggregateResponse_Analysis_Cardinality); ok {
		return x.Cardinality
	}
	return 0
}

func (m *AggregateResponse_Analysis) GetMinLen() int32 {
	if x, ok := m.GetValue().(*AggregateResponse_Analysis_MinLen); ok {
		return x.MinLen
	}
	return 0
}

func (m *AggregateResponse_Analysis) GetMaxLen() int32 {
	if x, ok := m.GetValue().(*AggregateResponse_Analysis_MaxLen); ok {
		return x.MaxLen
	}
	return 0
}

func (m *AggregateResponse_Analysis) GetAvgLen() float32 {
	if x, ok := m.GetValue().(*AggregateResponse_Analysis_AvgLen); ok {
		return x.AvgLen
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*AggregateResponse_Analysis) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*AggregateResponse_Analysis_Coverage)(nil),
		(*AggregateResponse_Analysis_Cardinality)(nil),
		(*AggregateResponse_Analysis_MinLen)(nil),
		(*AggregateResponse_Analysis_MaxLen)(nil),
		(*AggregateResponse_Analysis_AvgLen)(nil),
	}
}

// SearchResponse contains all data in response to a search request.
type SearchResponse struct {
	// Number of reverse indexes read during the search request.
	Reads int64 `protobuf:"varint,1,opt,name=reads,proto3" json:"reads,omitempty"`
	// Total number of results.
	TotalResults int64 `protobuf:"varint,2,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	// Time taken to perform query.
	Time string `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Aggregates returned by query.
	Aggregates map[string]*AggregateResponse `protobuf:"bytes,4,rep,name=aggregates,proto3" json:"aggregates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Aggregates run with filters.
	AggregateFilters map[string]*AggregateResponse `protobuf:"bytes,6,rep,name=aggregate_filters,json=aggregateFilters,proto3" json:"aggregate_filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Results returned by query.
	Results              []*Result `protobuf:"bytes,5,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{13}
}

func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (m *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(m, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetReads() int64 {
	if m != nil {
		return m.Reads
	}
	return 0
}

func (m *SearchResponse) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

func (m *SearchResponse) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *SearchResponse) GetAggregates() map[string]*AggregateResponse {
	if m != nil {
		return m.Aggregates
	}
	return nil
}

func (m *SearchResponse) GetAggregateFilters() map[string]*AggregateResponse {
	if m != nil {
		return m.AggregateFilters
	}
	return nil
}

func (m *SearchResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

// Result is a record as represented in a search result.
type Result struct {
	// Meta data in field-value pairs.
	Values map[string]*engine.Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Score (normalised) attributed to this record.
	// Combines the index score and feature score.
	Score float64 `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	// Index score.
	IndexScore           float64  `protobuf:"fixed64,3,opt,name=index_score,json=indexScore,proto3" json:"index_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{14}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetValues() map[string]*engine.Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Result) GetScore() float64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Result) GetIndexScore() float64 {
	if m != nil {
		return m.IndexScore
	}
	return 0
}

// AnalyseRequest applies a search request to a record.
type AnalyseRequest struct {
	// Request is a search request which should be applied against a record
	// in the store.
	SearchRequest *SearchRequest `protobuf:"bytes,1,opt,name=search_request,json=searchRequest,proto3" json:"search_request,omitempty"`
	// Key is a unique identifier corresponding to a record in the store.
	Keys                 []*engine.Key `protobuf:"bytes,2,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AnalyseRequest) Reset()         { *m = AnalyseRequest{} }
func (m *AnalyseRequest) String() string { return proto.CompactTextString(m) }
func (*AnalyseRequest) ProtoMessage()    {}
func (*AnalyseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{15}
}

func (m *AnalyseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyseRequest.Unmarshal(m, b)
}
func (m *AnalyseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyseRequest.Marshal(b, m, deterministic)
}
func (m *AnalyseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyseRequest.Merge(m, src)
}
func (m *AnalyseRequest) XXX_Size() int {
	return xxx_messageInfo_AnalyseRequest.Size(m)
}
func (m *AnalyseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyseRequest proto.InternalMessageInfo

func (m *AnalyseRequest) GetSearchRequest() *SearchRequest {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

func (m *AnalyseRequest) GetKeys() []*engine.Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

// AnalyseResponse contains the analysis of the record against the query
// request.
type AnalyseResponse struct {
	// Terms is the list of intersecting terms between the record and the
	// search query request.
	Terms []*AnalyseResponse_Terms `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	// Status corresponding to each key in the request.
	Status               []*rpc.Status `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AnalyseResponse) Reset()         { *m = AnalyseResponse{} }
func (m *AnalyseResponse) String() string { return proto.CompactTextString(m) }
func (*AnalyseResponse) ProtoMessage()    {}
func (*AnalyseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{16}
}

func (m *AnalyseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyseResponse.Unmarshal(m, b)
}
func (m *AnalyseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyseResponse.Marshal(b, m, deterministic)
}
func (m *AnalyseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyseResponse.Merge(m, src)
}
func (m *AnalyseResponse) XXX_Size() int {
	return xxx_messageInfo_AnalyseResponse.Size(m)
}
func (m *AnalyseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyseResponse proto.InternalMessageInfo

func (m *AnalyseResponse) GetTerms() []*AnalyseResponse_Terms {
	if m != nil {
		return m.Terms
	}
	return nil
}

func (m *AnalyseResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Terms is a list of terms which overlap for a particular record.
type AnalyseResponse_Terms struct {
	Terms                []string `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyseResponse_Terms) Reset()         { *m = AnalyseResponse_Terms{} }
func (m *AnalyseResponse_Terms) String() string { return proto.CompactTextString(m) }
func (*AnalyseResponse_Terms) ProtoMessage()    {}
func (*AnalyseResponse_Terms) Descriptor() ([]byte, []int) {
	return fileDescriptor_e58578710fd465a6, []int{16, 0}
}

func (m *AnalyseResponse_Terms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyseResponse_Terms.Unmarshal(m, b)
}
func (m *AnalyseResponse_Terms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyseResponse_Terms.Marshal(b, m, deterministic)
}
func (m *AnalyseResponse_Terms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyseResponse_Terms.Merge(m, src)
}
func (m *AnalyseResponse_Terms) XXX_Size() int {
	return xxx_messageInfo_AnalyseResponse_Terms.Size(m)
}
func (m *AnalyseResponse_Terms) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyseResponse_Terms.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyseResponse_Terms proto.InternalMessageInfo

func (m *AnalyseResponse_Terms) GetTerms() []string {
	if m != nil {
		return m.Terms
	}
	return nil
}

func init() {
	proto.RegisterEnum("sajari.engine.query.v1.SearchRequest_IndexQuery_InstanceScoreMode", SearchRequest_IndexQuery_InstanceScoreMode_name, SearchRequest_IndexQuery_InstanceScoreMode_value)
	proto.RegisterEnum("sajari.engine.query.v1.Aggregate_Metric_Type", Aggregate_Metric_Type_name, Aggregate_Metric_Type_value)
	proto.RegisterEnum("sajari.engine.query.v1.Aggregate_Date_Interval", Aggregate_Date_Interval_name, Aggregate_Date_Interval_value)
	proto.RegisterEnum("sajari.engine.query.v1.Aggregate_Analysis_Type", Aggregate_Analysis_Type_name, Aggregate_Analysis_Type_value)
	proto.RegisterEnum("sajari.engine.query.v1.Sort_Order", Sort_Order_name, Sort_Order_value)
	proto.RegisterEnum("sajari.engine.query.v1.Filter_Field_Operator", Filter_Field_Operator_name, Filter_Field_Operator_value)
	proto.RegisterEnum("sajari.engine.query.v1.Filter_Geo_Region", Filter_Geo_Region_name, Filter_Geo_Region_value)
	proto.RegisterEnum("sajari.engine.query.v1.Filter_Combinator_Operator", Filter_Combinator_Operator_name, Filter_Combinator_Operator_value)
	proto.RegisterEnum("sajari.engine.query.v1.FieldBoost_Interval_Extension", FieldBoost_Interval_Extension_name, FieldBoost_Interval_Extension_value)
	proto.RegisterType((*SearchRequest)(nil), "sajari.engine.query.v1.SearchRequest")
	proto.RegisterMapType((map[string]*AggregateFilter)(nil), "sajari.engine.query.v1.SearchRequest.AggregateFiltersEntry")
	proto.RegisterMapType((map[string]*Aggregate)(nil), "sajari.engine.query.v1.SearchRequest.AggregatesEntry")
	proto.RegisterType((*SearchRequest_IndexQuery)(nil), "sajari.engine.query.v1.SearchRequest.IndexQuery")
	proto.RegisterType((*SearchRequest_FeatureQuery)(nil), "sajari.engine.query.v1.SearchRequest.FeatureQuery")
	proto.RegisterType((*SearchRequest_FeatureQuery_FieldBoost)(nil), "sajari.engine.query.v1.SearchRequest.FeatureQuery.FieldBoost")
	proto.RegisterType((*AggregateFilter)(nil), "sajari.engine.query.v1.AggregateFilter")
	proto.RegisterType((*Transform)(nil), "sajari.engine.query.v1.Transform")
	proto.RegisterType((*Term)(nil), "sajari.engine.query.v1.Term")
	proto.RegisterType((*EvaluateRequest)(nil), "sajari.engine.query.v1.EvaluateRequest")
	proto.RegisterType((*SubstituteRequest)(nil), "sajari.engine.query.v1.SubstituteRequest")
	proto.RegisterMapType((map[string]*engine.Value)(nil), "sajari.engine.query.v1.SubstituteRequest.RecordEntry")
	proto.RegisterType((*Body)(nil), "sajari.engine.query.v1.Body")
	proto.RegisterType((*Body_Index)(nil), "sajari.engine.query.v1.Body.Index")
	proto.RegisterType((*Body_Terms)(nil), "sajari.engine.query.v1.Body.Terms")
	proto.RegisterType((*Body_TermExprs)(nil), "sajari.engine.query.v1.Body.TermExprs")
	proto.RegisterType((*Body_TermExprs_TermExpr)(nil), "sajari.engine.query.v1.Body.TermExprs.TermExpr")
	proto.RegisterType((*Body_TermExprs_TermExpr_Alternatives)(nil), "sajari.engine.query.v1.Body.TermExprs.TermExpr.Alternatives")
	proto.RegisterType((*Aggregate)(nil), "sajari.engine.query.v1.Aggregate")
	proto.RegisterType((*Aggregate_Metric)(nil), "sajari.engine.query.v1.Aggregate.Metric")
	proto.RegisterType((*Aggregate_Count)(nil), "sajari.engine.query.v1.Aggregate.Count")
	proto.RegisterType((*Aggregate_Bucket)(nil), "sajari.engine.query.v1.Aggregate.Bucket")
	proto.RegisterType((*Aggregate_Bucket_Bucket)(nil), "sajari.engine.query.v1.Aggregate.Bucket.Bucket")
	proto.RegisterType((*Aggregate_Date)(nil), "sajari.engine.query.v1.Aggregate.Date")
	proto.RegisterType((*Aggregate_Analysis)(nil), "sajari.engine.query.v1.Aggregate.Analysis")
	proto.RegisterType((*Aggregate_Percentile)(nil), "sajari.engine.query.v1.Aggregate.Percentile")
	proto.RegisterType((*Aggregate_Percentile_DataPoint)(nil), "sajari.engine.query.v1.Aggregate.Percentile.DataPoint")
	proto.RegisterType((*Sort)(nil), "sajari.engine.query.v1.Sort")
	proto.RegisterType((*Filter)(nil), "sajari.engine.query.v1.Filter")
	proto.RegisterType((*Filter_Field)(nil), "sajari.engine.query.v1.Filter.Field")
	proto.RegisterType((*Filter_Geo)(nil), "sajari.engine.query.v1.Filter.Geo")
	proto.RegisterType((*Filter_Combinator)(nil), "sajari.engine.query.v1.Filter.Combinator")
	proto.RegisterType((*FieldBoost)(nil), "sajari.engine.query.v1.FieldBoost")
	proto.RegisterType((*FieldBoost_Filter)(nil), "sajari.engine.query.v1.FieldBoost.Filter")
	proto.RegisterType((*FieldBoost_Interval)(nil), "sajari.engine.query.v1.FieldBoost.Interval")
	proto.RegisterType((*FieldBoost_Interval_Point)(nil), "sajari.engine.query.v1.FieldBoost.Interval.Point")
	proto.RegisterType((*FieldBoost_Element)(nil), "sajari.engine.query.v1.FieldBoost.Element")
	proto.RegisterType((*FieldBoost_Text)(nil), "sajari.engine.query.v1.FieldBoost.Text")
	proto.RegisterType((*FieldBoost_Cosine)(nil), "sajari.engine.query.v1.FieldBoost.Cosine")
	proto.RegisterType((*InstanceBoost)(nil), "sajari.engine.query.v1.InstanceBoost")
	proto.RegisterType((*InstanceBoost_Field)(nil), "sajari.engine.query.v1.InstanceBoost.Field")
	proto.RegisterType((*InstanceBoost_Score)(nil), "sajari.engine.query.v1.InstanceBoost.Score")
	proto.RegisterType((*AggregateResponse)(nil), "sajari.engine.query.v1.AggregateResponse")
	proto.RegisterType((*AggregateResponse_Metric)(nil), "sajari.engine.query.v1.AggregateResponse.Metric")
	proto.RegisterType((*AggregateResponse_Count)(nil), "sajari.engine.query.v1.AggregateResponse.Count")
	proto.RegisterMapType((map[string]int32)(nil), "sajari.engine.query.v1.AggregateResponse.Count.CountsEntry")
	proto.RegisterType((*AggregateResponse_Buckets)(nil), "sajari.engine.query.v1.AggregateResponse.Buckets")
	proto.RegisterMapType((map[string]*AggregateResponse_Buckets_Bucket)(nil), "sajari.engine.query.v1.AggregateResponse.Buckets.BucketsEntry")
	proto.RegisterType((*AggregateResponse_Buckets_Bucket)(nil), "sajari.engine.query.v1.AggregateResponse.Buckets.Bucket")
	proto.RegisterType((*AggregateResponse_Date)(nil), "sajari.engine.query.v1.AggregateResponse.Date")
	proto.RegisterMapType((map[string]int32)(nil), "sajari.engine.query.v1.AggregateResponse.Date.DatesEntry")
	proto.RegisterType((*AggregateResponse_Analysis)(nil), "sajari.engine.query.v1.AggregateResponse.Analysis")
	proto.RegisterType((*SearchResponse)(nil), "sajari.engine.query.v1.SearchResponse")
	proto.RegisterMapType((map[string]*AggregateResponse)(nil), "sajari.engine.query.v1.SearchResponse.AggregateFiltersEntry")
	proto.RegisterMapType((map[string]*AggregateResponse)(nil), "sajari.engine.query.v1.SearchResponse.AggregatesEntry")
	proto.RegisterType((*Result)(nil), "sajari.engine.query.v1.Result")
	proto.RegisterMapType((map[string]*engine.Value)(nil), "sajari.engine.query.v1.Result.ValuesEntry")
	proto.RegisterType((*AnalyseRequest)(nil), "sajari.engine.query.v1.AnalyseRequest")
	proto.RegisterType((*AnalyseResponse)(nil), "sajari.engine.query.v1.AnalyseResponse")
	proto.RegisterType((*AnalyseResponse_Terms)(nil), "sajari.engine.query.v1.AnalyseResponse.Terms")
}

func init() {
	proto.RegisterFile("sajari/engine/query/v1/query.proto", fileDescriptor_e58578710fd465a6)
}

var fileDescriptor_e58578710fd465a6 = []byte{
	// 3042 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x3a, 0xcd, 0x93, 0x1b, 0x47,
	0xf5, 0x3b, 0xfa, 0x18, 0x49, 0x4f, 0xbb, 0xeb, 0x71, 0xc7, 0xf1, 0x4f, 0x9e, 0x9f, 0x49, 0x9c,
	0x21, 0x76, 0x6c, 0x87, 0x68, 0x6d, 0x05, 0x1c, 0x27, 0x71, 0x92, 0x92, 0xb4, 0xb3, 0x2b, 0xe1,
	0x5d, 0xc9, 0x6e, 0x69, 0x1d, 0x3b, 0x54, 0xa1, 0x8c, 0xa5, 0x5e, 0xed, 0x60, 0x69, 0x46, 0x99,
	0x19, 0x6d, 0xbc, 0x37, 0x38, 0xc0, 0x81, 0xaa, 0x50, 0xc5, 0x89, 0x0b, 0x1c, 0x28, 0xb8, 0xe4,
	0x40, 0x15, 0x27, 0xfe, 0x05, 0xb8, 0xc0, 0x89, 0x03, 0x5c, 0x42, 0x71, 0xe4, 0xc6, 0x89, 0xaa,
	0x9c, 0xa0, 0xfa, 0x63, 0xbe, 0x64, 0x7d, 0xcc, 0xba, 0x92, 0xcb, 0x6e, 0xbf, 0xd7, 0xef, 0xbd,
	0xee, 0xe9, 0x7e, 0xdf, 0x2d, 0xd0, 0x5c, 0xe3, 0x07, 0x86, 0x63, 0x6e, 0x11, 0x6b, 0x68, 0x5a,
	0x64, 0xeb, 0x93, 0x29, 0x71, 0x4e, 0xb6, 0x8e, 0x6f, 0xf2, 0x41, 0x79, 0xe2, 0xd8, 0x9e, 0x8d,
	0xce, 0x73, 0x9a, 0x32, 0xa7, 0x29, 0xf3, 0xa9, 0xe3, 0x9b, 0xea, 0x85, 0x38, 0xef, 0xb1, 0x31,
	0x9a, 0x12, 0xce, 0xa2, 0xfe, 0x5f, 0x7c, 0xea, 0x09, 0x39, 0x99, 0x99, 0x70, 0x26, 0xfd, 0x2d,
	0xd7, 0x33, 0xbc, 0xa9, 0xcb, 0x27, 0xb4, 0xdf, 0xad, 0xc3, 0x46, 0x87, 0x18, 0x4e, 0xff, 0x08,
	0x93, 0x4f, 0xa6, 0xc4, 0xf5, 0xd0, 0x2d, 0x90, 0x0f, 0xcd, 0x91, 0x47, 0x9c, 0x92, 0x74, 0x49,
	0xba, 0x5a, 0xac, 0xbc, 0x54, 0x9e, 0xbf, 0x8f, 0xf2, 0x0e, 0xa3, 0xc2, 0x82, 0x1a, 0xdd, 0x87,
	0xa2, 0x69, 0x0d, 0xc8, 0xd3, 0x1e, 0x23, 0x28, 0xa5, 0x18, 0xf3, 0x8d, 0x45, 0xcc, 0xb1, 0x35,
	0xcb, 0x4d, 0xca, 0x78, 0x9f, 0xce, 0x61, 0x30, 0x83, 0x31, 0xfa, 0x10, 0x36, 0x0e, 0x89, 0xe1,
	0x4d, 0x1d, 0x22, 0x84, 0xa6, 0x99, 0xd0, 0x4a, 0x32, 0xa1, 0x3b, 0x9c, 0x95, 0x8b, 0x5d, 0x3f,
	0x8c, 0x40, 0xa8, 0x0c, 0x2f, 0x8c, 0x4d, 0xab, 0xe7, 0xf6, 0x6d, 0x87, 0xf4, 0xbc, 0x23, 0x87,
	0xb8, 0x47, 0xf6, 0x68, 0x50, 0x82, 0x4b, 0xd2, 0x55, 0x09, 0x9f, 0x1d, 0x9b, 0x56, 0x87, 0xce,
	0x74, 0xfd, 0x09, 0xf4, 0x36, 0x5c, 0xa0, 0xf4, 0xfc, 0xfb, 0x66, 0xb9, 0x8a, 0x8c, 0xeb, 0xfc,
	0xd8, 0xb4, 0xd8, 0x67, 0xcc, 0xb0, 0x9e, 0x07, 0xd9, 0x3e, 0x3c, 0x74, 0x89, 0x57, 0xca, 0x5c,
	0x92, 0xae, 0x66, 0xb1, 0x80, 0xd0, 0x39, 0xc8, 0x8e, 0xcc, 0xb1, 0xe9, 0x95, 0xb2, 0x0c, 0xcd,
	0x01, 0x4a, 0x7d, 0x68, 0x92, 0xd1, 0xc0, 0x2d, 0xc9, 0x97, 0xd2, 0x57, 0x0b, 0x58, 0x40, 0xe8,
	0x06, 0x64, 0x5c, 0xdb, 0xf1, 0x4a, 0xb9, 0x4b, 0xe9, 0xab, 0xc5, 0xca, 0xc5, 0x85, 0x07, 0x60,
	0x3b, 0x1e, 0x66, 0x94, 0xe8, 0x00, 0xc0, 0x18, 0x0e, 0x1d, 0x32, 0x34, 0x3c, 0xe2, 0x96, 0xf2,
	0x8c, 0xef, 0x3b, 0xc9, 0x0e, 0xae, 0x1a, 0xf0, 0xe9, 0x96, 0x47, 0xaf, 0x24, 0x14, 0x84, 0xaa,
	0x00, 0x9e, 0x63, 0x58, 0xee, 0xa1, 0xed, 0x8c, 0xdd, 0x52, 0x81, 0x89, 0x7d, 0x65, 0x91, 0xd8,
	0xae, 0x4f, 0x89, 0x23, 0x4c, 0xe8, 0x08, 0xce, 0x06, 0x02, 0x7b, 0x5c, 0x79, 0xdc, 0xd2, 0x3a,
	0x93, 0xf4, 0xee, 0x29, 0x37, 0xc8, 0x55, 0x50, 0x6c, 0x53, 0x31, 0x66, 0xd0, 0xea, 0x6f, 0xd3,
	0x00, 0xa1, 0x6a, 0xd1, 0x43, 0x7c, 0x6c, 0x0f, 0x4e, 0x4a, 0xd2, 0xf2, 0x43, 0xac, 0xd9, 0x83,
	0x13, 0xcc, 0x28, 0x51, 0x05, 0xb2, 0x1e, 0xa1, 0x1f, 0x9a, 0x5a, 0xce, 0xd2, 0x25, 0xce, 0x18,
	0x73, 0x52, 0xd4, 0x82, 0x33, 0xa6, 0xe5, 0x7a, 0x86, 0xd5, 0x27, 0xbd, 0xc7, 0xb6, 0xed, 0x7a,
	0x6e, 0x29, 0xcd, 0xb8, 0x2f, 0x2f, 0xe2, 0x6e, 0x0a, 0xf2, 0x1a, 0xa5, 0xc6, 0x9b, 0x66, 0x14,
	0x74, 0x91, 0x03, 0x2f, 0x04, 0xf2, 0xb8, 0xea, 0x8d, 0xed, 0x01, 0x61, 0x6a, 0xb3, 0x59, 0xa9,
	0x9d, 0xd6, 0xbe, 0x82, 0xc5, 0x98, 0x9a, 0xee, 0xdb, 0x03, 0x82, 0xcf, 0x9a, 0xb3, 0x28, 0xa4,
	0xc3, 0x3a, 0x53, 0x3c, 0xff, 0x03, 0x32, 0xec, 0x03, 0xb4, 0xc5, 0x9e, 0x80, 0x8c, 0x06, 0x7c,
	0xf7, 0xc5, 0xc3, 0x60, 0xec, 0x6a, 0x97, 0xe1, 0xec, 0x33, 0xcb, 0xa1, 0x1c, 0xa4, 0xab, 0xb5,
	0x8e, 0xb2, 0x46, 0x07, 0xfb, 0xd5, 0x87, 0x8a, 0xa4, 0xfe, 0x5d, 0x82, 0xf5, 0xa8, 0xb1, 0xa2,
	0x8f, 0x67, 0x96, 0xe7, 0x17, 0xf6, 0xde, 0xe9, 0xcd, 0x7e, 0xd1, 0xce, 0xd4, 0x21, 0x40, 0x38,
	0x85, 0xea, 0x50, 0x8c, 0xac, 0x27, 0xfc, 0x5e, 0x92, 0xaf, 0x85, 0x50, 0x26, 0x35, 0x68, 0xe6,
	0x8a, 0x99, 0xe7, 0x93, 0x30, 0x07, 0xd4, 0x8f, 0xe1, 0xcc, 0x8c, 0x39, 0x21, 0x05, 0xd2, 0x4f,
	0xc8, 0x09, 0x5b, 0xa5, 0x80, 0xe9, 0x10, 0xbd, 0x15, 0x65, 0x5d, 0x62, 0x4f, 0x81, 0x24, 0x21,
	0xfd, 0x9d, 0xd4, 0x6d, 0x49, 0x1d, 0xc1, 0x8b, 0x73, 0xed, 0x61, 0xce, 0x3a, 0xef, 0xc5, 0xd7,
	0x79, 0x6d, 0xe5, 0x3a, 0xc2, 0xc5, 0x87, 0xab, 0x69, 0x3f, 0x95, 0x22, 0x1f, 0xc4, 0xa7, 0xd1,
	0x07, 0x50, 0x08, 0x4c, 0x4f, 0x1c, 0x5e, 0x82, 0x4f, 0x08, 0x79, 0x22, 0x21, 0x27, 0x75, 0x9a,
	0x90, 0xa3, 0xbd, 0x0e, 0x85, 0xc0, 0xc5, 0xa0, 0x97, 0x00, 0xcc, 0x01, 0xb1, 0x3c, 0xf3, 0xd0,
	0x14, 0xb1, 0xab, 0x80, 0x23, 0x18, 0xed, 0xf7, 0x12, 0x64, 0xa8, 0x9d, 0x86, 0x17, 0xc5, 0x69,
	0x38, 0x40, 0xb1, 0xec, 0x32, 0xd9, 0x16, 0x0a, 0x98, 0x03, 0xf4, 0x0c, 0x27, 0xb6, 0xcb, 0xe2,
	0xce, 0x06, 0xa6, 0x43, 0x8a, 0xb1, 0xc8, 0x90, 0x39, 0xf3, 0x0d, 0x4c, 0x87, 0xd4, 0x67, 0x7f,
	0x4a, 0xcc, 0xe1, 0x11, 0x77, 0xe5, 0x12, 0x16, 0x10, 0x7a, 0x19, 0x8a, 0x9f, 0xda, 0xce, 0xa0,
	0x27, 0xdc, 0xbf, 0xcc, 0x38, 0x80, 0xa2, 0xda, 0x3c, 0x04, 0xbc, 0x0c, 0xc5, 0x89, 0xe1, 0x18,
	0x3e, 0x41, 0x8e, 0x13, 0x50, 0x14, 0x27, 0xd0, 0x7e, 0x2c, 0xc1, 0x19, 0x9d, 0x6e, 0x8f, 0x9e,
	0x97, 0x08, 0xcf, 0x7b, 0xb0, 0xe9, 0x32, 0x7d, 0xef, 0x39, 0x1c, 0x23, 0x4e, 0xfc, 0x72, 0x22,
	0xeb, 0xc0, 0x1b, 0x6e, 0x2c, 0xd8, 0xbf, 0xca, 0x75, 0x84, 0x1f, 0x3b, 0x9a, 0x11, 0x71, 0x97,
	0x9c, 0x30, 0xbd, 0xd1, 0x7e, 0x94, 0x82, 0xb3, 0x9d, 0xe9, 0x63, 0xd7, 0x33, 0xbd, 0xe9, 0xd7,
	0xb5, 0x93, 0x7d, 0x90, 0x1d, 0xd2, 0xb7, 0x9d, 0x81, 0xf0, 0xb5, 0x8b, 0x63, 0xd5, 0xec, 0x46,
	0xca, 0x98, 0xf1, 0xf1, 0x20, 0x20, 0x84, 0xa8, 0x6d, 0x28, 0x46, 0xd0, 0x73, 0x6c, 0xe1, 0x7a,
	0xdc, 0x16, 0xce, 0xcd, 0x2c, 0xf7, 0x80, 0xce, 0x45, 0x15, 0xff, 0xbf, 0x19, 0xc8, 0xd0, 0xc8,
	0x80, 0x10, 0x64, 0x3c, 0xf2, 0xd4, 0x13, 0xb2, 0xd8, 0x38, 0xa2, 0x02, 0xa9, 0x98, 0x0a, 0xdc,
	0x81, 0x1c, 0xcb, 0x19, 0x88, 0x1f, 0x03, 0xb4, 0x65, 0x41, 0x87, 0xbb, 0x69, 0xec, 0xb3, 0xa8,
	0xbf, 0x94, 0x20, 0xcb, 0x50, 0x74, 0x4d, 0x77, 0x42, 0xfa, 0xfe, 0x9a, 0x74, 0x8c, 0x6e, 0xc7,
	0x63, 0xd3, 0x72, 0xc9, 0x54, 0xf1, 0x5d, 0x3f, 0x42, 0xe9, 0x00, 0x74, 0xd0, 0x23, 0x4f, 0x27,
	0x8e, 0xbf, 0xb1, 0x2b, 0x2b, 0xd9, 0x75, 0x4a, 0x8d, 0x0b, 0x9e, 0x3f, 0x54, 0xbf, 0x01, 0x59,
	0x26, 0x96, 0x9a, 0x0e, 0xdf, 0x89, 0xc4, 0x72, 0x16, 0x0e, 0xa8, 0x7f, 0x49, 0x41, 0x21, 0xe0,
	0x43, 0xad, 0xd8, 0x9a, 0xdc, 0xa1, 0x6f, 0x25, 0x5b, 0x33, 0x18, 0x45, 0x17, 0xff, 0xb7, 0x04,
	0x79, 0x1f, 0x3f, 0xf7, 0x4a, 0x3e, 0x86, 0x75, 0x83, 0x3a, 0x09, 0xcb, 0xf0, 0xcc, 0x63, 0xe2,
	0x9f, 0xd2, 0x9d, 0x53, 0x2e, 0x59, 0xae, 0x46, 0x64, 0xe0, 0x98, 0x44, 0xa4, 0x42, 0x9e, 0x2a,
	0xbe, 0xe9, 0x90, 0x01, 0x73, 0x10, 0x79, 0x1c, 0xc0, 0x54, 0x21, 0x26, 0x47, 0x8e, 0xe1, 0x12,
	0xe6, 0x28, 0xf2, 0x58, 0x40, 0xea, 0x3b, 0xb0, 0x1e, 0x95, 0x98, 0x40, 0x99, 0x0a, 0xbe, 0x32,
	0x69, 0xbf, 0x5a, 0x87, 0x42, 0xe0, 0x3e, 0x51, 0x0d, 0xe4, 0x31, 0xf1, 0x1c, 0xb3, 0x2f, 0xac,
	0xee, 0xea, 0x4a, 0x8f, 0x5b, 0xde, 0x67, 0xf4, 0x8d, 0x35, 0x2c, 0x38, 0xd1, 0x07, 0x90, 0xed,
	0xdb, 0x53, 0xcb, 0x4b, 0x1c, 0x0f, 0xca, 0x75, 0x4a, 0xde, 0x58, 0xc3, 0x9c, 0x8f, 0x6e, 0xe2,
	0xf1, 0xb4, 0xff, 0x84, 0x78, 0x22, 0x33, 0x4f, 0xb0, 0x89, 0x1a, 0xa3, 0xa7, 0x9b, 0xe0, 0x9c,
	0xe8, 0x0e, 0x64, 0x06, 0x34, 0x70, 0x64, 0x98, 0x84, 0x2b, 0xab, 0x25, 0x6c, 0x1b, 0x1e, 0x69,
	0xac, 0x61, 0xc6, 0x85, 0x1a, 0x90, 0x37, 0x2c, 0x63, 0x74, 0xe2, 0x9a, 0x2e, 0x73, 0xbf, 0xc5,
	0xca, 0xf5, 0xd5, 0x12, 0xaa, 0x82, 0xa3, 0xb1, 0x86, 0x03, 0x6e, 0xaa, 0xa1, 0x13, 0xe2, 0xf4,
	0x69, 0xbc, 0x18, 0x11, 0xe6, 0xad, 0x8b, 0x95, 0x6f, 0xad, 0x96, 0x75, 0x2f, 0xe0, 0x69, 0xac,
	0xe1, 0x88, 0x04, 0xf5, 0x33, 0x09, 0x64, 0x7e, 0xe2, 0x61, 0x6c, 0x91, 0xa2, 0xb1, 0xa5, 0x0a,
	0x19, 0xef, 0x64, 0xc2, 0x1d, 0xd0, 0x66, 0xe5, 0x8d, 0xa4, 0xf7, 0x57, 0xee, 0x9e, 0x4c, 0x08,
	0x66, 0xac, 0xda, 0x75, 0xc8, 0x50, 0x88, 0xe5, 0x54, 0x0f, 0x76, 0x45, 0x4e, 0xd5, 0x6c, 0x29,
	0x92, 0x9f, 0x5c, 0xa5, 0xe8, 0xa0, 0x73, 0xb0, 0xaf, 0xa4, 0x55, 0x1d, 0xb2, 0xec, 0xf6, 0x16,
	0xec, 0x46, 0x81, 0xf4, 0xd8, 0xb4, 0xd8, 0x66, 0xb2, 0x98, 0x0e, 0xc3, 0x0a, 0x25, 0x1d, 0xa9,
	0x50, 0xd4, 0xcf, 0x25, 0x90, 0xf9, 0x1d, 0xa2, 0x26, 0xe4, 0xf8, 0x1d, 0xae, 0x34, 0xe8, 0xd9,
	0xeb, 0x17, 0xff, 0xb0, 0xcf, 0xaf, 0x76, 0x03, 0xa1, 0x08, 0x32, 0x96, 0x31, 0xf6, 0x83, 0x33,
	0x1b, 0x3f, 0x6f, 0x7e, 0xa0, 0x7e, 0x29, 0x41, 0x86, 0x6a, 0xcb, 0x82, 0x4f, 0xbe, 0x0b, 0x79,
	0xd3, 0xf2, 0x88, 0x73, 0x6c, 0x8c, 0xc4, 0x25, 0x6c, 0x25, 0xd3, 0xbe, 0x72, 0x53, 0xb0, 0xe1,
	0x40, 0x00, 0x7a, 0x1d, 0xce, 0xfa, 0xe3, 0xde, 0x78, 0x3a, 0xf2, 0xcc, 0xc9, 0x88, 0xb0, 0x93,
	0x4b, 0x61, 0xc5, 0x9f, 0xd8, 0x17, 0x78, 0xcd, 0x80, 0xbc, 0x2f, 0x02, 0xe5, 0x21, 0xf3, 0x48,
	0xaf, 0x62, 0x65, 0x0d, 0x15, 0x21, 0x77, 0xff, 0xa0, 0x8a, 0xbb, 0x3a, 0x56, 0x24, 0x54, 0x80,
	0xec, 0x7e, 0xbb, 0xd5, 0x6d, 0x28, 0x29, 0x4a, 0xf1, 0xa1, 0xae, 0xdf, 0x55, 0xd2, 0xf4, 0x32,
	0xb7, 0xab, 0x8f, 0x94, 0x0c, 0x45, 0x35, 0xda, 0x07, 0x58, 0xc9, 0x22, 0x00, 0x79, 0xbf, 0xd9,
	0x3a, 0xe8, 0xea, 0x8a, 0x4c, 0xc7, 0x1d, 0xbd, 0xde, 0x6e, 0x6d, 0x2b, 0x39, 0xf5, 0x3f, 0x12,
	0xe4, 0x7d, 0x3d, 0x5f, 0xf0, 0xfd, 0xf5, 0x98, 0x02, 0x6e, 0x25, 0xb7, 0x9b, 0xa8, 0x0a, 0xfe,
	0x4c, 0x12, 0x3a, 0xb8, 0x0e, 0xf9, 0x7a, 0xfb, 0x81, 0x8e, 0xab, 0xbb, 0xba, 0xb2, 0x86, 0xce,
	0x40, 0xb1, 0x5e, 0xc5, 0xdb, 0xcd, 0x56, 0x75, 0xaf, 0xd9, 0x7d, 0xa4, 0x48, 0xf4, 0xe3, 0xaa,
	0x0f, 0x76, 0x7b, 0x7b, 0x7a, 0x4b, 0x49, 0x51, 0x60, 0xbf, 0xd9, 0x62, 0x40, 0x9a, 0x01, 0xd5,
	0x87, 0x0c, 0xc8, 0xa0, 0x73, 0xa0, 0x50, 0x32, 0xac, 0xdf, 0xd3, 0xab, 0x5d, 0x7d, 0x9b, 0x61,
	0xb3, 0x14, 0x4b, 0xe9, 0x63, 0x58, 0x99, 0x61, 0xab, 0x0f, 0xe3, 0xd8, 0x9c, 0xfa, 0x2f, 0x09,
	0x20, 0x34, 0x4a, 0xf4, 0x10, 0x8a, 0xa1, 0x51, 0xfa, 0x8a, 0x7a, 0xeb, 0x34, 0x76, 0x4d, 0xaf,
	0xdc, 0xb8, 0x67, 0x9b, 0x96, 0x87, 0xa3, 0xa2, 0x50, 0x03, 0xd2, 0xfd, 0xc1, 0xa1, 0x08, 0x2c,
	0xcf, 0x2b, 0x91, 0x8a, 0x50, 0xdf, 0x82, 0x42, 0x80, 0xa1, 0x77, 0x35, 0xa1, 0x03, 0x76, 0x57,
	0x12, 0xe6, 0xc0, 0xfc, 0xea, 0xa2, 0x56, 0x8c, 0x64, 0xde, 0xda, 0x17, 0x12, 0x64, 0x3a, 0xb4,
	0xf4, 0x3f, 0x0f, 0x59, 0x56, 0x28, 0x32, 0x09, 0x79, 0xea, 0xad, 0x19, 0x88, 0x5e, 0x81, 0x22,
	0xdb, 0x16, 0x2f, 0x23, 0x99, 0x24, 0x3a, 0x0b, 0x0c, 0xc9, 0x0a, 0x34, 0x74, 0x39, 0xec, 0xb8,
	0x70, 0xa2, 0xb4, 0x20, 0xf2, 0xfb, 0x27, 0x9c, 0xec, 0xbc, 0xaf, 0x4f, 0xd4, 0x69, 0x17, 0xe8,
	0x0a, 0x5c, 0xa3, 0x6e, 0x43, 0xd6, 0x76, 0x06, 0xc4, 0x11, 0xd5, 0xa9, 0xb6, 0xac, 0x4f, 0x51,
	0x6e, 0x53, 0x4a, 0xcc, 0x19, 0x34, 0x15, 0xb2, 0x0c, 0x66, 0xae, 0xac, 0x53, 0x57, 0xd6, 0xa8,
	0x8a, 0x6f, 0xeb, 0x9d, 0xba, 0x22, 0xd5, 0x64, 0xae, 0xa7, 0xda, 0x0f, 0xf3, 0x20, 0x8b, 0x92,
	0xe3, 0x2e, 0x40, 0xdf, 0x1e, 0x3f, 0x36, 0x2d, 0xc3, 0xb3, 0xfd, 0x46, 0xd5, 0xb5, 0xe5, 0x5e,
	0xa1, 0x5c, 0x0f, 0x18, 0xe8, 0x47, 0x87, 0xec, 0xe8, 0x4e, 0x34, 0xf5, 0x2f, 0x56, 0x5e, 0x5d,
	0x21, 0x87, 0xd5, 0x7f, 0xe1, 0x37, 0xdf, 0x82, 0xf4, 0x90, 0xd8, 0x22, 0x00, 0x6a, 0x2b, 0x78,
	0x77, 0x89, 0xdd, 0x58, 0xc3, 0x94, 0x01, 0x5d, 0x80, 0x9c, 0xe9, 0xf6, 0xac, 0xe9, 0x68, 0x14,
	0x9c, 0xa2, 0x6c, 0xba, 0xad, 0xe9, 0x68, 0xa4, 0xfe, 0x23, 0x05, 0x59, 0xb6, 0x0a, 0x6a, 0x42,
	0xde, 0x9e, 0x10, 0x27, 0xf8, 0xca, 0x25, 0x71, 0x22, 0xba, 0xbb, 0x72, 0x5b, 0x30, 0xe1, 0x80,
	0x7d, 0x41, 0x81, 0x13, 0xa4, 0xc1, 0xe9, 0x95, 0x69, 0xb0, 0xf6, 0x27, 0x09, 0xf2, 0xbe, 0x60,
	0x6a, 0xee, 0xfa, 0xfd, 0x83, 0xea, 0x5e, 0xaf, 0xdb, 0x56, 0xd6, 0x90, 0x02, 0xeb, 0xad, 0x76,
	0xb7, 0x17, 0x60, 0x24, 0x8a, 0xd9, 0xc5, 0xd4, 0x2e, 0x71, 0xaf, 0xdb, 0xa8, 0x52, 0xa3, 0xbf,
	0x08, 0xa5, 0x28, 0xa6, 0xd7, 0xc6, 0x21, 0x7d, 0x1a, 0x6d, 0x40, 0x61, 0x4f, 0xef, 0x74, 0x38,
	0x71, 0x06, 0x5d, 0x80, 0x17, 0x03, 0x30, 0x46, 0x99, 0xe5, 0x8e, 0xa6, 0xd5, 0xad, 0x36, 0x5b,
	0x1d, 0xee, 0x04, 0xb6, 0xdb, 0x7a, 0xa7, 0x47, 0x97, 0x17, 0x68, 0x25, 0x87, 0x36, 0x01, 0x1a,
	0xd5, 0x4e, 0xaf, 0x73, 0xb0, 0xb3, 0xd3, 0x7c, 0xa8, 0xe4, 0x7d, 0xf8, 0x1e, 0xd6, 0x29, 0x5c,
	0x50, 0xff, 0x29, 0x41, 0x7a, 0x97, 0xd8, 0xe8, 0xff, 0xa1, 0xc0, 0x2b, 0xff, 0x91, 0xe1, 0x27,
	0x61, 0x79, 0x86, 0xd8, 0x33, 0xbc, 0xc8, 0xa4, 0x35, 0x14, 0xa7, 0x26, 0x26, 0xad, 0x21, 0x8d,
	0x97, 0x94, 0x27, 0xcd, 0xcc, 0x91, 0x0e, 0x19, 0xc6, 0xe2, 0x95, 0x21, 0xc5, 0x58, 0xac, 0x32,
	0x74, 0x8c, 0x81, 0x39, 0x75, 0xfd, 0xca, 0x90, 0x43, 0xa8, 0x4a, 0x6b, 0x9d, 0xa1, 0x69, 0x5b,
	0x2c, 0xcd, 0xd8, 0x5c, 0xa9, 0xb9, 0xbb, 0xc4, 0x2e, 0x63, 0xc6, 0x80, 0x05, 0xa3, 0xf6, 0x0a,
	0xc8, 0x1c, 0x43, 0x9d, 0x7e, 0xb3, 0xd5, 0x69, 0x6e, 0xeb, 0x3c, 0x82, 0xb4, 0x0f, 0xba, 0x0c,
	0x90, 0xd4, 0x3f, 0x4a, 0x00, 0xa1, 0xce, 0xa3, 0xd6, 0x33, 0xaa, 0x54, 0x49, 0x6c, 0x30, 0xf3,
	0xf4, 0xe9, 0x36, 0xe4, 0xfc, 0xe6, 0x1d, 0x77, 0x81, 0xab, 0xa2, 0xb2, 0x4f, 0xae, 0x6d, 0x45,
	0xd4, 0x88, 0x9a, 0xfb, 0xde, 0x1e, 0xcf, 0x5c, 0xaa, 0xad, 0x47, 0x3c, 0x73, 0x69, 0xb7, 0x74,
	0x1e, 0xf6, 0x5a, 0x74, 0x94, 0xae, 0xe5, 0xfd, 0xf8, 0xaf, 0x7d, 0x91, 0x9b, 0x69, 0xdc, 0xc4,
	0x7b, 0xd5, 0xd7, 0x56, 0xf7, 0x6c, 0xc4, 0x6e, 0xa8, 0xb5, 0x89, 0xc6, 0x75, 0x73, 0x26, 0x0d,
	0x28, 0x56, 0x5e, 0x4f, 0x20, 0xc6, 0x8f, 0xdf, 0x34, 0x87, 0x0c, 0x92, 0x80, 0x1d, 0xc8, 0x91,
	0x11, 0x19, 0x13, 0xcb, 0x4f, 0x88, 0xaf, 0x27, 0x90, 0xa4, 0x73, 0x8e, 0xc6, 0x1a, 0xf6, 0x99,
	0xd1, 0x7b, 0xa2, 0x2c, 0xc8, 0x2c, 0xcf, 0xcb, 0x23, 0x42, 0xba, 0xe4, 0x29, 0x95, 0xc0, 0x2b,
	0x88, 0x3a, 0xc8, 0x7d, 0xdb, 0x35, 0x2d, 0x22, 0x52, 0xe2, 0x24, 0xc7, 0x52, 0x67, 0x0c, 0xf4,
	0x58, 0x38, 0xeb, 0x4c, 0x3f, 0x45, 0x9e, 0xed, 0xa7, 0xa8, 0x0f, 0x02, 0x67, 0xfc, 0xbc, 0x2f,
	0x06, 0xf3, 0x3b, 0x66, 0x7f, 0x4e, 0x45, 0x92, 0xa3, 0xf9, 0x89, 0x4b, 0x13, 0x64, 0x16, 0x15,
	0x7d, 0xcd, 0xbb, 0x79, 0x8a, 0xfb, 0x2a, 0xf3, 0xb8, 0x2b, 0x04, 0xa0, 0x7d, 0x90, 0xc9, 0x53,
	0x8f, 0x58, 0xbc, 0x84, 0xdb, 0x5c, 0xdc, 0x76, 0x98, 0x27, 0x4a, 0xa7, 0x9c, 0x2e, 0x33, 0x4b,
	0x2e, 0x04, 0x5d, 0x84, 0x02, 0xf5, 0xe0, 0xcc, 0x6d, 0x0a, 0x4f, 0x10, 0x22, 0xd4, 0x37, 0x21,
	0x7b, 0xea, 0x18, 0xaf, 0xbd, 0x0f, 0x85, 0x60, 0x9d, 0xc0, 0x26, 0xd6, 0xa8, 0xd9, 0xd7, 0xf4,
	0x9d, 0x36, 0xd6, 0x79, 0xae, 0x58, 0xdd, 0xa1, 0x69, 0x63, 0x8a, 0xba, 0x5d, 0x8e, 0xee, 0x71,
	0x4c, 0x5a, 0x7d, 0x13, 0x72, 0x42, 0xc3, 0x16, 0x9c, 0x26, 0x82, 0x0c, 0x19, 0x89, 0x2e, 0x75,
	0x01, 0xb3, 0xb1, 0x7a, 0x03, 0x32, 0x54, 0xa3, 0x16, 0x73, 0x30, 0xf5, 0x4c, 0x87, 0x55, 0xab,
	0x7a, 0x0b, 0x64, 0xae, 0x42, 0x0b, 0x78, 0xce, 0x83, 0x7c, 0x4c, 0xfa, 0xd4, 0xf9, 0xd0, 0x3b,
	0x4b, 0x61, 0x01, 0xd5, 0x36, 0x62, 0xbd, 0x57, 0xed, 0x6f, 0x29, 0xd8, 0x88, 0xf5, 0xc3, 0x51,
	0x3d, 0x2a, 0x6e, 0x89, 0x6d, 0xc6, 0xb8, 0x66, 0x83, 0x74, 0xdd, 0x4f, 0x89, 0x52, 0xa7, 0x11,
	0xc2, 0x92, 0x9d, 0x30, 0x7f, 0x8a, 0x5b, 0x44, 0xfa, 0x19, 0x8b, 0xd8, 0xf5, 0xa3, 0xf6, 0xc2,
	0x53, 0x63, 0x4d, 0x9c, 0x74, 0xa4, 0x89, 0x33, 0xdf, 0x04, 0x6a, 0x90, 0xe5, 0x79, 0xd6, 0x45,
	0x28, 0x84, 0xef, 0x4c, 0x5c, 0x57, 0x42, 0x04, 0x8d, 0x4f, 0x63, 0xd3, 0xea, 0x85, 0x25, 0xfc,
	0x06, 0xce, 0x8f, 0x4d, 0x8b, 0x55, 0x79, 0x35, 0x05, 0x36, 0xe3, 0xcf, 0x10, 0xda, 0xe7, 0x05,
	0x38, 0x1b, 0xb6, 0x5f, 0x89, 0x3b, 0xb1, 0x2d, 0x97, 0xa0, 0xef, 0xce, 0xf4, 0x11, 0x6e, 0xac,
	0xee, 0xdc, 0x0a, 0xd6, 0x67, 0xfb, 0x09, 0xbb, 0xf1, 0x7e, 0xc2, 0x56, 0x72, 0x51, 0x33, 0x7d,
	0x85, 0xfd, 0xb0, 0xb2, 0xe4, 0x7e, 0xf4, 0x66, 0x72, 0x51, 0xbc, 0x8e, 0xa4, 0xb5, 0xbd, 0x2f,
	0x03, 0x6d, 0xc7, 0x5a, 0x0c, 0xe5, 0xe4, 0xb2, 0x62, 0xad, 0x86, 0x7b, 0xcf, 0xb4, 0x1a, 0x2a,
	0xc9, 0x25, 0xcd, 0x6b, 0x39, 0xa8, 0x2f, 0x45, 0x3b, 0x04, 0x61, 0x4f, 0x3a, 0xd0, 0x83, 0x5f,
	0x48, 0x7e, 0xcd, 0xde, 0xa1, 0x1e, 0x7d, 0x6a, 0x05, 0x95, 0xf6, 0xbb, 0xa7, 0x3c, 0x5a, 0xfe,
	0x57, 0x3c, 0x94, 0x09, 0x51, 0xea, 0xdb, 0x50, 0x8c, 0xa0, 0xe7, 0xf4, 0x48, 0x63, 0xda, 0x99,
	0x8d, 0x3e, 0x3a, 0x7c, 0x96, 0x82, 0x9c, 0x38, 0x68, 0xf4, 0x70, 0xb6, 0x0d, 0xf0, 0xfe, 0xa9,
	0x2f, 0xcb, 0xff, 0xcf, 0xf7, 0x17, 0x74, 0x05, 0x2a, 0x4b, 0xbb, 0x02, 0xe7, 0xa2, 0xda, 0x96,
	0x15, 0xaa, 0xa3, 0x7a, 0xb0, 0x1e, 0x15, 0x36, 0xe7, 0xab, 0x5a, 0xf1, 0xce, 0xef, 0xed, 0xe7,
	0xdd, 0x6d, 0xf4, 0x3c, 0x7e, 0xee, 0x77, 0x1a, 0xda, 0x90, 0x1d, 0xb0, 0x17, 0x57, 0x7e, 0x14,
	0x6f, 0x9f, 0x4e, 0xd7, 0xd8, 0x1f, 0x71, 0x0a, 0x5c, 0x8e, 0x7a, 0x1b, 0x60, 0x7b, 0xd9, 0xdb,
	0xd1, 0xe2, 0x3b, 0xfa, 0x4d, 0xb4, 0x03, 0x70, 0x11, 0xf2, 0x75, 0xfb, 0x98, 0x38, 0xc6, 0x90,
	0x1f, 0x62, 0x96, 0x2a, 0xa2, 0x8f, 0x41, 0x1a, 0x14, 0xeb, 0x86, 0x33, 0x30, 0x2d, 0x63, 0x64,
	0x7a, 0xfc, 0x39, 0x80, 0x12, 0x44, 0x91, 0xa8, 0x04, 0xf2, 0xbe, 0x69, 0xed, 0x11, 0x8b, 0xf7,
	0x83, 0xa8, 0xd9, 0x73, 0x98, 0xcd, 0x18, 0x4f, 0xe9, 0x4c, 0x26, 0x98, 0x61, 0x30, 0x9d, 0xa9,
	0x1e, 0x0f, 0xe9, 0x0c, 0x35, 0x98, 0x14, 0x9d, 0xe1, 0x70, 0x2d, 0x27, 0xb6, 0x5d, 0x3b, 0x07,
	0x28, 0x7c, 0x0d, 0x76, 0xc4, 0x61, 0x68, 0x7f, 0xc8, 0xc0, 0xa6, 0xff, 0x5c, 0x20, 0x1c, 0xd5,
	0x39, 0xc8, 0x3a, 0xc4, 0x18, 0xb8, 0x6c, 0xfb, 0x69, 0xcc, 0x01, 0xf4, 0x4d, 0xd8, 0xf0, 0x6c,
	0xcf, 0x18, 0x51, 0xd6, 0xe9, 0x88, 0x65, 0x04, 0x74, 0x76, 0x9d, 0x21, 0x31, 0xc7, 0xb1, 0x78,
	0x65, 0x8e, 0x49, 0x10, 0xaf, 0xcc, 0x31, 0x41, 0x0f, 0x62, 0xef, 0xe3, 0x99, 0xe5, 0x45, 0x7c,
	0x7c, 0x2b, 0x4b, 0x1f, 0xc8, 0xcd, 0x79, 0xaf, 0xdb, 0xf2, 0xf2, 0xe6, 0xf3, 0x22, 0xf1, 0xcb,
	0x9f, 0xb7, 0x69, 0x06, 0xee, 0x7f, 0x75, 0x76, 0x79, 0x06, 0xce, 0x0f, 0x02, 0xfb, 0xe4, 0xea,
	0x51, 0x92, 0x57, 0xc9, 0x0f, 0xe2, 0x76, 0x72, 0x2d, 0xb1, 0x2a, 0x47, 0x95, 0xd0, 0x4a, 0xfe,
	0x3a, 0xf9, 0x55, 0xac, 0xa7, 0xfd, 0x55, 0xa2, 0x85, 0x11, 0xfd, 0x4a, 0x54, 0x03, 0x99, 0xe1,
	0x7d, 0x5b, 0xbc, 0xbe, 0xfc, 0x74, 0x78, 0xad, 0xeb, 0xbb, 0x48, 0xce, 0x49, 0x95, 0x2e, 0xcc,
	0x1b, 0x24, 0x3f, 0x11, 0x78, 0xd9, 0xff, 0xa9, 0x4b, 0xd8, 0x23, 0x91, 0xc4, 0x0f, 0x57, 0x58,
	0xdc, 0x56, 0xdb, 0x50, 0x8c, 0x48, 0xfb, 0x0a, 0x5e, 0x9f, 0x7e, 0x22, 0xc1, 0x26, 0xb7, 0xe5,
	0xaf, 0xe9, 0xf9, 0xed, 0x0a, 0x64, 0x9e, 0x90, 0x13, 0x3f, 0xa1, 0x9e, 0xf7, 0x12, 0xc8, 0xe6,
	0xb5, 0x5f, 0x4b, 0x70, 0x26, 0xd8, 0x88, 0xb0, 0xcc, 0x7a, 0xf4, 0xfd, 0xa7, 0xb8, 0xa4, 0x93,
	0x1d, 0xe7, 0x8b, 0x3f, 0x4a, 0x5d, 0x07, 0x99, 0xff, 0x30, 0x69, 0x76, 0x0b, 0xce, 0xa4, 0x5f,
	0xee, 0xb0, 0x19, 0x2c, 0x28, 0x56, 0xbc, 0x3c, 0x55, 0xbe, 0x4c, 0x41, 0xd6, 0xff, 0x01, 0x91,
	0xcc, 0xbf, 0x1a, 0x25, 0x3b, 0x15, 0xf5, 0x4a, 0x32, 0x13, 0x45, 0xdf, 0x83, 0xbc, 0xff, 0x30,
	0x8b, 0x16, 0x96, 0x67, 0x33, 0x4f, 0xb7, 0x89, 0x85, 0x7f, 0x1f, 0x20, 0x7c, 0xe4, 0x44, 0xd7,
	0x12, 0x3f, 0x84, 0xaa, 0xc9, 0x3e, 0x12, 0x7d, 0x04, 0x39, 0x71, 0x15, 0xe8, 0xca, 0xca, 0xbb,
	0xe2, 0x92, 0x5f, 0x4b, 0x78, 0xa7, 0xb5, 0x6f, 0x7f, 0x54, 0xe9, 0xdb, 0x03, 0xe2, 0x93, 0xf7,
	0xed, 0xf1, 0x16, 0xfb, 0xa1, 0xd9, 0x90, 0x58, 0x6f, 0x0c, 0xed, 0xad, 0xf9, 0x3f, 0x7b, 0x7b,
	0x2c, 0x33, 0x9a, 0x37, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x1e, 0x1a, 0x36, 0x17, 0x27,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QueryClient is the client API for Query service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QueryClient interface {
	// Search runs a search query over all records in a collection.
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// Evaluate runs a search query on a single record in a collection.
	Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// Substitute takes a search request and a record and substitutes the record values
	// in the request.
	Substitute(ctx context.Context, in *SubstituteRequest, opts ...grpc.CallOption) (*SearchRequest, error)
	// Analyse takes an AnalyseRequest (comprised of a search query and a record identifier)
	// and computes the term overlap between the two.
	Analyse(ctx context.Context, in *AnalyseRequest, opts ...grpc.CallOption) (*AnalyseResponse, error)
}

type queryClient struct {
	cc *grpc.ClientConn
}

func NewQueryClient(cc *grpc.ClientConn) QueryClient {
	return &queryClient{cc}
}

func (c *queryClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.query.v1.Query/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Evaluate(ctx context.Context, in *EvaluateRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.query.v1.Query/Evaluate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Substitute(ctx context.Context, in *SubstituteRequest, opts ...grpc.CallOption) (*SearchRequest, error) {
	out := new(SearchRequest)
	err := c.cc.Invoke(ctx, "/sajari.engine.query.v1.Query/Substitute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryClient) Analyse(ctx context.Context, in *AnalyseRequest, opts ...grpc.CallOption) (*AnalyseResponse, error) {
	out := new(AnalyseResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.query.v1.Query/Analyse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryServer is the server API for Query service.
type QueryServer interface {
	// Search runs a search query over all records in a collection.
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	// Evaluate runs a search query on a single record in a collection.
	Evaluate(context.Context, *EvaluateRequest) (*SearchResponse, error)
	// Substitute takes a search request and a record and substitutes the record values
	// in the request.
	Substitute(context.Context, *SubstituteRequest) (*SearchRequest, error)
	// Analyse takes an AnalyseRequest (comprised of a search query and a record identifier)
	// and computes the term overlap between the two.
	Analyse(context.Context, *AnalyseRequest) (*AnalyseResponse, error)
}

// UnimplementedQueryServer can be embedded to have forward compatible implementations.
type UnimplementedQueryServer struct {
}

func (*UnimplementedQueryServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedQueryServer) Evaluate(ctx context.Context, req *EvaluateRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Evaluate not implemented")
}
func (*UnimplementedQueryServer) Substitute(ctx context.Context, req *SubstituteRequest) (*SearchRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Substitute not implemented")
}
func (*UnimplementedQueryServer) Analyse(ctx context.Context, req *AnalyseRequest) (*AnalyseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Analyse not implemented")
}

func RegisterQueryServer(s *grpc.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

func _Query_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.query.v1.Query/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Evaluate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EvaluateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Evaluate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.query.v1.Query/Evaluate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Evaluate(ctx, req.(*EvaluateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Substitute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubstituteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Substitute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.query.v1.Query/Substitute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Substitute(ctx, req.(*SubstituteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Query_Analyse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnalyseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Analyse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.query.v1.Query/Analyse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Analyse(ctx, req.(*AnalyseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Query_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.engine.query.v1.Query",
	HandlerType: (*QueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Query_Search_Handler,
		},
		{
			MethodName: "Evaluate",
			Handler:    _Query_Evaluate_Handler,
		},
		{
			MethodName: "Substitute",
			Handler:    _Query_Substitute_Handler,
		},
		{
			MethodName: "Analyse",
			Handler:    _Query_Analyse_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/engine/query/v1/query.proto",
}
