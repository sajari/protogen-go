// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/engine/store/record/record.proto

package record

import (
	engine "code.sajari.com/protogen-go/sajari/engine"
	rpc "code.sajari.com/protogen-go/sajari/rpc"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExistsResponse struct {
	Status               []*rpc.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ExistsResponse) Reset()         { *m = ExistsResponse{} }
func (m *ExistsResponse) String() string { return proto.CompactTextString(m) }
func (*ExistsResponse) ProtoMessage()    {}
func (*ExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{0}
}

func (m *ExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExistsResponse.Unmarshal(m, b)
}
func (m *ExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExistsResponse.Marshal(b, m, deterministic)
}
func (m *ExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExistsResponse.Merge(m, src)
}
func (m *ExistsResponse) XXX_Size() int {
	return xxx_messageInfo_ExistsResponse.Size(m)
}
func (m *ExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExistsResponse proto.InternalMessageInfo

func (m *ExistsResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Transform is a representation of a transform process which is applied to a record
// before it is added.
type Transform struct {
	// Identifier unique identifies a transform
	Identifier           string   `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transform) Reset()         { *m = Transform{} }
func (m *Transform) String() string { return proto.CompactTextString(m) }
func (*Transform) ProtoMessage()    {}
func (*Transform) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{1}
}

func (m *Transform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transform.Unmarshal(m, b)
}
func (m *Transform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transform.Marshal(b, m, deterministic)
}
func (m *Transform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transform.Merge(m, src)
}
func (m *Transform) XXX_Size() int {
	return xxx_messageInfo_Transform.Size(m)
}
func (m *Transform) XXX_DiscardUnknown() {
	xxx_messageInfo_Transform.DiscardUnknown(m)
}

var xxx_messageInfo_Transform proto.InternalMessageInfo

func (m *Transform) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

// Record is a single record made up of key-value pairs.
type Record struct {
	// A map of key-value pairs.
	Values map[string]*engine.Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// A map of field-value indexes.
	ValueIndexes         map[string]*ValueIndexes `protobuf:"bytes,2,rep,name=value_indexes,json=valueIndexes,proto3" json:"value_indexes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{2}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetValues() map[string]*engine.Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Record) GetValueIndexes() map[string]*ValueIndexes {
	if m != nil {
		return m.ValueIndexes
	}
	return nil
}

// Value indexes are a list of value indexes.
type ValueIndexes struct {
	ValueIndexes         []*ValueIndex `protobuf:"bytes,1,rep,name=value_indexes,json=valueIndexes,proto3" json:"value_indexes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ValueIndexes) Reset()         { *m = ValueIndexes{} }
func (m *ValueIndexes) String() string { return proto.CompactTextString(m) }
func (*ValueIndexes) ProtoMessage()    {}
func (*ValueIndexes) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{3}
}

func (m *ValueIndexes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueIndexes.Unmarshal(m, b)
}
func (m *ValueIndexes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueIndexes.Marshal(b, m, deterministic)
}
func (m *ValueIndexes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueIndexes.Merge(m, src)
}
func (m *ValueIndexes) XXX_Size() int {
	return xxx_messageInfo_ValueIndexes.Size(m)
}
func (m *ValueIndexes) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueIndexes.DiscardUnknown(m)
}

var xxx_messageInfo_ValueIndexes proto.InternalMessageInfo

func (m *ValueIndexes) GetValueIndexes() []*ValueIndex {
	if m != nil {
		return m.ValueIndexes
	}
	return nil
}

// A value index is the term-based representation for a value.
type ValueIndex struct {
	// Spec for analysis process used in index construction.
	Spec string `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	// Groups of lists of terms (i.e. paragraphs).
	Terms                []*Terms `protobuf:"bytes,2,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValueIndex) Reset()         { *m = ValueIndex{} }
func (m *ValueIndex) String() string { return proto.CompactTextString(m) }
func (*ValueIndex) ProtoMessage()    {}
func (*ValueIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{4}
}

func (m *ValueIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueIndex.Unmarshal(m, b)
}
func (m *ValueIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueIndex.Marshal(b, m, deterministic)
}
func (m *ValueIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueIndex.Merge(m, src)
}
func (m *ValueIndex) XXX_Size() int {
	return xxx_messageInfo_ValueIndex.Size(m)
}
func (m *ValueIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueIndex.DiscardUnknown(m)
}

var xxx_messageInfo_ValueIndex proto.InternalMessageInfo

func (m *ValueIndex) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *ValueIndex) GetTerms() []*Terms {
	if m != nil {
		return m.Terms
	}
	return nil
}

// Terms is a list of terms.
type Terms struct {
	Terms                []string `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Terms) Reset()         { *m = Terms{} }
func (m *Terms) String() string { return proto.CompactTextString(m) }
func (*Terms) ProtoMessage()    {}
func (*Terms) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{5}
}

func (m *Terms) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Terms.Unmarshal(m, b)
}
func (m *Terms) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Terms.Marshal(b, m, deterministic)
}
func (m *Terms) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Terms.Merge(m, src)
}
func (m *Terms) XXX_Size() int {
	return xxx_messageInfo_Terms.Size(m)
}
func (m *Terms) XXX_DiscardUnknown() {
	xxx_messageInfo_Terms.DiscardUnknown(m)
}

var xxx_messageInfo_Terms proto.InternalMessageInfo

func (m *Terms) GetTerms() []string {
	if m != nil {
		return m.Terms
	}
	return nil
}

// Records is a message which represents a list of records.
type Records struct {
	// The list of records.
	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	// Transforms is a list of transformations to be applied to the records
	// before they are added.
	Transforms           []*Transform `protobuf:"bytes,2,rep,name=transforms,proto3" json:"transforms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}
func (*Records) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{6}
}

func (m *Records) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Records.Unmarshal(m, b)
}
func (m *Records) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Records.Marshal(b, m, deterministic)
}
func (m *Records) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Records.Merge(m, src)
}
func (m *Records) XXX_Size() int {
	return xxx_messageInfo_Records.Size(m)
}
func (m *Records) XXX_DiscardUnknown() {
	xxx_messageInfo_Records.DiscardUnknown(m)
}

var xxx_messageInfo_Records proto.InternalMessageInfo

func (m *Records) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *Records) GetTransforms() []*Transform {
	if m != nil {
		return m.Transforms
	}
	return nil
}

// AddResponse is returned from Add.
type AddResponse struct {
	// Keys for the inserted records.
	Keys []*engine.Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	// Status for each insert.
	Status               []*rpc.Status `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{7}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetKeys() []*engine.Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *AddResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// GetResponse is returned from Get.
type GetResponse struct {
	Records []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	// Status for each get.
	Status               []*rpc.Status `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{8}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *GetResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// DeleteResponse is returned from Delete.
type DeleteResponse struct {
	Status               []*rpc.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{9}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Keys is a list of keys.
type Keys struct {
	Keys                 []*engine.Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Keys) Reset()         { *m = Keys{} }
func (m *Keys) String() string { return proto.CompactTextString(m) }
func (*Keys) ProtoMessage()    {}
func (*Keys) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{10}
}

func (m *Keys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keys.Unmarshal(m, b)
}
func (m *Keys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keys.Marshal(b, m, deterministic)
}
func (m *Keys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keys.Merge(m, src)
}
func (m *Keys) XXX_Size() int {
	return xxx_messageInfo_Keys.Size(m)
}
func (m *Keys) XXX_DiscardUnknown() {
	xxx_messageInfo_Keys.DiscardUnknown(m)
}

var xxx_messageInfo_Keys proto.InternalMessageInfo

func (m *Keys) GetKeys() []*engine.Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

type MutateRequest struct {
	// List of record murations to apply.
	RecordMutations      []*MutateRequest_RecordMutation `protobuf:"bytes,1,rep,name=record_mutations,json=recordMutations,proto3" json:"record_mutations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *MutateRequest) Reset()         { *m = MutateRequest{} }
func (m *MutateRequest) String() string { return proto.CompactTextString(m) }
func (*MutateRequest) ProtoMessage()    {}
func (*MutateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{11}
}

func (m *MutateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateRequest.Unmarshal(m, b)
}
func (m *MutateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateRequest.Marshal(b, m, deterministic)
}
func (m *MutateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateRequest.Merge(m, src)
}
func (m *MutateRequest) XXX_Size() int {
	return xxx_messageInfo_MutateRequest.Size(m)
}
func (m *MutateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MutateRequest proto.InternalMessageInfo

func (m *MutateRequest) GetRecordMutations() []*MutateRequest_RecordMutation {
	if m != nil {
		return m.RecordMutations
	}
	return nil
}

type MutateRequest_RecordMutation struct {
	// Key which uniquely identifies record.
	Key *engine.Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// List of fields to mutate.
	FieldMutations       []*MutateRequest_RecordMutation_FieldMutation `protobuf:"bytes,2,rep,name=field_mutations,json=fieldMutations,proto3" json:"field_mutations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *MutateRequest_RecordMutation) Reset()         { *m = MutateRequest_RecordMutation{} }
func (m *MutateRequest_RecordMutation) String() string { return proto.CompactTextString(m) }
func (*MutateRequest_RecordMutation) ProtoMessage()    {}
func (*MutateRequest_RecordMutation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{11, 0}
}

func (m *MutateRequest_RecordMutation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateRequest_RecordMutation.Unmarshal(m, b)
}
func (m *MutateRequest_RecordMutation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateRequest_RecordMutation.Marshal(b, m, deterministic)
}
func (m *MutateRequest_RecordMutation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateRequest_RecordMutation.Merge(m, src)
}
func (m *MutateRequest_RecordMutation) XXX_Size() int {
	return xxx_messageInfo_MutateRequest_RecordMutation.Size(m)
}
func (m *MutateRequest_RecordMutation) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateRequest_RecordMutation.DiscardUnknown(m)
}

var xxx_messageInfo_MutateRequest_RecordMutation proto.InternalMessageInfo

func (m *MutateRequest_RecordMutation) GetKey() *engine.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *MutateRequest_RecordMutation) GetFieldMutations() []*MutateRequest_RecordMutation_FieldMutation {
	if m != nil {
		return m.FieldMutations
	}
	return nil
}

// MutateField defines a mutation of a field.
type MutateRequest_RecordMutation_FieldMutation struct {
	// Field is the name of the field to mutate.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Types that are valid to be assigned to Mutation:
	//	*MutateRequest_RecordMutation_FieldMutation_Set
	//	*MutateRequest_RecordMutation_FieldMutation_Increment
	//	*MutateRequest_RecordMutation_FieldMutation_Append
	Mutation             isMutateRequest_RecordMutation_FieldMutation_Mutation `protobuf_oneof:"mutation"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *MutateRequest_RecordMutation_FieldMutation) Reset() {
	*m = MutateRequest_RecordMutation_FieldMutation{}
}
func (m *MutateRequest_RecordMutation_FieldMutation) String() string {
	return proto.CompactTextString(m)
}
func (*MutateRequest_RecordMutation_FieldMutation) ProtoMessage() {}
func (*MutateRequest_RecordMutation_FieldMutation) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{11, 0, 0}
}

func (m *MutateRequest_RecordMutation_FieldMutation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation.Unmarshal(m, b)
}
func (m *MutateRequest_RecordMutation_FieldMutation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation.Marshal(b, m, deterministic)
}
func (m *MutateRequest_RecordMutation_FieldMutation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation.Merge(m, src)
}
func (m *MutateRequest_RecordMutation_FieldMutation) XXX_Size() int {
	return xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation.Size(m)
}
func (m *MutateRequest_RecordMutation_FieldMutation) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation.DiscardUnknown(m)
}

var xxx_messageInfo_MutateRequest_RecordMutation_FieldMutation proto.InternalMessageInfo

func (m *MutateRequest_RecordMutation_FieldMutation) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

type isMutateRequest_RecordMutation_FieldMutation_Mutation interface {
	isMutateRequest_RecordMutation_FieldMutation_Mutation()
}

type MutateRequest_RecordMutation_FieldMutation_Set struct {
	Set *engine.Value `protobuf:"bytes,2,opt,name=set,proto3,oneof"`
}

type MutateRequest_RecordMutation_FieldMutation_Increment struct {
	Increment *engine.Value `protobuf:"bytes,3,opt,name=increment,proto3,oneof"`
}

type MutateRequest_RecordMutation_FieldMutation_Append struct {
	Append *engine.Value `protobuf:"bytes,4,opt,name=append,proto3,oneof"`
}

func (*MutateRequest_RecordMutation_FieldMutation_Set) isMutateRequest_RecordMutation_FieldMutation_Mutation() {
}

func (*MutateRequest_RecordMutation_FieldMutation_Increment) isMutateRequest_RecordMutation_FieldMutation_Mutation() {
}

func (*MutateRequest_RecordMutation_FieldMutation_Append) isMutateRequest_RecordMutation_FieldMutation_Mutation() {
}

func (m *MutateRequest_RecordMutation_FieldMutation) GetMutation() isMutateRequest_RecordMutation_FieldMutation_Mutation {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *MutateRequest_RecordMutation_FieldMutation) GetSet() *engine.Value {
	if x, ok := m.GetMutation().(*MutateRequest_RecordMutation_FieldMutation_Set); ok {
		return x.Set
	}
	return nil
}

func (m *MutateRequest_RecordMutation_FieldMutation) GetIncrement() *engine.Value {
	if x, ok := m.GetMutation().(*MutateRequest_RecordMutation_FieldMutation_Increment); ok {
		return x.Increment
	}
	return nil
}

func (m *MutateRequest_RecordMutation_FieldMutation) GetAppend() *engine.Value {
	if x, ok := m.GetMutation().(*MutateRequest_RecordMutation_FieldMutation_Append); ok {
		return x.Append
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MutateRequest_RecordMutation_FieldMutation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MutateRequest_RecordMutation_FieldMutation_Set)(nil),
		(*MutateRequest_RecordMutation_FieldMutation_Increment)(nil),
		(*MutateRequest_RecordMutation_FieldMutation_Append)(nil),
	}
}

type MutateResponse struct {
	Status               []*rpc.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MutateResponse) Reset()         { *m = MutateResponse{} }
func (m *MutateResponse) String() string { return proto.CompactTextString(m) }
func (*MutateResponse) ProtoMessage()    {}
func (*MutateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{12}
}

func (m *MutateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MutateResponse.Unmarshal(m, b)
}
func (m *MutateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MutateResponse.Marshal(b, m, deterministic)
}
func (m *MutateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MutateResponse.Merge(m, src)
}
func (m *MutateResponse) XXX_Size() int {
	return xxx_messageInfo_MutateResponse.Size(m)
}
func (m *MutateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MutateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MutateResponse proto.InternalMessageInfo

func (m *MutateResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type SetRequest struct {
	KeysScores           []*KeyScores `protobuf:"bytes,1,rep,name=keys_scores,json=keysScores,proto3" json:"keys_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{13}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetKeysScores() []*KeyScores {
	if m != nil {
		return m.KeysScores
	}
	return nil
}

type SetResponse struct {
	Status               []*rpc.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SetResponse) Reset()         { *m = SetResponse{} }
func (m *SetResponse) String() string { return proto.CompactTextString(m) }
func (*SetResponse) ProtoMessage()    {}
func (*SetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{14}
}

func (m *SetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetResponse.Unmarshal(m, b)
}
func (m *SetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetResponse.Marshal(b, m, deterministic)
}
func (m *SetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetResponse.Merge(m, src)
}
func (m *SetResponse) XXX_Size() int {
	return xxx_messageInfo_SetResponse.Size(m)
}
func (m *SetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetResponse proto.InternalMessageInfo

func (m *SetResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type IncrementRequest struct {
	KeysScores           []*KeyScores `protobuf:"bytes,1,rep,name=keys_scores,json=keysScores,proto3" json:"keys_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *IncrementRequest) Reset()         { *m = IncrementRequest{} }
func (m *IncrementRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementRequest) ProtoMessage()    {}
func (*IncrementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{15}
}

func (m *IncrementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementRequest.Unmarshal(m, b)
}
func (m *IncrementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementRequest.Marshal(b, m, deterministic)
}
func (m *IncrementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementRequest.Merge(m, src)
}
func (m *IncrementRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementRequest.Size(m)
}
func (m *IncrementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementRequest proto.InternalMessageInfo

func (m *IncrementRequest) GetKeysScores() []*KeyScores {
	if m != nil {
		return m.KeysScores
	}
	return nil
}

// Increment response is
type IncrementResponse struct {
	Status               []*rpc.Status `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *IncrementResponse) Reset()         { *m = IncrementResponse{} }
func (m *IncrementResponse) String() string { return proto.CompactTextString(m) }
func (*IncrementResponse) ProtoMessage()    {}
func (*IncrementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{16}
}

func (m *IncrementResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementResponse.Unmarshal(m, b)
}
func (m *IncrementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementResponse.Marshal(b, m, deterministic)
}
func (m *IncrementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementResponse.Merge(m, src)
}
func (m *IncrementResponse) XXX_Size() int {
	return xxx_messageInfo_IncrementResponse.Size(m)
}
func (m *IncrementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementResponse proto.InternalMessageInfo

func (m *IncrementResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type KeyScores struct {
	// Record identifier key.
	Key *engine.Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Scores to update.
	Scores               []*KeyScores_Score `protobuf:"bytes,2,rep,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *KeyScores) Reset()         { *m = KeyScores{} }
func (m *KeyScores) String() string { return proto.CompactTextString(m) }
func (*KeyScores) ProtoMessage()    {}
func (*KeyScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{17}
}

func (m *KeyScores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyScores.Unmarshal(m, b)
}
func (m *KeyScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyScores.Marshal(b, m, deterministic)
}
func (m *KeyScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyScores.Merge(m, src)
}
func (m *KeyScores) XXX_Size() int {
	return xxx_messageInfo_KeyScores.Size(m)
}
func (m *KeyScores) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyScores.DiscardUnknown(m)
}

var xxx_messageInfo_KeyScores proto.InternalMessageInfo

func (m *KeyScores) GetKey() *engine.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyScores) GetScores() []*KeyScores_Score {
	if m != nil {
		return m.Scores
	}
	return nil
}

// Score values for an array of terms.
type KeyScores_Score struct {
	// Terms to score.
	Terms []string `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
	// Count of interactions (uint16).
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// Score for interactions.
	Score                float32  `protobuf:"fixed32,3,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyScores_Score) Reset()         { *m = KeyScores_Score{} }
func (m *KeyScores_Score) String() string { return proto.CompactTextString(m) }
func (*KeyScores_Score) ProtoMessage()    {}
func (*KeyScores_Score) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{17, 0}
}

func (m *KeyScores_Score) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyScores_Score.Unmarshal(m, b)
}
func (m *KeyScores_Score) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyScores_Score.Marshal(b, m, deterministic)
}
func (m *KeyScores_Score) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyScores_Score.Merge(m, src)
}
func (m *KeyScores_Score) XXX_Size() int {
	return xxx_messageInfo_KeyScores_Score.Size(m)
}
func (m *KeyScores_Score) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyScores_Score.DiscardUnknown(m)
}

var xxx_messageInfo_KeyScores_Score proto.InternalMessageInfo

func (m *KeyScores_Score) GetTerms() []string {
	if m != nil {
		return m.Terms
	}
	return nil
}

func (m *KeyScores_Score) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *KeyScores_Score) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type ReplaceRequest struct {
	// List of key-records pairs to replace.
	KeyRecords           []*ReplaceRequest_KeyRecord `protobuf:"bytes,1,rep,name=key_records,json=keyRecords,proto3" json:"key_records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReplaceRequest) Reset()         { *m = ReplaceRequest{} }
func (m *ReplaceRequest) String() string { return proto.CompactTextString(m) }
func (*ReplaceRequest) ProtoMessage()    {}
func (*ReplaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{18}
}

func (m *ReplaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceRequest.Unmarshal(m, b)
}
func (m *ReplaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceRequest.Marshal(b, m, deterministic)
}
func (m *ReplaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceRequest.Merge(m, src)
}
func (m *ReplaceRequest) XXX_Size() int {
	return xxx_messageInfo_ReplaceRequest.Size(m)
}
func (m *ReplaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceRequest proto.InternalMessageInfo

func (m *ReplaceRequest) GetKeyRecords() []*ReplaceRequest_KeyRecord {
	if m != nil {
		return m.KeyRecords
	}
	return nil
}

// Key record pairs for replacement.
type ReplaceRequest_KeyRecord struct {
	// Key to identify record with.
	Key *engine.Key `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Record to replace existing record with.
	Record               *Record  `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplaceRequest_KeyRecord) Reset()         { *m = ReplaceRequest_KeyRecord{} }
func (m *ReplaceRequest_KeyRecord) String() string { return proto.CompactTextString(m) }
func (*ReplaceRequest_KeyRecord) ProtoMessage()    {}
func (*ReplaceRequest_KeyRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{18, 0}
}

func (m *ReplaceRequest_KeyRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceRequest_KeyRecord.Unmarshal(m, b)
}
func (m *ReplaceRequest_KeyRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceRequest_KeyRecord.Marshal(b, m, deterministic)
}
func (m *ReplaceRequest_KeyRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceRequest_KeyRecord.Merge(m, src)
}
func (m *ReplaceRequest_KeyRecord) XXX_Size() int {
	return xxx_messageInfo_ReplaceRequest_KeyRecord.Size(m)
}
func (m *ReplaceRequest_KeyRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceRequest_KeyRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceRequest_KeyRecord proto.InternalMessageInfo

func (m *ReplaceRequest_KeyRecord) GetKey() *engine.Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *ReplaceRequest_KeyRecord) GetRecord() *Record {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReplaceResponse struct {
	// Keys, non-empty for when replace actually did an Add instead.
	Keys []*engine.Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	// Status for each replacement.
	Status               []*rpc.Status `protobuf:"bytes,2,rep,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReplaceResponse) Reset()         { *m = ReplaceResponse{} }
func (m *ReplaceResponse) String() string { return proto.CompactTextString(m) }
func (*ReplaceResponse) ProtoMessage()    {}
func (*ReplaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4f44fcef8f089288, []int{19}
}

func (m *ReplaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplaceResponse.Unmarshal(m, b)
}
func (m *ReplaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplaceResponse.Marshal(b, m, deterministic)
}
func (m *ReplaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplaceResponse.Merge(m, src)
}
func (m *ReplaceResponse) XXX_Size() int {
	return xxx_messageInfo_ReplaceResponse.Size(m)
}
func (m *ReplaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplaceResponse proto.InternalMessageInfo

func (m *ReplaceResponse) GetKeys() []*engine.Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *ReplaceResponse) GetStatus() []*rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*ExistsResponse)(nil), "sajari.engine.store.record.ExistsResponse")
	proto.RegisterType((*Transform)(nil), "sajari.engine.store.record.Transform")
	proto.RegisterType((*Record)(nil), "sajari.engine.store.record.Record")
	proto.RegisterMapType((map[string]*ValueIndexes)(nil), "sajari.engine.store.record.Record.ValueIndexesEntry")
	proto.RegisterMapType((map[string]*engine.Value)(nil), "sajari.engine.store.record.Record.ValuesEntry")
	proto.RegisterType((*ValueIndexes)(nil), "sajari.engine.store.record.ValueIndexes")
	proto.RegisterType((*ValueIndex)(nil), "sajari.engine.store.record.ValueIndex")
	proto.RegisterType((*Terms)(nil), "sajari.engine.store.record.Terms")
	proto.RegisterType((*Records)(nil), "sajari.engine.store.record.Records")
	proto.RegisterType((*AddResponse)(nil), "sajari.engine.store.record.AddResponse")
	proto.RegisterType((*GetResponse)(nil), "sajari.engine.store.record.GetResponse")
	proto.RegisterType((*DeleteResponse)(nil), "sajari.engine.store.record.DeleteResponse")
	proto.RegisterType((*Keys)(nil), "sajari.engine.store.record.Keys")
	proto.RegisterType((*MutateRequest)(nil), "sajari.engine.store.record.MutateRequest")
	proto.RegisterType((*MutateRequest_RecordMutation)(nil), "sajari.engine.store.record.MutateRequest.RecordMutation")
	proto.RegisterType((*MutateRequest_RecordMutation_FieldMutation)(nil), "sajari.engine.store.record.MutateRequest.RecordMutation.FieldMutation")
	proto.RegisterType((*MutateResponse)(nil), "sajari.engine.store.record.MutateResponse")
	proto.RegisterType((*SetRequest)(nil), "sajari.engine.store.record.SetRequest")
	proto.RegisterType((*SetResponse)(nil), "sajari.engine.store.record.SetResponse")
	proto.RegisterType((*IncrementRequest)(nil), "sajari.engine.store.record.IncrementRequest")
	proto.RegisterType((*IncrementResponse)(nil), "sajari.engine.store.record.IncrementResponse")
	proto.RegisterType((*KeyScores)(nil), "sajari.engine.store.record.KeyScores")
	proto.RegisterType((*KeyScores_Score)(nil), "sajari.engine.store.record.KeyScores.Score")
	proto.RegisterType((*ReplaceRequest)(nil), "sajari.engine.store.record.ReplaceRequest")
	proto.RegisterType((*ReplaceRequest_KeyRecord)(nil), "sajari.engine.store.record.ReplaceRequest.KeyRecord")
	proto.RegisterType((*ReplaceResponse)(nil), "sajari.engine.store.record.ReplaceResponse")
}

func init() {
	proto.RegisterFile("sajari/engine/store/record/record.proto", fileDescriptor_4f44fcef8f089288)
}

var fileDescriptor_4f44fcef8f089288 = []byte{
	// 951 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x6e, 0xdc, 0x44,
	0x14, 0xc6, 0xeb, 0x5d, 0x97, 0x3d, 0xdb, 0xfc, 0x74, 0x54, 0x89, 0xc5, 0x12, 0x28, 0x18, 0x68,
	0x97, 0x84, 0x7a, 0xa5, 0x50, 0x41, 0xa8, 0x22, 0x50, 0x0b, 0x49, 0x89, 0xa2, 0x0a, 0x34, 0x1b,
	0x22, 0xb5, 0x5c, 0xac, 0x5c, 0xfb, 0x24, 0x98, 0x64, 0x6d, 0xe3, 0x99, 0x2d, 0xdd, 0x97, 0xe0,
	0x25, 0x78, 0x92, 0x5e, 0xf2, 0x02, 0x3c, 0x00, 0x37, 0x5c, 0xf0, 0x12, 0x68, 0x7e, 0xec, 0x8c,
	0xb7, 0xa9, 0xd7, 0xdd, 0xd0, 0xab, 0xf5, 0xcc, 0x7c, 0xe7, 0x3b, 0xdf, 0x39, 0x3e, 0xe7, 0x8c,
	0x17, 0x6e, 0xb3, 0xe0, 0x97, 0x20, 0x8f, 0x87, 0x98, 0x9c, 0xc6, 0x09, 0x0e, 0x19, 0x4f, 0x73,
	0x1c, 0xe6, 0x18, 0xa6, 0x79, 0xa4, 0x7f, 0xfc, 0x2c, 0x4f, 0x79, 0x4a, 0x5c, 0x05, 0xf4, 0x15,
	0xd0, 0x97, 0x40, 0x5f, 0x21, 0xdc, 0x77, 0xab, 0x24, 0xcf, 0x82, 0xf3, 0x29, 0x2a, 0x33, 0xf7,
	0x9d, 0xea, 0xd1, 0x19, 0xce, 0xe6, 0x0e, 0xf2, 0x2c, 0x1c, 0x32, 0x1e, 0xf0, 0x29, 0x53, 0x07,
	0xde, 0x2e, 0xac, 0xee, 0x3d, 0x8f, 0x19, 0x67, 0x14, 0x59, 0x96, 0x26, 0x0c, 0xc9, 0x26, 0x38,
	0x0a, 0xd1, 0xb7, 0x36, 0xec, 0x41, 0x6f, 0x9b, 0xf8, 0x5a, 0x4b, 0x9e, 0x85, 0xfe, 0x48, 0x9e,
	0x50, 0x8d, 0xf0, 0xb6, 0xa0, 0x7b, 0x94, 0x07, 0x09, 0x3b, 0x49, 0xf3, 0x09, 0x79, 0x1f, 0x20,
	0x8e, 0x30, 0xe1, 0xf1, 0x49, 0x8c, 0x79, 0xdf, 0xda, 0xb0, 0x06, 0x5d, 0x6a, 0xec, 0x78, 0xff,
	0xb4, 0xc0, 0xa1, 0x32, 0x04, 0xb2, 0x0f, 0x8e, 0x94, 0x5d, 0xf8, 0xf0, 0xfd, 0x57, 0xc7, 0xeb,
	0x2b, 0x1b, 0xff, 0x58, 0x1a, 0xec, 0x25, 0x3c, 0x9f, 0x51, 0x6d, 0x4d, 0x1e, 0xc3, 0x8a, 0x7c,
	0x1a, 0xc7, 0x49, 0x84, 0xcf, 0x91, 0xf5, 0x5b, 0x92, 0xee, 0x6e, 0x53, 0xba, 0x03, 0x65, 0xa6,
	0x48, 0xaf, 0x3f, 0x33, 0xb6, 0xdc, 0xef, 0xa1, 0x67, 0x78, 0x24, 0xeb, 0x60, 0x9f, 0xe1, 0x4c,
	0x47, 0x25, 0x1e, 0xc9, 0x26, 0x74, 0xa4, 0x41, 0xbf, 0xb5, 0x61, 0x0d, 0x7a, 0xdb, 0x37, 0xe7,
	0x7c, 0x4a, 0x63, 0xaa, 0x20, 0xf7, 0x5a, 0x3b, 0x96, 0x1b, 0xc3, 0x8d, 0x97, 0x7c, 0x5e, 0x42,
	0xfb, 0x55, 0x95, 0x76, 0x50, 0x17, 0x8a, 0xc9, 0x67, 0xb8, 0xf2, 0x7e, 0x82, 0xeb, 0xe6, 0x11,
	0x39, 0x9c, 0x4f, 0x93, 0xca, 0xfa, 0xad, 0x66, 0xdc, 0xd5, 0xc4, 0x78, 0x8f, 0x01, 0x2e, 0xce,
	0x08, 0x81, 0x36, 0xcb, 0x30, 0xd4, 0x11, 0xc8, 0x67, 0xf2, 0x05, 0x74, 0x38, 0xe6, 0x93, 0xe2,
	0x6d, 0x7c, 0x50, 0xe7, 0xe6, 0x48, 0x00, 0xa9, 0xc2, 0x7b, 0xef, 0x41, 0x47, 0xae, 0xc9, 0xcd,
	0x82, 0x41, 0x08, 0xed, 0x16, 0xc7, 0xbf, 0x5b, 0x70, 0x4d, 0xbd, 0x3d, 0x46, 0x76, 0xe1, 0x9a,
	0x62, 0x28, 0x82, 0xf1, 0x16, 0xbf, 0x73, 0x5a, 0x98, 0x90, 0x3d, 0x00, 0x5e, 0xd4, 0x6d, 0x21,
	0xf3, 0xe3, 0x5a, 0x99, 0x05, 0x9a, 0x1a, 0x86, 0x5e, 0x00, 0xbd, 0xfb, 0x51, 0x54, 0x76, 0xce,
	0x2d, 0x68, 0x9f, 0xe1, 0xec, 0xa5, 0xbe, 0xd1, 0x7c, 0x87, 0x38, 0xa3, 0xf2, 0xdc, 0xe8, 0xb0,
	0xd6, 0xc2, 0x0e, 0xfb, 0x0d, 0x7a, 0x0f, 0x91, 0x97, 0x2e, 0xae, 0x16, 0xf6, 0xeb, 0x38, 0xde,
	0x85, 0xd5, 0x6f, 0xf1, 0x1c, 0x39, 0x2e, 0x35, 0x18, 0x7c, 0x68, 0x1f, 0x8a, 0x50, 0x1b, 0xa6,
	0xc4, 0xfb, 0xdb, 0x86, 0x95, 0x47, 0x53, 0x1e, 0x08, 0x77, 0xbf, 0x4e, 0x91, 0x71, 0x12, 0xc2,
	0xba, 0x92, 0x3d, 0x9e, 0x88, 0xfd, 0x38, 0x4d, 0x0a, 0x96, 0x9d, 0xba, 0x90, 0x2b, 0x24, 0x3a,
	0x01, 0x8f, 0x34, 0x01, 0x5d, 0xcb, 0x2b, 0x6b, 0xe6, 0xfe, 0xdb, 0x82, 0xd5, 0x2a, 0x86, 0x7c,
	0x74, 0xd1, 0x91, 0x97, 0x0b, 0x96, 0x5d, 0x9a, 0xc2, 0xda, 0x49, 0x8c, 0xe7, 0xa6, 0x38, 0x95,
	0xd2, 0xfd, 0x65, 0xc5, 0xf9, 0xfb, 0x82, 0xaf, 0x94, 0xba, 0x7a, 0x62, 0x2e, 0x99, 0xfb, 0xc2,
	0x82, 0x95, 0x0a, 0x42, 0xf4, 0x88, 0xc4, 0xe8, 0xd6, 0x53, 0x0b, 0x32, 0x00, 0x9b, 0x21, 0xaf,
	0x9b, 0x49, 0xdf, 0xbd, 0x45, 0x05, 0x84, 0xdc, 0x85, 0x6e, 0x9c, 0x84, 0x39, 0x4e, 0x30, 0xe1,
	0x7d, 0xbb, 0x16, 0x7f, 0x01, 0x24, 0x3e, 0x38, 0x41, 0x96, 0x61, 0x12, 0xf5, 0xdb, 0xb5, 0x26,
	0x1a, 0xf5, 0x00, 0xe0, 0xed, 0x22, 0x45, 0xa2, 0xa4, 0x8a, 0x0c, 0x2c, 0x51, 0x52, 0x47, 0x00,
	0x23, 0xd1, 0x09, 0xaa, 0x3c, 0xf6, 0xa1, 0x27, 0x0a, 0x67, 0xcc, 0xc2, 0x34, 0x2f, 0x07, 0x5a,
	0x6d, 0x0b, 0x1f, 0xe2, 0x6c, 0x24, 0xc1, 0x14, 0x84, 0xa5, 0x7a, 0xf6, 0xbe, 0x84, 0xde, 0xc8,
	0xe8, 0xaf, 0xd7, 0x11, 0xf4, 0x04, 0xd6, 0x0f, 0x8a, 0xbc, 0xfc, 0xdf, 0xb2, 0xbe, 0x86, 0x1b,
	0x06, 0xf7, 0x12, 0xe2, 0x5e, 0x58, 0xd0, 0x2d, 0xa9, 0x1b, 0x16, 0xf5, 0x37, 0xe0, 0x68, 0xdd,
	0xaa, 0x96, 0xb7, 0x1a, 0xe9, 0xf6, 0xe5, 0x0f, 0xd5, 0xa6, 0xee, 0x01, 0x74, 0xe4, 0xc6, 0xe5,
	0x33, 0x5c, 0xec, 0x86, 0xe9, 0x34, 0x51, 0x15, 0xda, 0xa1, 0x6a, 0x21, 0x76, 0xa5, 0xb9, 0xac,
	0xc3, 0x16, 0x55, 0x0b, 0xef, 0x2f, 0x4b, 0x74, 0x67, 0x76, 0x1e, 0x84, 0xe5, 0x54, 0xf8, 0x51,
	0xe6, 0x77, 0x5c, 0x9d, 0x81, 0x0b, 0xae, 0x7b, 0x93, 0x40, 0x06, 0xab, 0xa6, 0xa2, 0x48, 0xb7,
	0xbe, 0x4d, 0xdc, 0x89, 0x4c, 0x96, 0xfe, 0x38, 0x69, 0x96, 0xac, 0x7b, 0xe0, 0x28, 0x0f, 0xba,
	0xd7, 0x9a, 0x0c, 0x62, 0x6d, 0xe1, 0x21, 0xac, 0x95, 0xb2, 0xde, 0xdc, 0xdd, 0xb1, 0xfd, 0x47,
	0x1b, 0x3a, 0x23, 0x21, 0x83, 0x8c, 0xc0, 0xbe, 0x1f, 0x45, 0xe4, 0xc3, 0xc5, 0x1a, 0x99, 0x7b,
	0xbb, 0x0e, 0x64, 0x5e, 0x77, 0x4f, 0xc5, 0x6d, 0x2c, 0xa3, 0x20, 0x9b, 0xcd, 0xdf, 0x80, 0xbb,
	0xd5, 0x08, 0xab, 0x7d, 0xfc, 0x00, 0xf6, 0x43, 0xe4, 0x64, 0x63, 0x41, 0x25, 0x2e, 0x50, 0x6d,
	0xde, 0xa0, 0xc7, 0xe0, 0xa8, 0x7b, 0xad, 0x01, 0x69, 0x6d, 0x58, 0x73, 0xb7, 0xe3, 0x18, 0x1c,
	0x35, 0xdc, 0xc8, 0x27, 0x8d, 0xaf, 0x80, 0x7a, 0x07, 0x73, 0xb3, 0xf2, 0x18, 0x1c, 0xf5, 0xa5,
	0x7e, 0x55, 0xe1, 0xd5, 0xef, 0xfd, 0xed, 0x3f, 0xad, 0xa2, 0x63, 0x8f, 0xc1, 0x1e, 0x21, 0x27,
	0xb5, 0x9f, 0x85, 0x17, 0x23, 0xb8, 0x3e, 0xe5, 0xe6, 0x50, 0xfd, 0x19, 0xba, 0xe5, 0x30, 0x23,
	0x9f, 0xd6, 0x59, 0xcd, 0xcf, 0x53, 0xf7, 0x4e, 0x43, 0xb4, 0xf2, 0xf4, 0x60, 0xe7, 0xc9, 0xe7,
	0x61, 0x1a, 0x61, 0x61, 0x14, 0xa6, 0x93, 0xa1, 0xfc, 0x9b, 0x73, 0x8a, 0xc9, 0x9d, 0xd3, 0x74,
	0xf8, 0xea, 0x7f, 0x5f, 0x4f, 0x1d, 0x89, 0xfb, 0xec, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3b,
	0x24, 0x92, 0x31, 0xa2, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreClient is the client API for Store service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreClient interface {
	// Add creates new records in the collection returning a key for each
	// stored record.  The key can then be used in subsequent requests to
	// get/delete/patch.
	Add(ctx context.Context, in *Records, opts ...grpc.CallOption) (*AddResponse, error)
	// Replace existing records in the collection with the new values. If
	// a record corresponding to the key does not already exist, then it
	// is added instead.
	Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error)
	// Get retrieves the records corresponding to the listed keys.
	Get(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*GetResponse, error)
	// Delete removes the records corresponding to the listed keys.
	Delete(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Mutate applies key-value updates to records corresponding to
	// keys.
	Mutate(ctx context.Context, in *MutateRequest, opts ...grpc.CallOption) (*MutateResponse, error)
	// Exists
	Exists(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*ExistsResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) Add(ctx context.Context, in *Records, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Replace(ctx context.Context, in *ReplaceRequest, opts ...grpc.CallOption) (*ReplaceResponse, error) {
	out := new(ReplaceResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Replace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Get(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Delete(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Mutate(ctx context.Context, in *MutateRequest, opts ...grpc.CallOption) (*MutateResponse, error) {
	out := new(MutateResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Mutate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Exists(ctx context.Context, in *Keys, opts ...grpc.CallOption) (*ExistsResponse, error) {
	out := new(ExistsResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Store/Exists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServer is the server API for Store service.
type StoreServer interface {
	// Add creates new records in the collection returning a key for each
	// stored record.  The key can then be used in subsequent requests to
	// get/delete/patch.
	Add(context.Context, *Records) (*AddResponse, error)
	// Replace existing records in the collection with the new values. If
	// a record corresponding to the key does not already exist, then it
	// is added instead.
	Replace(context.Context, *ReplaceRequest) (*ReplaceResponse, error)
	// Get retrieves the records corresponding to the listed keys.
	Get(context.Context, *Keys) (*GetResponse, error)
	// Delete removes the records corresponding to the listed keys.
	Delete(context.Context, *Keys) (*DeleteResponse, error)
	// Mutate applies key-value updates to records corresponding to
	// keys.
	Mutate(context.Context, *MutateRequest) (*MutateResponse, error)
	// Exists
	Exists(context.Context, *Keys) (*ExistsResponse, error)
}

// UnimplementedStoreServer can be embedded to have forward compatible implementations.
type UnimplementedStoreServer struct {
}

func (*UnimplementedStoreServer) Add(ctx context.Context, req *Records) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedStoreServer) Replace(ctx context.Context, req *ReplaceRequest) (*ReplaceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Replace not implemented")
}
func (*UnimplementedStoreServer) Get(ctx context.Context, req *Keys) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedStoreServer) Delete(ctx context.Context, req *Keys) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedStoreServer) Mutate(ctx context.Context, req *MutateRequest) (*MutateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mutate not implemented")
}
func (*UnimplementedStoreServer) Exists(ctx context.Context, req *Keys) (*ExistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exists not implemented")
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Records)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Add(ctx, req.(*Records))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Replace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Replace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Replace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Replace(ctx, req.(*ReplaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Keys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Get(ctx, req.(*Keys))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Keys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Delete(ctx, req.(*Keys))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Mutate(ctx, req.(*MutateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_Exists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Keys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).Exists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Store/Exists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).Exists(ctx, req.(*Keys))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.engine.store.record.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _Store_Add_Handler,
		},
		{
			MethodName: "Replace",
			Handler:    _Store_Replace_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Store_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Store_Delete_Handler,
		},
		{
			MethodName: "Mutate",
			Handler:    _Store_Mutate_Handler,
		},
		{
			MethodName: "Exists",
			Handler:    _Store_Exists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/engine/store/record/record.proto",
}

// ScoreClient is the client API for Score service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ScoreClient interface {
	// SetScores sets record-term instance pos/neg scores in the Store.
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error)
	// IncrScores incrementally updates record-term instance pos/neg scores in the Store.
	Increment(ctx context.Context, in *IncrementRequest, opts ...grpc.CallOption) (*IncrementResponse, error)
}

type scoreClient struct {
	cc *grpc.ClientConn
}

func NewScoreClient(cc *grpc.ClientConn) ScoreClient {
	return &scoreClient{cc}
}

func (c *scoreClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResponse, error) {
	out := new(SetResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Score/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *scoreClient) Increment(ctx context.Context, in *IncrementRequest, opts ...grpc.CallOption) (*IncrementResponse, error) {
	out := new(IncrementResponse)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.record.Score/Increment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ScoreServer is the server API for Score service.
type ScoreServer interface {
	// SetScores sets record-term instance pos/neg scores in the Store.
	Set(context.Context, *SetRequest) (*SetResponse, error)
	// IncrScores incrementally updates record-term instance pos/neg scores in the Store.
	Increment(context.Context, *IncrementRequest) (*IncrementResponse, error)
}

// UnimplementedScoreServer can be embedded to have forward compatible implementations.
type UnimplementedScoreServer struct {
}

func (*UnimplementedScoreServer) Set(ctx context.Context, req *SetRequest) (*SetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedScoreServer) Increment(ctx context.Context, req *IncrementRequest) (*IncrementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Increment not implemented")
}

func RegisterScoreServer(s *grpc.Server, srv ScoreServer) {
	s.RegisterService(&_Score_serviceDesc, srv)
}

func _Score_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoreServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Score/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoreServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Score_Increment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ScoreServer).Increment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.record.Score/Increment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ScoreServer).Increment(ctx, req.(*IncrementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Score_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.engine.store.record.Score",
	HandlerType: (*ScoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _Score_Set_Handler,
		},
		{
			MethodName: "Increment",
			Handler:    _Score_Increment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/engine/store/record/record.proto",
}
