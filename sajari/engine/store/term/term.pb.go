// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sajari/engine/store/term/term.proto

package term

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Values contains a list of term values to lookup.
type Values struct {
	// Value representation of a term.
	Values               []string `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Values) Reset()         { *m = Values{} }
func (m *Values) String() string { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()    {}
func (*Values) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97de03b92ad32fd, []int{0}
}

func (m *Values) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Values.Unmarshal(m, b)
}
func (m *Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Values.Marshal(b, m, deterministic)
}
func (m *Values) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Values.Merge(m, src)
}
func (m *Values) XXX_Size() int {
	return xxx_messageInfo_Values.Size(m)
}
func (m *Values) XXX_DiscardUnknown() {
	xxx_messageInfo_Values.DiscardUnknown(m)
}

var xxx_messageInfo_Values proto.InternalMessageInfo

func (m *Values) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Information for a list of terms.
type Infos struct {
	// Information for a list of terms.
	Infos                []*Infos_Info `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Infos) Reset()         { *m = Infos{} }
func (m *Infos) String() string { return proto.CompactTextString(m) }
func (*Infos) ProtoMessage()    {}
func (*Infos) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97de03b92ad32fd, []int{1}
}

func (m *Infos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Infos.Unmarshal(m, b)
}
func (m *Infos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Infos.Marshal(b, m, deterministic)
}
func (m *Infos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infos.Merge(m, src)
}
func (m *Infos) XXX_Size() int {
	return xxx_messageInfo_Infos.Size(m)
}
func (m *Infos) XXX_DiscardUnknown() {
	xxx_messageInfo_Infos.DiscardUnknown(m)
}

var xxx_messageInfo_Infos proto.InternalMessageInfo

func (m *Infos) GetInfos() []*Infos_Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

// Term information
type Infos_Info struct {
	// Internal identifier for term.
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// String representation.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Number of records that contain the term.
	NumDocs uint32 `protobuf:"varint,3,opt,name=num_docs,json=numDocs,proto3" json:"num_docs,omitempty"`
	// Number of words in the term.
	NumWords uint32 `protobuf:"varint,4,opt,name=num_words,json=numWords,proto3" json:"num_words,omitempty"`
	// Hardcoded score attributed to the term.
	Hardcoded uint32 `protobuf:"varint,5,opt,name=hardcoded,proto3" json:"hardcoded,omitempty"`
	// Infogain score attributed to the term.
	Infogain uint32 `protobuf:"varint,6,opt,name=infogain,proto3" json:"infogain,omitempty"`
	// Positive interactions (count).
	Pos uint32 `protobuf:"varint,7,opt,name=pos,proto3" json:"pos,omitempty"`
	// Negative interactions (count).
	Neg                  uint32   `protobuf:"varint,8,opt,name=neg,proto3" json:"neg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Infos_Info) Reset()         { *m = Infos_Info{} }
func (m *Infos_Info) String() string { return proto.CompactTextString(m) }
func (*Infos_Info) ProtoMessage()    {}
func (*Infos_Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_f97de03b92ad32fd, []int{1, 0}
}

func (m *Infos_Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Infos_Info.Unmarshal(m, b)
}
func (m *Infos_Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Infos_Info.Marshal(b, m, deterministic)
}
func (m *Infos_Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infos_Info.Merge(m, src)
}
func (m *Infos_Info) XXX_Size() int {
	return xxx_messageInfo_Infos_Info.Size(m)
}
func (m *Infos_Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Infos_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Infos_Info proto.InternalMessageInfo

func (m *Infos_Info) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Infos_Info) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Infos_Info) GetNumDocs() uint32 {
	if m != nil {
		return m.NumDocs
	}
	return 0
}

func (m *Infos_Info) GetNumWords() uint32 {
	if m != nil {
		return m.NumWords
	}
	return 0
}

func (m *Infos_Info) GetHardcoded() uint32 {
	if m != nil {
		return m.Hardcoded
	}
	return 0
}

func (m *Infos_Info) GetInfogain() uint32 {
	if m != nil {
		return m.Infogain
	}
	return 0
}

func (m *Infos_Info) GetPos() uint32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Infos_Info) GetNeg() uint32 {
	if m != nil {
		return m.Neg
	}
	return 0
}

func init() {
	proto.RegisterType((*Values)(nil), "sajari.engine.store.term.Values")
	proto.RegisterType((*Infos)(nil), "sajari.engine.store.term.Infos")
	proto.RegisterType((*Infos_Info)(nil), "sajari.engine.store.term.Infos.Info")
}

func init() {
	proto.RegisterFile("sajari/engine/store/term/term.proto", fileDescriptor_f97de03b92ad32fd)
}

var fileDescriptor_f97de03b92ad32fd = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xfc, 0x30,
	0x10, 0xc6, 0x69, 0xbb, 0xed, 0x6e, 0xe7, 0xcf, 0x5f, 0x64, 0x10, 0x89, 0xab, 0x60, 0x59, 0x3d,
	0xec, 0xc5, 0x16, 0x56, 0xf1, 0xe0, 0x51, 0x04, 0xf5, 0x26, 0x45, 0x14, 0xbc, 0x48, 0x6d, 0x62,
	0x8c, 0xd8, 0x64, 0x49, 0xba, 0xfa, 0x0a, 0x3e, 0x97, 0x4f, 0x26, 0x99, 0xb8, 0x78, 0x2a, 0x5e,
	0xc2, 0x7c, 0xdf, 0xf7, 0x9b, 0x76, 0x98, 0x81, 0x03, 0xd7, 0xbc, 0x36, 0x56, 0x55, 0x42, 0x4b,
	0xa5, 0x45, 0xe5, 0x7a, 0x63, 0x45, 0xd5, 0x0b, 0xdb, 0xd1, 0x53, 0x2e, 0xad, 0xe9, 0x0d, 0xb2,
	0x00, 0x95, 0x01, 0x2a, 0x09, 0x2a, 0x7d, 0x3e, 0x2b, 0x20, 0xbb, 0x6b, 0xde, 0x56, 0xc2, 0xe1,
	0x36, 0x64, 0xef, 0x54, 0xb1, 0xa8, 0x48, 0xe6, 0x79, 0xfd, 0xa3, 0x66, 0x9f, 0x31, 0xa4, 0xd7,
	0xfa, 0xd9, 0x38, 0x3c, 0x83, 0x54, 0xf9, 0x82, 0x80, 0x7f, 0x8b, 0xc3, 0x72, 0xe8, 0xab, 0x25,
	0xf1, 0xf4, 0xd6, 0xa1, 0x65, 0xfa, 0x15, 0xc1, 0xc8, 0x6b, 0xdc, 0x80, 0x58, 0x71, 0x16, 0x15,
	0xd1, 0xfc, 0x7f, 0x1d, 0x2b, 0x8e, 0x5b, 0x90, 0xd2, 0x8f, 0x58, 0x5c, 0x44, 0xf3, 0xbc, 0x0e,
	0x02, 0x77, 0x60, 0xa2, 0x57, 0xdd, 0x23, 0x37, 0xad, 0x63, 0x09, 0xb1, 0x63, 0xbd, 0xea, 0x2e,
	0x4c, 0xeb, 0x70, 0x17, 0x72, 0x1f, 0x7d, 0x18, 0xcb, 0x1d, 0x1b, 0x51, 0xe6, 0xd9, 0x7b, 0xaf,
	0x71, 0x0f, 0xf2, 0x97, 0xc6, 0xf2, 0xd6, 0x70, 0xc1, 0x59, 0x4a, 0xe1, 0xaf, 0x81, 0x53, 0x98,
	0xf8, 0x69, 0x64, 0xa3, 0x34, 0xcb, 0x42, 0xe7, 0x5a, 0xe3, 0x26, 0x24, 0x4b, 0xe3, 0xd8, 0x98,
	0x6c, 0x5f, 0x7a, 0x47, 0x0b, 0xc9, 0x26, 0xc1, 0xd1, 0x42, 0x2e, 0x6e, 0x60, 0x74, 0x2b, 0x6c,
	0x87, 0x57, 0x90, 0x5c, 0x8a, 0x1e, 0x8b, 0xe1, 0x05, 0x84, 0x9d, 0x4e, 0xf7, 0xff, 0x58, 0xd1,
	0xf9, 0xe9, 0xc3, 0x89, 0x1f, 0x6d, 0x8d, 0xb5, 0xa6, 0xab, 0xe8, 0x62, 0x52, 0xe8, 0x23, 0x69,
	0xaa, 0xa1, 0xdb, 0x3e, 0x65, 0x44, 0x1d, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x50, 0x0c,
	0x26, 0xfe, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TermClient is the client API for Term service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TermClient interface {
	// Get the term with specified values.  Ignores any values which don't
	// have an associated term.
	Get(ctx context.Context, in *Values, opts ...grpc.CallOption) (*Infos, error)
}

type termClient struct {
	cc *grpc.ClientConn
}

func NewTermClient(cc *grpc.ClientConn) TermClient {
	return &termClient{cc}
}

func (c *termClient) Get(ctx context.Context, in *Values, opts ...grpc.CallOption) (*Infos, error) {
	out := new(Infos)
	err := c.cc.Invoke(ctx, "/sajari.engine.store.term.Term/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TermServer is the server API for Term service.
type TermServer interface {
	// Get the term with specified values.  Ignores any values which don't
	// have an associated term.
	Get(context.Context, *Values) (*Infos, error)
}

func RegisterTermServer(s *grpc.Server, srv TermServer) {
	s.RegisterService(&_Term_serviceDesc, srv)
}

func _Term_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Values)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TermServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.term.Term/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TermServer).Get(ctx, req.(*Values))
	}
	return interceptor(ctx, in, info, handler)
}

var _Term_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.engine.store.term.Term",
	HandlerType: (*TermServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Term_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/engine/store/term/term.proto",
}
