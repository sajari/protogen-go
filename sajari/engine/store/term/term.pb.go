// Code generated by protoc-gen-go.
// source: sajari/engine/store/term/term.proto
// DO NOT EDIT!

/*
Package sajari_engine_store_term is a generated protocol buffer package.

It is generated from these files:
	sajari/engine/store/term/term.proto

It has these top-level messages:
	Values
	Infos
*/
package sajari_engine_store_term

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Values contains a list of term values to lookup.
type Values struct {
	// Value representation of a term.
	Values []string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (m *Values) Reset()                    { *m = Values{} }
func (m *Values) String() string            { return proto.CompactTextString(m) }
func (*Values) ProtoMessage()               {}
func (*Values) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Values) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Information for a list of terms.
type Infos struct {
	// Information for a list of terms.
	Infos []*Infos_Info `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
}

func (m *Infos) Reset()                    { *m = Infos{} }
func (m *Infos) String() string            { return proto.CompactTextString(m) }
func (*Infos) ProtoMessage()               {}
func (*Infos) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Infos) GetInfos() []*Infos_Info {
	if m != nil {
		return m.Infos
	}
	return nil
}

// Term information
type Infos_Info struct {
	// Internal identifier for term.
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// String representation.
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// Number of records that contain the term.
	NumDocs uint32 `protobuf:"varint,3,opt,name=num_docs,json=numDocs" json:"num_docs,omitempty"`
	// Number of words in the term.
	NumWords uint32 `protobuf:"varint,4,opt,name=num_words,json=numWords" json:"num_words,omitempty"`
	// Hardcoded score attributed to the term.
	Hardcoded uint32 `protobuf:"varint,5,opt,name=hardcoded" json:"hardcoded,omitempty"`
	// Infogain score attributed to the term.
	Infogain uint32 `protobuf:"varint,6,opt,name=infogain" json:"infogain,omitempty"`
	// Positive interactions (count).
	Pos uint32 `protobuf:"varint,7,opt,name=pos" json:"pos,omitempty"`
	// Negative interactions (count).
	Neg uint32 `protobuf:"varint,8,opt,name=neg" json:"neg,omitempty"`
}

func (m *Infos_Info) Reset()                    { *m = Infos_Info{} }
func (m *Infos_Info) String() string            { return proto.CompactTextString(m) }
func (*Infos_Info) ProtoMessage()               {}
func (*Infos_Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Infos_Info) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Infos_Info) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Infos_Info) GetNumDocs() uint32 {
	if m != nil {
		return m.NumDocs
	}
	return 0
}

func (m *Infos_Info) GetNumWords() uint32 {
	if m != nil {
		return m.NumWords
	}
	return 0
}

func (m *Infos_Info) GetHardcoded() uint32 {
	if m != nil {
		return m.Hardcoded
	}
	return 0
}

func (m *Infos_Info) GetInfogain() uint32 {
	if m != nil {
		return m.Infogain
	}
	return 0
}

func (m *Infos_Info) GetPos() uint32 {
	if m != nil {
		return m.Pos
	}
	return 0
}

func (m *Infos_Info) GetNeg() uint32 {
	if m != nil {
		return m.Neg
	}
	return 0
}

func init() {
	proto.RegisterType((*Values)(nil), "sajari.engine.store.term.Values")
	proto.RegisterType((*Infos)(nil), "sajari.engine.store.term.Infos")
	proto.RegisterType((*Infos_Info)(nil), "sajari.engine.store.term.Infos.Info")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Term service

type TermClient interface {
	// Get the term with specified values.  Ignores any values which don't
	// have an associated term.
	Get(ctx context.Context, in *Values, opts ...grpc.CallOption) (*Infos, error)
}

type termClient struct {
	cc *grpc.ClientConn
}

func NewTermClient(cc *grpc.ClientConn) TermClient {
	return &termClient{cc}
}

func (c *termClient) Get(ctx context.Context, in *Values, opts ...grpc.CallOption) (*Infos, error) {
	out := new(Infos)
	err := grpc.Invoke(ctx, "/sajari.engine.store.term.Term/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Term service

type TermServer interface {
	// Get the term with specified values.  Ignores any values which don't
	// have an associated term.
	Get(context.Context, *Values) (*Infos, error)
}

func RegisterTermServer(s *grpc.Server, srv TermServer) {
	s.RegisterService(&_Term_serviceDesc, srv)
}

func _Term_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Values)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TermServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sajari.engine.store.term.Term/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TermServer).Get(ctx, req.(*Values))
	}
	return interceptor(ctx, in, info, handler)
}

var _Term_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sajari.engine.store.term.Term",
	HandlerType: (*TermServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Term_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sajari/engine/store/term/term.proto",
}

func init() { proto.RegisterFile("sajari/engine/store/term/term.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xfc, 0x30,
	0x10, 0xc6, 0x69, 0xbb, 0xed, 0xb6, 0xf3, 0xe7, 0x2f, 0x32, 0x88, 0xc4, 0x2a, 0x58, 0x56, 0x0f,
	0x3d, 0xa5, 0xb0, 0xde, 0x3c, 0x0b, 0xea, 0x4d, 0x8a, 0xe8, 0x51, 0x6a, 0x13, 0x6b, 0xc4, 0x26,
	0x4b, 0xd2, 0xea, 0x2b, 0xf8, 0x5c, 0x3e, 0x99, 0x64, 0xa2, 0x78, 0x5a, 0xbc, 0x0c, 0xf3, 0x7d,
	0xdf, 0x6f, 0x92, 0x30, 0x81, 0x13, 0xd7, 0xbd, 0x74, 0x56, 0x35, 0x52, 0x0f, 0x4a, 0xcb, 0xc6,
	0x4d, 0xc6, 0xca, 0x66, 0x92, 0x76, 0xa4, 0xc2, 0x37, 0xd6, 0x4c, 0x06, 0x59, 0x80, 0x78, 0x80,
	0x38, 0x41, 0xdc, 0xe7, 0xab, 0x0a, 0xb2, 0xbb, 0xee, 0x75, 0x96, 0x0e, 0xf7, 0x21, 0x7b, 0xa3,
	0x8e, 0x45, 0x55, 0x52, 0x17, 0xed, 0xb7, 0x5a, 0x7d, 0xc4, 0x90, 0x5e, 0xeb, 0x27, 0xe3, 0xf0,
	0x1c, 0x52, 0xe5, 0x1b, 0x02, 0xfe, 0xad, 0x4f, 0xf9, 0xb6, 0x53, 0x39, 0xf1, 0x54, 0xdb, 0x30,
	0x52, 0x7e, 0x46, 0xb0, 0xf0, 0x1a, 0x77, 0x20, 0x56, 0x82, 0x45, 0x55, 0x54, 0xff, 0x6f, 0x63,
	0x25, 0x70, 0x0f, 0x52, 0xba, 0x88, 0xc5, 0x55, 0x54, 0x17, 0x6d, 0x10, 0x78, 0x00, 0xb9, 0x9e,
	0xc7, 0x07, 0x61, 0x7a, 0xc7, 0x12, 0x62, 0x97, 0x7a, 0x1e, 0x2f, 0x4c, 0xef, 0xf0, 0x10, 0x0a,
	0x1f, 0xbd, 0x1b, 0x2b, 0x1c, 0x5b, 0x50, 0xe6, 0xd9, 0x7b, 0xaf, 0xf1, 0x08, 0x8a, 0xe7, 0xce,
	0x8a, 0xde, 0x08, 0x29, 0x58, 0x4a, 0xe1, 0xaf, 0x81, 0x25, 0xe4, 0xfe, 0x35, 0x43, 0xa7, 0x34,
	0xcb, 0xc2, 0xe4, 0x8f, 0xc6, 0x5d, 0x48, 0x36, 0xc6, 0xb1, 0x25, 0xd9, 0xbe, 0xf5, 0x8e, 0x96,
	0x03, 0xcb, 0x83, 0xa3, 0xe5, 0xb0, 0xbe, 0x81, 0xc5, 0xad, 0xb4, 0x23, 0x5e, 0x41, 0x72, 0x29,
	0x27, 0xac, 0xb6, 0x2f, 0x20, 0xec, 0xb4, 0x3c, 0xfe, 0x63, 0x45, 0x8f, 0x19, 0xfd, 0xcf, 0xd9,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x45, 0xd4, 0x88, 0xa5, 0xc6, 0x01, 0x00, 0x00,
}
